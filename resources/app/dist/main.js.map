{"version":3,"sources":["../package.json","../node_modules/wd/package.json","override/override_http.js","override/override_https.js","override/index.js","configs/app.config.js","configs/i18next.config.renderer.js","renderer/actions/ServerMonitor.js","renderer/actions/StartServer.js","renderer/components/Inspector/shared.js","renderer/actions/shared.js","renderer/util.js","renderer/lib/client-frameworks/framework.js","renderer/lib/client-frameworks/js-wd.js","renderer/lib/client-frameworks/js-wdio.js","renderer/lib/client-frameworks/js-oxygen.js","renderer/lib/client-frameworks/java.js","renderer/lib/client-frameworks/python.js","renderer/lib/client-frameworks/ruby.js","renderer/lib/client-frameworks/robot.js","renderer/lib/client-frameworks/index.js","renderer/actions/Inspector.js","renderer/components/AntdTypes.js","renderer/components/Session/ServerTabTestobject.js","renderer/components/Session/ServerTabHeadspin.js","renderer/components/Session/ServerTabBrowserstack.js","renderer/components/Session/ServerTabBitbar.js","renderer/components/Session/ServerTabKobiton.js","renderer/components/Session/ServerTabPerfecto.js","renderer/components/Session/ServerTabPcloudy.js","renderer/components/Session/ServerTabSauce.js","renderer/components/Session/ServerTabTestingbot.js","renderer/components/Session/ServerTabExperitest.js","renderer/components/Session/ServerTabRoboticMobi.js","renderer/components/Session/CloudProviders.js","renderer/actions/Session.js","shared/settings.js","configs/i18next.config.js","main/webviewHelpers.js","main/appium-method-handler.js","main/auto-updater/config.js","main/auto-updater/update-checker.js","../env/.env-dev.js","env.js","main/auto-updater/index.js","main/helpers.js","main/appium.js","main/menus.js","main.js"],"names":["module","exports","name","version","description","repository","type","url","author","email","license","bugs","keywords","assetsPath","homepage","main","scripts","test","e2e","build","watch","start","clean","dev","postinstall","postversion","husky","hooks","productName","appId","asar","directories","output","dmg","artifactName","contents","x","y","path","files","win","target","icon","nsisWeb","oneClick","nsis","linux","category","publish","provider","owner","vPrefixedTagName","bin","electron","dependencies","antd","appium","bluebird","cheerio","history","i18next","lodash","moment","postcss","react","redux","teen_process","temp","uuid","wd","xmldom","xpath","devDependencies","asyncbox","chai","concurrently","devtron","eslint","express","jquery","jsdom","less","mocha","release","request","rimraf","sinon","spectron","devEngines","node","npm","engines","overrideHttpUserAgent","packageJson","require","wdPackageJson","http","originalHttpRequest","options","callback","headers","res","overrideHttpsUserAgent","https","originalHttpsRequest","config","platform","process","languages","namespace","i18n","i18nextOptions","backend","loadPath","join","__dirname","addPath","jsonIndent","interpolation","escapeValue","lng","settings","getSync","fallbackLng","whitelist","wait","isInitialized","use","initReactI18next","i18nextBackend","init","SERVER_STOP_REQ","SERVER_STOP_OK","SERVER_STOP_FAIL","LOGS_RECEIVED","LOGS_CLEARED","MONITOR_CLOSED","START_SESSION_REQUEST","SET_SERVER_ARGS","stopServerReq","stopServerOK","stopServerFailed","reason","startSessionRequest","sessionUUID","serverLogsReceived","logs","setServerArgs","args","monitorClosed","stopListening","removeAllListeners","removeStopListeners","stopServer","dispatch","once","event","message","alert","t","level","msg","setTimeout","send","closeMonitor","clearLogs","getState","logfilePath","startServer","startSession","getRawLogs","openExternal","SERVER_START_REQ","SERVER_START_OK","SERVER_START_ERR","UPDATE_ARGS","SWITCH_TAB","PRESET_SAVE_REQ","PRESET_SAVE_OK","GET_PRESETS","PRESET_DELETE_REQ","PRESET_DELETE_OK","SET_LOGFILE_PATH","PRESETS","evt","preventDefault","serverArgs","removeStartServerListeners","on","updateArgs","switchTab","tabId","savePreset","presets","get","_modified","Date","now","set","e","console","error","getPresets","deletePreset","parseCoordinates","element","bounds","width","height","attributes","boundsArray","split","filter","str","x1","y1","x2","y2","parseInt","isUnique","attrName","attrValue","sourceXML","doc","DOMParser","parseFromString","select","replace","length","STRATEGY_MAPPINGS","getLocators","strategyAlias","strategy","value","SCREENSHOT_INTERACTION_MODE","SELECT","SWIPE","TAP","actionArgTypes","STRING","NUMBER","actionDefinitions","methodName","refresh","INTERACTION_MODE","SOURCE","ACTIONS","clientMethodPromises","bindClient","resp","_","isObject","isEmpty","truncatedResult","truncate","JSON","stringify","util","hasValue","ignoreResult","success","result","duration","elementId","id","promise","resolve","parse","reject","unbindClient","callClientMethod","params","ipcRenderer","Error","Promise","UNIQUE_XPATH_ATTRIBUTES","UNIQUE_CLASS_CHAIN_ATTRIBUTES","UNIQUE_PREDICATE_ATTRIBUTES","xmlToJSON","source","childNodesOf","xmlNode","hasChildNodes","childIdx","childNodes","childNode","item","nodeType","push","translateRecursively","parentPath","index","attrIdx","attr","isNil","classChainSelector","isIOS","getOptimalClassChain","xmlDoc","predicateStringSelector","getOptimalPredicateString","children","map","childIndex","tagName","getOptimalXPath","classChain","predicateString","includes","firstChild","documentElement","domNode","uniqueAttributes","getAttribute","othersWithAttr","XPath","ign","indexOf","parentNode","Array","prototype","slice","call","xpathAttributes","isString","withTranslation","componentCls","hocs","flow","Framework","constructor","host","port","caps","scheme","actions","localVarCount","localVarCache","lastAssignedVar","serverUrl","language","addAction","action","wrapWithBoilerplate","indent","spaces","lines","spaceStr","i","l","trim","getCodeString","includeBoilerplate","genCodeFn","code","getNewLocalVar","getVarForFind","locator","key","wasNew","getVarName","varName","varIndex","codeFor_findAndAssign","codeFor_findElement","localVar","codeFor_tap","codeFor_swipe","JsWdFramework","isArray","suffixMap","codeFor_click","codeFor_clear","codeFor_sendKeys","text","codeFor_back","varNameIgnore","varIndexIgnore","codeFor_getCurrentActivity","codeFor_getCurrentPackage","codeFor_installAppOnDevice","app","codeFor_isAppInstalledOnDevice","codeFor_launchApp","codeFor_backgroundApp","timeout","codeFor_closeApp","codeFor_resetApp","codeFor_removeAppFromDevice","codeFor_getAppStrings","stringFile","codeFor_getClipboard","codeFor_setClipboard","clipboardText","codeFor_pressKeycode","keyCode","metaState","flags","codeFor_longPressKeycode","codeFor_hideDeviceKeyboard","codeFor_isKeyboardShown","codeFor_pushFileToDevice","pathToInstallTo","fileContentString","codeFor_pullFile","pathToPullFrom","codeFor_pullFolder","folderToPullFrom","codeFor_toggleAirplaneMode","codeFor_toggleData","codeFor_toggleWiFi","codeFor_toggleLocationServices","codeFor_sendSMS","phoneNumber","codeFor_gsmCall","codeFor_gsmSignal","signalStrength","codeFor_gsmVoice","state","codeFor_shake","codeFor_lock","seconds","codeFor_unlock","codeFor_isLocked","codeFor_rotateDevice","radius","rotation","touchCount","codeFor_getPerformanceData","packageName","dataType","dataReadTimeout","codeFor_getSupportedPerformanceDataTypes","codeFor_performTouchId","match","codeFor_toggleTouchIdEnrollment","enroll","codeFor_openNotifications","codeFor_getDeviceTime","codeFor_fingerprint","fingerprintId","codeFor_sessionCapabilities","codeFor_setPageLoadTimeout","ms","codeFor_setAsyncScriptTimeout","codeFor_setImplicitWaitTimeout","codeFor_getOrientation","codeFor_setOrientation","orientation","codeFor_getGeoLocation","codeFor_setGeoLocation","latitude","longitude","altitude","codeFor_logTypes","codeFor_log","logType","codeFor_updateSettings","settingsJson","codeFor_settings","codeFor_get","codeFor_url","codeFor_forward","codeFor_refresh","codeFor_currentContext","codeFor_contexts","codeFor_context","readableName","JsWdIoFramework","chainifyCode","proto","codeFor_setCommandTimeout","JsOxygenFramework","JavaFramework","pkg","cls","platformName","toLowerCase","Object","keys","k","codeFor_startActivity","settingName","settingValue","toPairs","PythonFramework","getPythonVal","jsonVal","RubyFramework","RobotFramework","getCapsVariables","getApplicationInitialization","lastID","frameworks","jsWd","jsWdIo","jsOxygen","java","python","ruby","robot","SET_SESSION_DETAILS","SET_SOURCE_AND_SCREENSHOT","SESSION_DONE","SELECT_ELEMENT","UNSELECT_ELEMENT","SET_SELECTED_ELEMENT_ID","SET_INTERACTIONS_NOT_AVAILABLE","METHOD_CALL_REQUESTED","METHOD_CALL_DONE","SET_FIELD_VALUE","SET_EXPANDED_PATHS","SELECT_HOVERED_ELEMENT","UNSELECT_HOVERED_ELEMENT","SHOW_SEND_KEYS_MODAL","HIDE_SEND_KEYS_MODAL","QUIT_SESSION_REQUESTED","QUIT_SESSION_DONE","START_RECORDING","PAUSE_RECORDING","CLEAR_RECORDING","CLOSE_RECORDER","SET_ACTION_FRAMEWORK","SAVED_FRAMEWORK","RECORD_ACTION","SET_SHOW_BOILERPLATE","SHOW_LOCATOR_TEST_MODAL","HIDE_LOCATOR_TEST_MODAL","SET_LOCATOR_TEST_STRATEGY","SET_LOCATOR_TEST_VALUE","SEARCHING_FOR_ELEMENTS","SEARCHING_FOR_ELEMENTS_COMPLETED","GET_FIND_ELEMENTS_TIMES","GET_FIND_ELEMENTS_TIMES_COMPLETED","SET_LOCATOR_TEST_ELEMENT","CLEAR_SEARCH_RESULTS","ADD_ASSIGNED_VAR_CACHE","CLEAR_ASSIGNED_VAR_CACHE","SET_SCREENSHOT_INTERACTION_MODE","SET_SEARCHED_FOR_ELEMENT_BOUNDS","CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS","SET_SWIPE_START","SET_SWIPE_END","CLEAR_SWIPE_ACTION","PROMPT_KEEP_ALIVE","HIDE_PROMPT_KEEP_ALIVE","SELECT_INTERACTION_MODE","SELECT_ACTION_GROUP","SELECT_SUB_ACTION_GROUP","ENTERING_ACTION_ARGS","REMOVE_ACTION","SET_ACTION_ARG","SET_CONTEXT","bindAppium","promptKeepAlive","killedByUser","findElement","debounce","strategyMap","selector","variableName","variableType","inspector","selectedElementPath","selectElement","selectedElementAttributes","selectedElementXPath","selectedElement","expandedPaths","pathArr","splice","paths","unselectElement","selectHoveredElement","unselectHoveredElement","applyClientMethod","isRecording","contexts","contextsError","currentContext","currentContextError","screenshot","windowSize","sourceError","screenshotError","windowSizeError","variableIndex","findAndAssign","concat","addAssignedVarCache","showSendKeysModal","hideSendKeysModal","setFieldValue","setExpandedPaths","quitSession","startRecording","pauseRecording","clearRecording","getSavedActionFramework","framework","setActionFramework","recordAction","closeRecorder","toggleShowBoilerplate","show","showBoilerplate","setSessionDetails","sessionDetails","showLocatorTestModal","hideLocatorTestModal","setLocatorTestValue","locatorTestValue","setLocatorTestStrategy","locatorTestStrategy","setContext","context","searchForElement","elements","fetchArray","el","getFindElementsTimes","findDataSource","findElementsExecutionTimes","find","executionTime","time","sortBy","assignedVarCache","setLocatorTestElement","location","size","B","all","skipRefresh","skipRecord","clearSearchResults","selectScreenshotInteractionMode","screenshotInteractionMode","setSwipeStart","swipeStartX","swipeStartY","setSwipeEnd","swipeEndX","swipeEndY","clearSwipeAction","keepSessionAlive","selectActionGroup","group","selectSubActionGroup","selectInteractionMode","interaction","startEnteringActionArgs","actionName","cancelPendingAction","setActionArg","BUTTON","DEFAULT","PRIMARY","DISABLED","DANGER","ALERT","ERROR","WARNING","INFO","INPUT","TEXT","TEXTAREA","PASSWORD","SUBMIT","ROW","FLEX","FormItem","Form","Item","ServerTabTestobject","Component","render","server","setServerParam","props","placeholder","env","TESTOBJECT_API_KEY","environmentVariable","testobject","apiKey","SessionStyles","addonDataCenter","inputDataCenter","dataCenter","ServerTabHeadspin","customServerInputLeft","headspin","webDriverUrl","localDesc","ServerTabBrowserstack","browserstackUsernamePlaceholder","BROWSERSTACK_USERNAME","browserstackAccessKeyPlaceholder","BROWSERSTACK_ACCESS_KEY","browserstack","username","accessKey","ServerTabBitbar","bitbarApiKeyPlaceholder","BITBAR_API_KEY","bitbar","ServerTabKobiton","kobitonUsernamePlaceholder","KOBITON_USERNAME","kobitonAccessKeyPlaceholder","KOBITON_ACCESS_KEY","kobiton","ServerTabPerfecto","perfectoTokenPlaceholder","PERFECTO_TOKEN","perfecto","hostname","token","ServerTabPcloudy","pcloudy","ServerTabSauce","sauceUsernamePlaceholder","SAUCE_USERNAME","sauceAccessKeyPlaceholder","SAUCE_ACCESS_KEY","sauce","addonDataCenterRadioContainer","useSCProxy","checked","scHost","scPort","ServerTabTestingbot","testingbotKeyPlaceholder","TB_KEY","testingbotSecretPlaceholder","TB_SECRET","testingbot","secret","ServerTabExperitest","experitest","ServerTabRoboticMobi","ROBOTIC_MOBI_TOKEN","roboticmobi","CloudProviders","tabhead","tabText","SauceLogo","tab","logo","TestObjectLogo","HeadSpinLogo","BrowserStackLogo","BitBarLogo","KobitonLogo","PerfectoLogo","PcloudyLogo","TestingBotLogo","ExperitestLogo","RoboticMobiLogo","NEW_SESSION_REQUESTED","NEW_SESSION_BEGAN","NEW_SESSION_DONE","CHANGE_CAPABILITY","SAVE_SESSION_REQUESTED","SAVE_SESSION_DONE","GET_SAVED_SESSIONS_REQUESTED","GET_SAVED_SESSIONS_DONE","SET_CAPABILITY_PARAM","ADD_CAPABILITY","REMOVE_CAPABILITY","SWITCHED_TABS","SET_CAPS","SAVE_AS_MODAL_REQUESTED","HIDE_SAVE_AS_MODAL_REQUESTED","SET_SAVE_AS_TEXT","DELETE_SAVED_SESSION_REQUESTED","DELETE_SAVED_SESSION_DONE","CHANGE_SERVER_TYPE","SET_SERVER_PARAM","SET_SERVER","SESSION_LOADING","SESSION_LOADING_DONE","SAVED_SESSIONS","SESSION_SERVER_PARAMS","SESSION_SERVER_TYPE","SERVER_ARGS","VISIBLE_PROVIDERS","SET_ATTACH_SESS_ID","GET_SESSIONS_REQUESTED","GET_SESSIONS_DONE","ENABLE_DESIRED_CAPS_EDITOR","ABORT_DESIRED_CAPS_EDITOR","SAVE_RAW_DESIRED_CAPS","SET_RAW_DESIRED_CAPS","SHOW_DESIRED_CAPS_JSON_ERROR","IS_ADDING_CLOUD_PROVIDER","SET_PROVIDERS","serverTypes","local","remote","ServerTypes","JSON_TYPES","getCapsObject","assign","cap","obj","showError","secs","errMessage","status","data","setCaps","changeCapability","addCapability","setCapabilityParam","removeCapability","getServerInfo","session","serverType","ssl","TESTOBJECT_HOST","headspinUrl","pathname","protocol","BROWSERSTACK_HOST","BROWSERSTACK_PORT","BITBAR_HOST","KOBITON_HOST","PCLOUDY_USERNAME","PCLOUDY_ACCESS_KEY","TB_HOST","experitestUrl","newSession","attachSessId","desiredCapabilities","addCustomCaps","testobject_api_key","securityToken","testdroid_source","testdroid_apiKey","pCloudy_Username","pCloudy_ApiKey","robotic_mobi_token","rejectUnauthorized","proxy","advanced","allowUnauthorized","useProxy","removeNewSessionListeners","saveSession","savedSessions","newSavedSession","date","getSavedSessions","switchTabs","requestSaveAsModal","hideSaveAsModal","setSaveAsText","saveAsText","deleteSavedSession","newSessions","setAttachSessId","changeServerType","getRunningSessions","debounceGetRunningSessions","setLocalServerParams","undefined","setSavedServerParams","currentProviders","visibleProviders","avoidServerTypes","sessions","removeRunningSessionsListeners","startDesiredCapsEditor","abortDesiredCapsEditor","saveRawDesiredCaps","rawDesiredCaps","capsArray","newCaps","newCapsArray","setRawDesiredCaps","isValidCapsJson","invalidCapsJsonReason","isValidatingCapsJson","addCloudProvider","isAddingProvider","stopAddCloudProvider","addVisibleProvider","providers","removeVisibleProvider","setVisibleProviders","browserName","includeSafariInWebviews","nativeWebScreenshot","chromeOptions","ensureWebviewsHavePages","defaults","getWebviewStatusAddressBarHeight","statBarHeight","isAndroid","dpr","window","devicePixelRatio","osAddressBarDefaultHeight","addressToolBarHeight","screen","innerHeight","setHtmlElementAttributes","webviewStatusAddressBarHeight","htmlElements","document","body","getElementsByTagName","from","forEach","rect","getBoundingClientRect","setAttribute","Math","round","left","top","parseSource","$","remove","html","isDevelopment","NODE_ENV","NATIVE_APP","KEEP_ALIVE_PING_INTERVAL","NO_NEW_COMMAND_LIMIT","WAIT_FOR_USER_KEEP_ALIVE","AppiumMethodHandler","driver","sender","elementCache","elVariableCounter","elArrayVariableCounter","_lastActiveMoment","runKeepAliveLoop","keepAlive","setInterval","sessionCapabilities","waitForUserTimeout","close","killKeepAliveLoop","clearInterval","clearTimeout","fetchElement","timer","timing","Timer","elementOrNull","getDuration","asMilliSeconds","fetchElements","els","_execute","cachedEl","contextsSourceAndScreenshot","apply","TouchAction","tap","perform","startX","startY","endX","endY","press","moveTo","Bluebird","delay","_getContextsSourceAndScreenshot","executeElementCommand","executeMethod","_hasContextsCommand","getWindowSize","_getContexts","execute","takeScreenshot","toLower","_getAndroidContexts","newContexts","getContextData","title","pageTitle","restart","elCache","values","_isAttachedSession","quit","createSession","winId","appiumHandlers","info","handler","killSession","getSessionHandler","baseFeedUrl","getFeedUrl","checkUpdate","currentVersion","j","semver","lt","_ENV_","isDev","runningLocally","RUNNING_LOCALLY","checkNewUpdates","noop","RUNNING_IN_SPECTRON","setFeedURL","getVersion","fromMenu","update","notes","pub_date","pubDate","format","detail","NO_AUTO_UPDATE","showMessageBox","buttons","response","checkForUpdates","emit","releaseNotes","releaseName","quitAndInstall","openBrowserWindow","route","opts","BrowserWindow","minWidth","minHeight","backgroundColor","frame","webPreferences","devTools","nodeIntegration","htmlPath","loadURL","openDevTools","webContents","buildFromTemplate","label","click","inspectElement","popup","setSavedEnv","savedEnv","LOG_SEND_INTERVAL_MS","defaultEnvironmentVariables","clone","logFile","logWatcher","batchedLogs","deleteLogfile","fs","connectStartServer","dir","tempDir","openDir","defaultCapabilities","logHandler","throwInsteadOfExit","writeFile","log","flag","connectStopServer","delete","connectGetDefaultArgs","returnValue","argv","connectCreateNewSessionWindow","createNewSessionWindow","connectClearLogFile","sessionWin","titleBarStyle","sessionID","connectCreateNewSession","windowId","promiseChainRemote","configureHttp","attach","newCommandTimeout","connectHardwareKeyboard","wdNoDefaults","p","connectRestartRecorder","connectKeepAlive","connectClientMethodListener","renderer","methodHandler","deleteSync","getCurrentSessions","appiumPath","connectGetSessionsListener","connectMoveToApplicationsFolder","moveToApplicationsFolder","createNewConfigWindow","parent","connectOpenConfig","connectGetEnv","savedEnvironmentVariables","connectSaveEnv","environmentVariables","pickBy","identity","connectServerErrorBackdoor","initializeIpc","rebuildMenus","menuTemplates","mac","other","mainWindow","languageMenu","languageCode","changeLanguage","showAppInfoClickAction","dialog","appVersion","electronVersion","versions","nodejsVersion","macMenuAppium","submenu","accelerator","macMenuEdit","macMenuView","reload","toggleDevTools","setFullScreen","isFullScreen","macMenuWindow","macMenuHelp","otherMenuFile","fileSubmenu","otherMenuView","otherMenuHelp","mainWin","template","menu","Menu","setApplicationMenu","setMenu","decoratedEnv","shellEnv","sync","installExtensions","installer","extensions","forceDownload","UPGRADE_EXTENSIONS","default","focus","getAllWebContents","wc"],"mappings":"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","file":"main.js","sourceRoot":"..\\app","sourcesContent":["module.exports={name:\"appium-desktop\",version:\"1.21.0\",description:\"Graphical interface for the Appium server, and an app inspector\",repository:{type:\"git\",url:\"git+https://github.com/appium/appium-desktop.git\"},author:{name:\"Appium Developers\",email:\"\",url:\"https://github.com/appium\"},license:\"APACHE2\",bugs:{url:\"https://github.com/appium/appium-desktop/issues\"},keywords:[\"appium\"],assetsPath:\"assets\",homepage:\"https://github.com/appium/appium-desktop\",main:\"dist/main.js\",scripts:{test:\"run-s test:*\",\"test:integration\":\"cross-env NODE_ENV=test mocha --reporter mocha-multi-reporters --reporter-options configFile=./test/mochareporters.json ./test/integration\",\"test:unit\":\"cross-env NODE_ENV=test mocha --reporter mocha-multi-reporters --reporter-options configFile=./test/mochareporters.json ./test/unit/\",\"test:lint\":\"eslint app/ test/\",e2e:\"cross-env FORCE_NO_WRONG_FOLDER=true NODE_ENV=test RUNNING_IN_SPECTRON=true mocha --reporter mocha-multi-reporters --reporter-options configFile=./test/mochareporters.json ./test/e2e\",build:\"run-s build:*\",\"build:main\":\"cross-env NODE_ENV=production parcel build --target node --public-url . --out-dir ./dist --out-file main.js ./app/main.js\",\"build:renderer\":\"cross-env NODE_ENV=production parcel build --no-content-hash --out-dir ./dist --target electron --public-url . ./app/renderer/index.html\",watch:'concurrently \"npm run watch-main\" \"npm run watch-renderer\"',\"watch:main\":\"cross-env NODE_ENV=development parcel --target node --out-dir ./dist --out-file main.js ./app/main.js\",\"watch:renderer\":\"cross-env NODE_ENV=development parcel --out-dir ./dist --target electron --public-url . ./app/renderer/index.html\",start:\"cross-env RUNNING_LOCALLY=true FORCE_NO_WRONG_FOLDER=true electron ./\",clean:\"rimraf dist/\",\"watch-main\":\"cross-env NODE_ENV=development parcel --target node --out-dir ./dist --out-file main.js ./app/main.js\",\"watch-renderer\":\"cross-env NODE_ENV=development parcel --out-dir ./dist --target electron --public-url . ./app/renderer/index.html\",\"build-main-dev\":\"cross-env NODE_ENV=development parcel build --target node --out-dir ./dist --out-file main.js ./app/main.js\",\"build-renderer-dev\":\"cross-env NODE_ENV=development parcel build --out-dir ./dist --target electron --public-url . ./app/renderer/index.html\",\"start-dev\":\"cross-env RUNNING_LOCALLY=true FORCE_NO_WRONG_FOLDER=true NODE_ENV=development electron --inspect ./\",dev:'cross-env NODE_ENV=development npm run build-main-dev && npm run build-renderer-dev && concurrently --kill-others \"npm run start-dev\" \"npm run watch:main\" \"npm run watch:renderer\" ',\"dev-wrong-folder\":\"cross-env WRONG_FOLDER=true npm run dev\",postinstall:\"node ./check-engines package.json package.json && rimraf node_modules/jimp/browser\",postversion:\"git pull --tags && git push && git push --tags\",\"pre-commit\":\"npm run test:lint\",\"pre-push\":\"npm test\",\"crowdin-update\":\"node crowdin-update-resources.js\",\"crowdin-sync\":\"node crowdin-sync-translations.js\"},husky:{hooks:{\"pre-commit\":\"npm run pre-commit\",\"pre-push\":\"npm run pre-push\"}},build:{productName:\"Appium\",appId:\"io.appium.desktop\",asar:!1,directories:{output:\"release\"},dmg:{artifactName:\"${productName}-mac-${version}.${ext}\",contents:[{x:410,y:150,type:\"link\",path:\"/Applications\"},{x:130,y:150,type:\"file\"}]},files:[\"dist/\",\"node_modules/**/*\",\"main.js\",\"main.js.map\",\"package.json\"],win:{artifactName:\"${productName}-windows-${version}.${ext}\",target:[\"nsis\",\"zip\"],icon:\"build/icon.ico\"},nsisWeb:{oneClick:!1},nsis:{oneClick:!1},linux:{artifactName:\"${productName}-linux-${version}.${ext}\",target:[\"AppImage\"],category:\"Development\"},publish:{provider:\"github\",owner:\"appium\",vPrefixedTagName:!0}},bin:{electron:\"./node_modules/.bin/electron\"},dependencies:{\"@babel/polyfill\":\"^7.4.0\",\"ansi-to-html\":\"~0.6.7\",antd:\"~4.0.4\",appium:\"1.21.0\",\"appium-support\":\"^2.25.0\",bluebird:\"^3.5.5\",cheerio:\"^1.0.0-rc.3\",\"connected-react-router\":\"^6.0.0\",\"css-modules-require-hook\":\"^4.2.3\",\"electron-debug\":\"^3.0.0\",\"electron-log\":\"^4.0.0\",\"electron-settings\":\"^2.2.4\",\"electron-updater\":\"^4.2.0\",\"fix-path\":\"^3.0.0\",\"font-awesome\":\"4.x\",\"format-json\":\"1.x\",\"highlight.js\":\"10.x\",history:\"^4.7.2\",i18next:\"^19.0.1\",\"i18next-node-fs-backend\":\"^2.1.1\",lodash:\"4.x\",\"mjpeg-consumer\":\"^2.0.0\",moment:\"^2.20.1\",postcss:\"^7.0.4\",\"prop-types\":\"^15.6.2\",react:\"^16.13.0\",\"react-dom\":\"^16.9.0\",\"react-hot-loader\":\"^4.3.12\",\"react-i18next\":\"^11.0.0\",\"react-redux\":\"^7.0.0\",\"react-router\":\"^5.0.0\",redux:\"^4.0.1\",\"redux-logger\":\"^3.0.6\",\"redux-thunk\":\"2.x\",\"request-promise\":\"^4.2.2\",\"shell-env\":\"^3.0.0\",\"source-map-support\":\"^0.5.0\",teen_process:\"^1.11.0\",temp:\"0.x\",uuid:\"^8.2.0\",wd:\"1.13.0\",xmldom:\"^0.3.0\",xpath:\"0.0.27\"},devDependencies:{\"7zip\":\"0.0.6\",\"@babel/core\":\"^7.4.0\",\"@babel/plugin-transform-runtime\":\"^7.4.0\",\"@babel/register\":\"^7.4.0\",\"appium-fake-driver\":\"^1.0.0\",asar:\"^2.0.0\",asyncbox:\"^2.5.3\",\"babel-eslint\":\"^10.0.1\",\"babel-plugin-transform-class-properties\":\"^6.24.1\",chai:\"^4.2.0\",\"chai-as-promised\":\"^7.1.1\",\"check-engines\":\"^1.5.0\",concurrently:\"^5.0.0\",\"cross-env\":\"^7.0.0\",devtron:\"1.x\",\"dir-compare\":\"^2.0.0\",electron:\"^7.1.2\",\"electron-builder\":\"^22.1.0\",\"electron-builder-lib\":\"^20.15.3\",\"electron-devtools-installer\":\"^3.0.0\",eslint:\"^6.0.0\",\"eslint-config-appium\":\"^4.0.1\",\"eslint-plugin-babel\":\"^5.2.1\",\"eslint-plugin-import\":\"^2.8.0\",\"eslint-plugin-jsx-a11y\":\"^6.1.2\",\"eslint-plugin-mocha\":\"^6.0.0\",\"eslint-plugin-promise\":\"^4.0.1\",\"eslint-plugin-react\":\"^7.12.4\",\"eslint-plugin-react-native\":\"^3.6.0\",\"eslint-plugin-shopify\":\"^30.0.0\",express:\"^4.16.2\",husky:\"^4.0.2\",jquery:\"^3.3.1\",jsdom:\"^16.0.1\",less:\"^2.7.3\",mocha:\"^8.1.3\",\"mocha-junit-reporter\":\"^1.18.0\",\"mocha-multi-reporters\":\"^1.1.7\",\"node-libs-browser\":\"^2.1.0\",\"npm-run-all\":\"^4.1.5\",\"parcel-bundler\":\"^1.10.3\",\"parcel-plugin-asset-copier\":\"^1.0.0\",\"postcss-modules\":\"^1.4.1\",\"react-addons-test-utils\":\"^15.6.2\",release:\"^6.0.1\",request:\"^2.88.0\",rimraf:\"^3.0.0\",\"run-s\":\"0.0.0\",sinon:\"^9.0.0\",spectron:\"^9.0.0\"},devEngines:{node:\">=6.x\",npm:\">=3.x\"},engines:{node:\">=10.x\",npm:\">=5.x\"}};","module.exports={name:\"wd\",description:\"WebDriver/Selenium 2 node.js client\",keywords:[\"testing\",\"automation\",\"webdriver\",\"webdriverjs\",\"selenium\"],version:\"1.13.0\",author:\"Adam Christian <adam.christian@gmail.com>\",contributors:[\"Ruben Daniels (https://github.com/javruben)\",\"Peter Braden (https://github.com/peterbraden)\",\"Seb Vincent (https://github.com/sebv)\",\"Peter 'Pita' Martischka (https://github.com/Pita)\",\"Jonathan Lipps (https://github.com/jlipps)\",\"Phil Sarin (https://github.com/pdsarin)\",\"Mathieu Sabourin (https://github.com/OniOni)\",\"Bjorn Tipling (https://github.com/btipling)\",\"Santiago Suarez Ordonez (https://github.com/santiycr)\",\"Bernard Kobos (https://github.com/bernii)\",\"Jason Carr (https://github.com/maudineormsby)\",\"Matti Schneider <hi@mattischneider.fr> (https://github.com/MattiSG)\"],repository:{type:\"git\",url:\"https://github.com/admc/wd.git\"},license:\"Apache-2.0\",bugs:{url:\"https://github.com/admc/wd/issues\"},engines:[\"node\"],main:\"./lib/main\",bin:{wd:\"./lib/bin.js\"},directories:{lib:\"./lib\"},dependencies:{archiver:\"^3.0.0\",async:\"^2.0.0\",lodash:\"^4.0.0\",mkdirp:\"^0.5.1\",q:\"^1.5.1\",request:\"2.88.0\",vargs:\"^0.1.0\"},devDependencies:{\"bdd-with-opts\":\"^1.1.1\",chai:\"^3.0.0\",\"chai-as-promised\":\"^7.1.1\",colors:\"^1.3.3\",dox:\"^0.9.0\",express:\"^4.16.3\",\"fancy-log\":\"^1.3.3\",gulp:\"^4.0.0\",\"gulp-debug\":\"^4.0.0\",\"gulp-eslint\":\"^5.0.0\",\"gulp-if\":\"^2.0.2\",\"gulp-mocha\":\"^6.0.0\",hbs:\"^4.0.0\",\"http-proxy\":\"^1.15.1\",imageinfo:\"^1.0.4\",istanbul:\"^0.4.5\",mocha:\"^5.2.0\",mu2:\"^0.5.21\",nock:\"^10.0.0\",\"promise-simple\":\"^0.1.0\",\"run-sequence\":\"^2.0.0\",\"sauce-connect-launcher\":\"^1.2.4\",\"spawn-mocha-parallel\":\"^1.3.1\",\"sv-selenium\":\"^0.3.1\",\"underscore.string\":\"^3.3.4\",uuid:\"^3.0.1\",yargs:\"^13.0.0\"},scripts:{test:\"gulp test-unit\",all_tests:\"gulp test\",install:\"node scripts/build-browser-scripts\",clean:\"rm -rf node_modules && rm -f package-lock.json && npm install\",lint:\"gulp lint\",\"lint:fix\":\"gulp lint --fix\"},_resolved:\"https://registry.npmjs.org/wd/-/wd-1.13.0.tgz\",_integrity:\"sha512-Y73EADwIrz1AAmy5G70r/fIM2tzSTdLWjIgCqGlQOr2/k2cC2nho4kWacZdO3xmdsegeQvUkcsGOB74+gC9Wxg==\",_from:\"wd@1.13.0\"};","export const overrideHttpUserAgent = () => {\r\n  const packageJson = require('../../package'),\r\n        wdPackageJson = require('../../node_modules/wd/package'),\r\n        http = require('http'),\r\n        originalHttpRequest = http.request;\r\n\r\n  http.request = function (options, callback) {\r\n    options.headers['User-Agent'] = `admc/${wdPackageJson.name}/${wdPackageJson.version} appium-inspector/${packageJson.version}`;\r\n\r\n    return originalHttpRequest(options, function (res) {\r\n      if (callback) {\r\n        callback(res);\r\n      }\r\n    });\r\n  };\r\n};\r\n","export const overrideHttpsUserAgent = () => {\r\n  const packageJson = require('../../package'),\r\n        wdPackageJson = require('../../node_modules/wd/package'),\r\n        https = require('https'),\r\n        originalHttpsRequest = https.request;\r\n\r\n  https.request = function (options, callback) {\r\n    options.headers['User-Agent'] = `admc/${wdPackageJson.name}/${wdPackageJson.version} appium-inspector/${packageJson.version}`;\r\n\r\n    return originalHttpsRequest(options, function (res) {\r\n      if (callback) {\r\n        callback(res);\r\n      }\r\n    });\r\n  };\r\n};\r\n","import {overrideHttpUserAgent} from './override_http';\r\nimport {overrideHttpsUserAgent} from './override_https';\r\n\r\noverrideHttpUserAgent();\r\noverrideHttpsUserAgent();\r\n","const config = {\r\n  platform: process.platform,\r\n  languages: ['en', 'de', 'ru', 'ja', 'zh-CN', 'ko', 'hi', 'kn', 'ml-IN', 'pa-IN', 'te', 'pt-BR'],\r\n  namespace: 'translation',\r\n};\r\n\r\nexport default config;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport config from './app.config';\r\nimport settings from '../shared/settings';\r\nimport path from 'path';\r\nimport i18nextBackend from 'i18next-node-fs-backend';\r\n\r\nconst i18nextOptions = {\r\n  backend: {\r\n    loadPath: path.join(__dirname, 'locales/{{lng}}/{{ns}}.json'),\r\n    addPath: path.join(__dirname, 'locales/{{lng}}/{{ns}}.json'),\r\n    jsonIndent: 2,\r\n  },\r\n  // debug: true,\r\n  // saveMissing: true,\r\n  interpolation: {\r\n    escapeValue: false\r\n  },\r\n  lng: settings && settings.getSync('PREFERRED_LANGUAGE', 'en') || 'en',\r\n  fallbackLng: config.fallbackLng,\r\n  whitelist: config.languages,\r\n  react: {\r\n    wait: false\r\n  }\r\n};\r\n\r\nif (!i18n.isInitialized) {\r\n  i18n\r\n    .use(initReactI18next)\r\n    .use(i18nextBackend)\r\n    .init(i18nextOptions);\r\n}\r\n\r\nexport default i18n;\r\n","import { ipcRenderer, shell } from 'electron';\r\nimport { push } from 'connected-react-router';\r\nimport i18n from '../../configs/i18next.config.renderer';\r\n\r\nexport const SERVER_STOP_REQ = 'SERVER_STOP_REQ';\r\nexport const SERVER_STOP_OK = 'SERVER_STOP_OK';\r\nexport const SERVER_STOP_FAIL = 'SERVER_STOP_FAIL';\r\nexport const LOGS_RECEIVED = 'LOGS_RECEIVED';\r\nexport const LOGS_CLEARED = 'LOGS_CLEARED';\r\nexport const MONITOR_CLOSED = 'MONITOR_CLOSED';\r\nexport const START_SESSION_REQUEST = 'START_SESSION';\r\nexport const SET_SERVER_ARGS = 'SET_SERVER_ARGS';\r\n\r\nexport function stopServerReq () {\r\n  return {type: SERVER_STOP_REQ};\r\n}\r\n\r\nexport function stopServerOK () {\r\n  return {type: SERVER_STOP_OK};\r\n}\r\n\r\nexport function stopServerFailed (reason) {\r\n  return {type: SERVER_STOP_FAIL, reason};\r\n}\r\n\r\nexport function startSessionRequest (sessionUUID) {\r\n  return {type: START_SESSION_REQUEST, sessionUUID};\r\n}\r\n\r\nexport function serverLogsReceived (logs) {\r\n  return {type: LOGS_RECEIVED, logs};\r\n}\r\n\r\nexport function setServerArgs (args) {\r\n  return {type: SET_SERVER_ARGS, args};\r\n}\r\n\r\nexport function monitorClosed () {\r\n  return {type: MONITOR_CLOSED};\r\n}\r\n\r\nfunction stopListening () {\r\n  ipcRenderer.removeAllListeners('appium-log-line');\r\n  ipcRenderer.removeAllListeners('appium-stop-error');\r\n}\r\n\r\nfunction removeStopListeners () {\r\n  ipcRenderer.removeAllListeners('appium-stop-error');\r\n  ipcRenderer.removeAllListeners('appium-stop-ok');\r\n}\r\n\r\nexport function stopServer () {\r\n  return (dispatch) => {\r\n    dispatch(stopServerReq());\r\n\r\n    ipcRenderer.once('appium-stop-error', (event, message) => {\r\n      alert(i18n.t('stopServerFailed', {message}));\r\n      dispatch(stopServerFailed(message));\r\n      removeStopListeners();\r\n    });\r\n\r\n    stopListening();\r\n\r\n    ipcRenderer.once('appium-stop-ok', () => {\r\n      dispatch(serverLogsReceived([{\r\n        level: 'info',\r\n        msg: 'Appium server stopped successfully'\r\n      }]));\r\n      setTimeout(() => {\r\n        dispatch(stopServerOK());\r\n      }, 0);\r\n      removeStopListeners();\r\n    });\r\n\r\n    ipcRenderer.send('stop-server');\r\n  };\r\n}\r\n\r\nexport function closeMonitor () {\r\n  return (dispatch) => {\r\n    dispatch(monitorClosed());\r\n    dispatch(push('/'));\r\n  };\r\n}\r\n\r\nexport function clearLogs () {\r\n  return (dispatch, getState) => {\r\n    const logfilePath = getState().startServer.logfilePath;\r\n    if (logfilePath) {\r\n      ipcRenderer.send('appium-clear-logfile', {logfilePath});\r\n    }\r\n    dispatch({type: LOGS_CLEARED});\r\n  };\r\n}\r\n\r\nexport function startSession () {\r\n  return (dispatch) => {\r\n    dispatch({type: START_SESSION_REQUEST});\r\n    ipcRenderer.send('create-new-session-window');\r\n  };\r\n}\r\n\r\nexport function getRawLogs () {\r\n  return (dispatch, getState) => {\r\n    const logfilePath = getState().startServer.logfilePath;\r\n    if (logfilePath) {\r\n      shell.openExternal(`file://${logfilePath}`);\r\n    } else {\r\n      alert(i18n.t('logsNotAvailableError'));\r\n    }\r\n  };\r\n}","/* eslint-disable no-console */\r\nimport { ipcRenderer } from 'electron';\r\nimport { push } from 'connected-react-router';\r\nimport { serverLogsReceived, clearLogs, setServerArgs } from './ServerMonitor';\r\nimport settings from '../../shared/settings';\r\nimport i18n from '../../configs/i18next.config.renderer';\r\n\r\nexport const SERVER_START_REQ = 'SERVER_START_REQ';\r\nexport const SERVER_START_OK = 'SERVER_START_OK';\r\nexport const SERVER_START_ERR = 'SERVER_START_ERR';\r\nexport const UPDATE_ARGS = 'UPDATE_ARGS';\r\nexport const SWITCH_TAB = 'SWITCH_TAB';\r\nexport const PRESET_SAVE_REQ = 'PRESET_SAVE_REQ';\r\nexport const PRESET_SAVE_OK = 'PRESET_SAVE_OK';\r\nexport const GET_PRESETS = 'GET_PRESETS';\r\nexport const PRESET_DELETE_REQ = 'PRESET_DELETE_REQ';\r\nexport const PRESET_DELETE_OK = 'PRESET_DELETE_OK';\r\nexport const SET_LOGFILE_PATH = 'SET_LOGFILE_PATH';\r\n\r\nexport const PRESETS = 'presets';\r\n\r\nexport function startServer (evt) {\r\n  evt.preventDefault();\r\n  return (dispatch, getState) => {\r\n    // signal to the UI that we are beginning our request\r\n    dispatch({type: SERVER_START_REQ});\r\n    const {serverArgs} = getState().startServer;\r\n\r\n    // if we get an error from electron, fail with the message\r\n    ipcRenderer.once('appium-start-error', (event, message) => {\r\n      // don't listen for log lines any more if we failed to start, other-\r\n      // wise we'll start to stack listeners for subsequent attempts\r\n      ipcRenderer.removeAllListeners('appium-log-line');\r\n      alert(i18n.t('errorStartingServer', {message}));\r\n      dispatch({type: SERVER_START_ERR});\r\n      removeStartServerListeners();\r\n    });\r\n\r\n    ipcRenderer.once('appium-start-ok', () => {\r\n      // don't listen for subsequent server start failures later in the\r\n      // lifetime of this app instance\r\n      ipcRenderer.removeAllListeners('appium-start-error');\r\n      dispatch({type: SERVER_START_OK});\r\n      dispatch(setServerArgs(serverArgs));\r\n      dispatch(push('/monitor'));\r\n      removeStartServerListeners();\r\n    });\r\n\r\n    ipcRenderer.on('appium-log-line', (event, logs) => {\r\n      dispatch(serverLogsReceived(logs));\r\n    });\r\n\r\n    dispatch(clearLogs());\r\n    ipcRenderer.once('path-to-logs', (event, logfilePath) => dispatch({type: SET_LOGFILE_PATH, logfilePath}));\r\n    ipcRenderer.send('start-server', serverArgs);\r\n  };\r\n}\r\n\r\nfunction removeStartServerListeners () {\r\n  ipcRenderer.removeAllListeners('appium-start-error');\r\n  ipcRenderer.removeAllListeners('appium-start-ok');\r\n}\r\n\r\nexport function updateArgs (args) {\r\n  return (dispatch) => {\r\n    dispatch({type: UPDATE_ARGS, args});\r\n  };\r\n}\r\n\r\nexport function switchTab (tabId) {\r\n  return (dispatch) => {\r\n    dispatch({type: SWITCH_TAB, tabId});\r\n  };\r\n}\r\n\r\nexport function savePreset (name, args) {\r\n  return async (dispatch) => {\r\n    dispatch({type: PRESET_SAVE_REQ});\r\n    let presets = await settings.get(PRESETS);\r\n    try {\r\n      presets[name] = args;\r\n      presets[name]._modified = Date.now();\r\n      await settings.set(PRESETS, presets);\r\n    } catch (e) {\r\n      console.error(e);\r\n      alert(i18n.t('errorSavingPreset', {message: e.message}));\r\n    }\r\n    dispatch({type: PRESET_SAVE_OK, presets});\r\n  };\r\n}\r\n\r\nexport function getPresets () {\r\n  return async (dispatch) => {\r\n    try {\r\n      let presets = await settings.get(PRESETS);\r\n      dispatch({type: GET_PRESETS, presets});\r\n    } catch (e) {\r\n      console.error(e);\r\n      alert(i18n.t('errorGettingPreset', {message: e.message}));\r\n    }\r\n  };\r\n}\r\n\r\nexport function deletePreset (name) {\r\n  return async (dispatch) => {\r\n    dispatch({type: PRESET_DELETE_REQ});\r\n    let presets = await settings.get(PRESETS);\r\n    try {\r\n      delete presets[name];\r\n      await settings.set(PRESETS);\r\n    } catch (e) {\r\n      console.error(e);\r\n      alert(i18n.t('errorDeletingPreset', {message: e.message}));\r\n    }\r\n    dispatch({type: PRESET_DELETE_OK, presets});\r\n  };\r\n}","import { DOMParser } from 'xmldom';\r\nimport xpath from 'xpath';\r\n\r\nexport function parseCoordinates (element) {\r\n  let {bounds, x, y, width, height} = element.attributes || {};\r\n\r\n  if (bounds) {\r\n    let boundsArray = bounds.split(/\\[|\\]|,/).filter((str) => str !== '');\r\n    return {x1: boundsArray[0], y1: boundsArray[1], x2: boundsArray[2], y2: boundsArray[3]};\r\n  } else if (x) {\r\n    x = parseInt(x, 10);\r\n    y = parseInt(y, 10);\r\n    width = parseInt(width, 10);\r\n    height = parseInt(height, 10);\r\n    return {x1: x, y1: y, x2: x + width, y2: y + height};\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n\r\nexport function isUnique (attrName, attrValue, sourceXML) {\r\n  // If no sourceXML provided, assume it's unique\r\n  if (!sourceXML) {\r\n    return true;\r\n  }\r\n  const doc = new DOMParser().parseFromString(sourceXML);\r\n  return xpath.select(`//*[@${attrName}=\"${attrValue.replace(/\"/g, '')}\"]`, doc).length < 2;\r\n}\r\n\r\n// Map of the optimal strategies.\r\nconst STRATEGY_MAPPINGS = [\r\n  ['name', 'accessibility id'],\r\n  ['content-desc', 'accessibility id'],\r\n  ['id', 'id'],\r\n  ['rntestid', 'id'],\r\n  ['resource-id', 'id'],\r\n];\r\n\r\nexport function getLocators (attributes, sourceXML) {\r\n  const res = {};\r\n  for (let [strategyAlias, strategy] of STRATEGY_MAPPINGS) {\r\n    const value = attributes[strategyAlias];\r\n    if (value && isUnique(strategyAlias, value, sourceXML)) {\r\n      res[strategy] = attributes[strategyAlias];\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\nexport const SCREENSHOT_INTERACTION_MODE = {\r\n  SELECT: 'select',\r\n  SWIPE: 'swipe',\r\n  TAP: 'tap',\r\n};\r\n\r\nexport const actionArgTypes = {\r\n  STRING: 'string',\r\n  NUMBER: 'number',\r\n};\r\n\r\nconst { STRING, NUMBER } = actionArgTypes;\r\n\r\n// Note: When adding or removing actionDefinitions, update `en/translation.json`\r\nexport const actionDefinitions = {\r\n  'Device': {\r\n    'Execute Mobile': {\r\n      'Execute': {methodName: 'execute', args: [['command', STRING], ['jsonArgument', STRING]]}\r\n    },\r\n    'Android Activity': {\r\n      'Start Activity': {methodName: 'startActivity', args: [\r\n        ['appPackage', STRING], ['appActivity', STRING], ['appWaitPackage', STRING],\r\n        ['intentAction', STRING], ['intentCategory', STRING], ['intentFlags', STRING],\r\n        ['optionalIntentArguments', STRING], ['dontStopAppOnReset', STRING],\r\n      ], refresh: true},\r\n      'Current Activity': {methodName: 'getCurrentActivity'},\r\n      'Current Package': {methodName: 'getCurrentPackage'},\r\n    },\r\n    'App': {\r\n      'Install App': {methodName: 'installAppOnDevice', args: [['appPathOrUrl', STRING]]},\r\n      'Is App Installed': {methodName: 'isAppInstalledOnDevice', args: [['appId', STRING]]},\r\n      'Launch App': {methodName: 'launchApp', refresh: true},\r\n      'Background App': {methodName: 'backgroundApp', args: [['timeout', NUMBER]], refresh: true},\r\n      'Close App': {methodName: 'closeApp', refresh: true},\r\n      'Reset App': {methodName: 'resetApp', refresh: true},\r\n      'Remove App': {methodName: 'removeAppFromDevice', args: [['bundleId', STRING]]},\r\n      'Get App Strings': {methodName: 'getAppStrings', args: [['language', STRING], ['stringFile', STRING]], refresh: true},\r\n    },\r\n    'Clipboard': {\r\n      'Get Clipboard': {methodName: 'getClipboard'},\r\n      'Set Clipboard': {methodName: 'setClipboard', args: [['clipboardText', STRING]]},\r\n    },\r\n    'File': {\r\n      'Push File': {methodName: 'pushFileToDevice', args: [['pathToInstallTo', STRING], ['fileContentString', STRING]]},\r\n      'Pull File': {methodName: 'pullFile', args: [['pathToPullFrom', STRING]]},\r\n      'Pull Folder': {methodName: 'pullFolder', args: [['folderToPullFrom', STRING]]},\r\n    },\r\n    'Interaction': {\r\n      'Shake': {methodName: 'shake'},\r\n      'Lock': {methodName: 'lock', args: [['seconds', NUMBER]], refresh: true},\r\n      'Unlock': {methodName: 'unlock', refresh: true},\r\n      'Is Device Locked': {methodName: 'isLocked'},\r\n      'Rotate Device': {methodName: 'rotateDevice', args: [\r\n        ['x', NUMBER], ['y', NUMBER], ['radius', NUMBER], ['rotatation', NUMBER], ['touchCount', NUMBER], ['duration', NUMBER]\r\n      ], refresh: true},\r\n    },\r\n    'Keys': {\r\n      'Press Key': {methodName: 'pressKeycode', args: [['keyCode', NUMBER], ['metaState', NUMBER], ['flags', NUMBER]], refresh: true},\r\n      'Long Press Key': {methodName: 'longPressKeycode', args: [['keyCode', NUMBER], ['metaState', NUMBER], ['flags', NUMBER]], refresh: true},\r\n      'Hide Keyboard': {methodName: 'hideDeviceKeyboard', refresh: true},\r\n      'Is Keyboard Shown': {methodName: 'isKeyboardShown'},\r\n    },\r\n    'Network': {\r\n      'Toggle Airplane Mode': {methodName: 'toggleAirplaneMode'},\r\n      'Toggle Data': {methodName: 'toggleData'},\r\n      'Toggle WiFi': {methodName: 'toggleWiFi'},\r\n      'Toggle Location Services': {methodName: 'toggleLocationServices'},\r\n      'Send SMS': {methodName: 'sendSMS', args: [['phoneNumber', STRING], ['text', STRING]]},\r\n      'GSM Call': {methodName: 'gsmCall', args: [['phoneNumber', STRING], ['action', STRING]]},\r\n      'GSM Signal': {methodName: 'gsmSignal', args: [['signalStrengh', NUMBER]]},\r\n      'GSM Voice': {methodName: 'gsmVoice', args: [['state', STRING]]},\r\n    },\r\n    'Performance Data': {\r\n      'Get Data': {methodName: 'getPerformanceData', args: [['packageName', STRING], ['dataType', STRING], ['dataReadTimeout', NUMBER]]},\r\n      'Get Data Types': {methodName: 'getSupportedPerformanceDataTypes'},\r\n    },\r\n    'iOS Simulator': {\r\n      'Perform Touch Id': {methodName: 'performTouchId', args: [['match', STRING]], refresh: true},\r\n      'Toggle Touch Id Enrollment': {methodName: 'toggleTouchIdEnrollment', args: [['enroll', STRING]]},\r\n    },\r\n    'System': {\r\n      'Open Notifications': {methodName: 'openNotifications', refresh: true},\r\n      'Get System Time': {methodName: 'getDeviceTime'},\r\n      'Fingerprint (Android)': {methodName: 'fingerprint', args: [['fingerPrintId', NUMBER]], refresh: true}\r\n    },\r\n  },\r\n  'Session': {\r\n    'Session Capabilities': {\r\n      'Get Session Capabilities': {methodName: 'sessionCapabilities'}\r\n    },\r\n    'Timeouts': {\r\n      'Set Pageload Timeout': {methodName: 'setPageLoadTimeout', args: [['timeout', NUMBER]]},\r\n      'Set Script Timeout': {methodName: 'setAsyncScriptTimeout', args: [['timeout', NUMBER]]},\r\n      'Set Implicit Timeout': {methodName: 'setImplicitWaitTimeout', args: [['timeout', NUMBER]]},\r\n    },\r\n    'Orientation': {\r\n      'Get Orientation': {methodName: 'getOrientation'},\r\n      'Set Orientation': {methodName: 'setOrientation', args: [['orientation', STRING]], refresh: true},\r\n    },\r\n    'Geolocation': {\r\n      'Get Geolocation': {methodName: 'getGeoLocation'},\r\n      'Set Geolocation': {methodName: 'setGeoLocation', args: [['latitude', NUMBER], ['longitude', NUMBER], ['altitude', NUMBER]]},\r\n    },\r\n    'Logs': {\r\n      'Get Log Types': {methodName: 'logTypes'},\r\n      'Get Logs': {methodName: 'log', args: [['logType', STRING]]},\r\n    },\r\n    'Settings': {\r\n      'Update Settings': {methodName: 'updateSettings', args: [['settingsJson', STRING]]},\r\n      'Get Device Settings': {methodName: 'settings'},\r\n    },\r\n  },\r\n  'Web': {\r\n    'Navigation': {\r\n      'Go to URL': {methodName: 'get', args: [['url', STRING]], refresh: true},\r\n      'Get URL': {methodName: 'url'},\r\n      'Back': {methodName: 'back', refresh: true},\r\n      'Forward': {methodName: 'forward', refresh: true},\r\n      'Refresh': {methodName: 'refresh', refresh: true}\r\n    }\r\n  },\r\n  'Context': {\r\n    'Context': {\r\n      'Get Context': {methodName: 'currentContext'},\r\n      'Get All Context': {methodName: 'contexts'},\r\n      'Set Context': {methodName: 'context', args: [['contextRef', STRING]], refresh: true}\r\n    }\r\n  }\r\n};\r\n\r\nexport const INTERACTION_MODE = {\r\n  SOURCE: 'source',\r\n  ACTIONS: 'actions',\r\n};\r\n","import { ipcRenderer } from 'electron';\r\nimport { notification } from 'antd';\r\nimport { util } from 'appium-support';\r\nimport i18n from '../../configs/i18next.config.renderer';\r\nimport _ from 'lodash';\r\nimport { v4 as UUID } from 'uuid';\r\nimport Promise from 'bluebird';\r\n\r\nconst clientMethodPromises = {};\r\n\r\nexport function bindClient () {\r\n  /**\r\n   * When we hear back from the main process, resolve the promise\r\n   */\r\n  ipcRenderer.removeAllListeners('appium-client-command-response');\r\n  ipcRenderer.on('appium-client-command-response', (evt, resp) => {\r\n    // Rename 'id' to 'elementId'\r\n    let {res, methodName} = resp;\r\n\r\n    // Ignore empty objects\r\n    if (_.isObject(res) && _.isEmpty(res)) {\r\n      res = null;\r\n    }\r\n\r\n    const truncatedResult = _.truncate(JSON.stringify(res), {length: 2000});\r\n\r\n    if (util.hasValue(res) && !resp.ignoreResult) {\r\n      notification.success({\r\n        message: i18n.t('methodCallResult', {methodName}),\r\n        description: i18n.t('commandWasReturnedWithResult', {result: truncatedResult}),\r\n        duration: 15,\r\n      });\r\n    }\r\n    resp.elementId = resp.id;\r\n    let promise = clientMethodPromises[resp.uuid];\r\n    if (promise) {\r\n      promise.resolve(resp);\r\n      delete clientMethodPromises[resp.uuid];\r\n    }\r\n  });\r\n\r\n  /**\r\n   * If we hear back with an error, reject the promise\r\n   */\r\n  ipcRenderer.on('appium-client-command-response-error', (evt, resp) => {\r\n    let {e, uuid} = resp;\r\n    e = JSON.parse(e);\r\n    let promise = clientMethodPromises[uuid];\r\n    if (promise) {\r\n      promise.reject(e);\r\n      delete clientMethodPromises[uuid];\r\n    }\r\n  });\r\n}\r\n\r\nexport function unbindClient () {\r\n  ipcRenderer.removeAllListeners('appium-client-command-response');\r\n  ipcRenderer.removeAllListeners('appium-client-command-response-error');\r\n}\r\n\r\nexport function callClientMethod (params) {\r\n  if (!ipcRenderer) {\r\n    throw new Error('Cannot call ipcRenderer from main context');\r\n  }\r\n  let uuid = UUID();\r\n  let promise = new Promise((resolve, reject) => clientMethodPromises[uuid] = {resolve, reject});\r\n  ipcRenderer.send('appium-client-command-request', {\r\n    ...params,\r\n    uuid,\r\n  });\r\n  return promise;\r\n}","import XPath from 'xpath';\r\nimport { withTranslation as wt } from 'react-i18next';\r\nimport _ from 'lodash';\r\nimport log from 'electron-log';\r\nimport config from '../configs/app.config';\r\nimport { DOMParser } from 'xmldom';\r\n\r\n// Attributes on nodes that we know are unique to the node\r\nconst UNIQUE_XPATH_ATTRIBUTES = [\r\n  'name',\r\n  'content-desc',\r\n  'id',\r\n  'accessibility-id',\r\n];\r\nconst UNIQUE_CLASS_CHAIN_ATTRIBUTES = [\r\n  'label',\r\n  'name',\r\n  'value',\r\n];\r\nconst UNIQUE_PREDICATE_ATTRIBUTES = [\r\n  'label',\r\n  'name',\r\n  'value',\r\n  'type',\r\n];\r\n\r\n/**\r\n * Translates sourceXML to JSON\r\n *\r\n * @param {string} source\r\n * @returns {Object}\r\n */\r\nexport function xmlToJSON (source) {\r\n  const childNodesOf = (xmlNode) => {\r\n    if (!xmlNode || !xmlNode.hasChildNodes()) {\r\n      return [];\r\n    }\r\n\r\n    const result = [];\r\n    for (let childIdx = 0; childIdx < xmlNode.childNodes.length; ++childIdx) {\r\n      const childNode = xmlNode.childNodes.item(childIdx);\r\n      if (childNode.nodeType === 1) {\r\n        result.push(childNode);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n  const translateRecursively = (xmlNode, parentPath = '', index = null) => {\r\n    const attributes = {};\r\n    for (let attrIdx = 0; attrIdx < xmlNode.attributes.length; ++attrIdx) {\r\n      const attr = xmlNode.attributes.item(attrIdx);\r\n      attributes[attr.name] = attr.value;\r\n    }\r\n\r\n    // Dot Separated path of indices\r\n    const path = _.isNil(index) ? '' : `${!parentPath ? '' : parentPath + '.'}${index}`;\r\n    const classChainSelector = isIOS ? getOptimalClassChain(xmlDoc, xmlNode, UNIQUE_CLASS_CHAIN_ATTRIBUTES) : '';\r\n    const predicateStringSelector = isIOS ? getOptimalPredicateString(xmlDoc, xmlNode, UNIQUE_PREDICATE_ATTRIBUTES) : '';\r\n\r\n    return {\r\n      children: childNodesOf(xmlNode)\r\n        .map((childNode, childIndex) => translateRecursively(childNode, path, childIndex)),\r\n      tagName: xmlNode.tagName,\r\n      attributes,\r\n      xpath: getOptimalXPath(xmlDoc, xmlNode, UNIQUE_XPATH_ATTRIBUTES),\r\n      ...(isIOS ? {classChain: classChainSelector ? `**${classChainSelector}` : ''} : {}),\r\n      ...(isIOS ? {predicateString: predicateStringSelector ? predicateStringSelector : ''} : {}),\r\n      path,\r\n    };\r\n  };\r\n  const isIOS = source.includes('XCUIElement');\r\n  const xmlDoc = new DOMParser().parseFromString(source);\r\n  const firstChild = childNodesOf(xmlDoc.documentElement)[0];\r\n\r\n  return firstChild ? translateRecursively(firstChild) : {};\r\n}\r\n\r\n/**\r\n * Get an optimal XPath for a DOMNode\r\n *\r\n * @param {DOMDocument} doc\r\n * @param {DOMNode} domNode\r\n * @param {Array<String>} uniqueAttributes Attributes we know are unique (defaults to just 'id')\r\n * @returns {string|null}\r\n */\r\nexport function getOptimalXPath (doc, domNode, uniqueAttributes = ['id']) {\r\n  try {\r\n    // BASE CASE #1: If this isn't an element, we're above the root, return empty string\r\n    if (!domNode.tagName || domNode.nodeType !== 1) {\r\n      return '';\r\n    }\r\n\r\n    // BASE CASE #2: If this node has a unique attribute, return an absolute XPath with that attribute\r\n    for (let attrName of uniqueAttributes) {\r\n      const attrValue = domNode.getAttribute(attrName);\r\n      if (attrValue) {\r\n        let xpath = `//${domNode.tagName || '*'}[@${attrName}=\"${attrValue}\"]`;\r\n        let othersWithAttr;\r\n\r\n        // If the XPath does not parse, move to the next unique attribute\r\n        try {\r\n          othersWithAttr = XPath.select(xpath, doc);\r\n        } catch (ign) {\r\n          continue;\r\n        }\r\n\r\n        // If the attribute isn't actually unique, get it's index too\r\n        if (othersWithAttr.length > 1) {\r\n          let index = othersWithAttr.indexOf(domNode);\r\n          xpath = `(${xpath})[${index + 1}]`;\r\n        }\r\n        return xpath;\r\n      }\r\n    }\r\n\r\n    // Get the relative xpath of this node using tagName\r\n    let xpath = `/${domNode.tagName}`;\r\n\r\n    // If this node has siblings of the same tagName, get the index of this node\r\n    if (domNode.parentNode) {\r\n      // Get the siblings\r\n      const childNodes = Array.prototype.slice.call(domNode.parentNode.childNodes, 0).filter((childNode) => (\r\n        childNode.nodeType === 1 && childNode.tagName === domNode.tagName\r\n      ));\r\n\r\n      // If there's more than one sibling, append the index\r\n      if (childNodes.length > 1) {\r\n        let index = childNodes.indexOf(domNode);\r\n        xpath += `[${index + 1}]`;\r\n      }\r\n    }\r\n\r\n    // Make a recursive call to this nodes parents and prepend it to this xpath\r\n    return getOptimalXPath(doc, domNode.parentNode, uniqueAttributes) + xpath;\r\n  } catch (error) {\r\n    // If there's an unexpected exception, abort and don't get an XPath\r\n    log.error(`The most optimal XPATH could not be determined because an error was thrown: '${JSON.stringify(error, null, 2)}'`);\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Get an optimal Class Chain for a DOMNode based on the getOptimalXPath method\r\n *\r\n * @param {DOMDocument} doc\r\n * @param {DOMNode} domNode\r\n * @param {Array<String>} uniqueAttributes Attributes we know are unique\r\n * @returns {string|null}\r\n */\r\nfunction getOptimalClassChain (doc, domNode, uniqueAttributes) {\r\n  try {\r\n    // BASE CASE #1: If this isn't an element, we're above the root, or this is `XCUIElementTypeApplication`,\r\n    // which is not an official XCUITest element, return empty string\r\n    if (!domNode.tagName || domNode.nodeType !== 1 || domNode.tagName === 'XCUIElementTypeApplication') {\r\n      return '';\r\n    }\r\n\r\n    // BASE CASE #2: If this node has a unique class chain based on attributes then return it\r\n    for (let attrName of uniqueAttributes) {\r\n      const attrValue = domNode.getAttribute(attrName);\r\n      if (attrValue) {\r\n        let xpath = `//${domNode.tagName || '*'}[@${attrName}=\"${attrValue}\"]`;\r\n        let classChain = `/${domNode.tagName || '*'}[\\`${attrName} == \"${attrValue}\"\\`]`;\r\n        let othersWithAttr;\r\n\r\n        // If the XPath does not parse, move to the next unique attribute\r\n        try {\r\n          othersWithAttr = XPath.select(xpath, doc);\r\n        } catch (ign) {\r\n          continue;\r\n        }\r\n\r\n        // If the attribute isn't actually unique, get it's index too\r\n        if (othersWithAttr.length > 1) {\r\n          let index = othersWithAttr.indexOf(domNode);\r\n          classChain = `${classChain}[${index + 1}]`;\r\n        }\r\n        return classChain;\r\n      }\r\n    }\r\n\r\n    // Get the relative xpath of this node using tagName\r\n    let classChain = `/${domNode.tagName}`;\r\n\r\n    // If this node has siblings of the same tagName, get the index of this node\r\n    if (domNode.parentNode) {\r\n      // Get the siblings\r\n      const childNodes = Array.prototype.slice.call(domNode.parentNode.childNodes, 0).filter((childNode) => (\r\n        childNode.nodeType === 1 && childNode.tagName === domNode.tagName\r\n      ));\r\n\r\n      // If there's more than one sibling, append the index\r\n      if (childNodes.length > 1) {\r\n        let index = childNodes.indexOf(domNode);\r\n        classChain += `[${index + 1}]`;\r\n      }\r\n    }\r\n\r\n    // Make a recursive call to this nodes parents and prepend it to this xpath\r\n    return getOptimalClassChain(doc, domNode.parentNode, uniqueAttributes) + classChain;\r\n  } catch (error) {\r\n    // If there's an unexpected exception, abort and don't get an XPath\r\n    log.error(`The most optimal '-ios class chain' could not be determined because an error was thrown: '${JSON.stringify(error, null, 2)}'`);\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Get an optimal Predicate String for a DOMNode based on the getOptimalXPath method\r\n * The `ios predicate string` can only search a single element, no parent child scope\r\n *\r\n * @param {DOMDocument} doc\r\n * @param {DOMNode} domNode\r\n * @param {Array<String>} uniqueAttributes Attributes we know are unique\r\n * @returns {string|null}\r\n */\r\nfunction getOptimalPredicateString (doc, domNode, uniqueAttributes) {\r\n  try {\r\n    // BASE CASE #1: If this isn't an element, we're above the root, or this is `XCUIElementTypeApplication`,\r\n    // which is not an official XCUITest element, return empty string\r\n    if (!domNode.tagName || domNode.nodeType !== 1 || domNode.tagName === 'XCUIElementTypeApplication') {\r\n      return '';\r\n    }\r\n\r\n    // BASE CASE #2: Check all attributes and try to find the best way\r\n    let xpathAttributes = [];\r\n    let predicateString = [];\r\n\r\n    for (let attrName of uniqueAttributes) {\r\n      const attrValue = domNode.getAttribute(attrName);\r\n\r\n      if (_.isNil(attrValue) || _.isString(attrValue) && attrValue.length === 0) {\r\n        continue;\r\n      }\r\n\r\n      xpathAttributes.push(`@${attrName}=\"${attrValue}\"`);\r\n      const xpath = `//*[${xpathAttributes.join(' and ')}]`;\r\n      predicateString.push(`${attrName} == \"${attrValue}\"`);\r\n      let othersWithAttr;\r\n\r\n      // If the XPath does not parse, move to the next unique attribute\r\n      try {\r\n        othersWithAttr = XPath.select(xpath, doc);\r\n      } catch (ign) {\r\n        continue;\r\n      }\r\n\r\n      // If the attribute isn't actually unique, get it's index too\r\n      if (othersWithAttr.length === 1) {\r\n        return predicateString.join(' AND ');\r\n      }\r\n    }\r\n  } catch (error) {\r\n    // If there's an unexpected exception, abort and don't get an XPath\r\n    log.error(`The most optimal '-ios predicate string' could not be determined because an error was thrown: '${JSON.stringify(error, null, 2)}'`);\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function withTranslation (componentCls, ...hocs) {\r\n  return _.flow(\r\n    ...hocs,\r\n    wt(config.namespace),\r\n  )(componentCls);\r\n}\r\n","export default class Framework {\r\n\r\n  constructor (host, port, path, https, caps) {\r\n    this.host = host || 'localhost';\r\n    this.port = port || 4723;\r\n    this.path = path || '/wd/hub';\r\n    this.caps = caps || {};\r\n    this.https = !!https;\r\n    this.scheme = https ? 'https' : 'http';\r\n    this.actions = [];\r\n    this.localVarCount = 0;\r\n    this.localVarCache = {};\r\n    this.lastAssignedVar = null;\r\n  }\r\n\r\n  get serverUrl () {\r\n    return `${this.scheme}://${this.host}:${this.port}${this.path}`;\r\n  }\r\n\r\n  get name () {\r\n    throw new Error('Must implement name getter');\r\n  }\r\n\r\n  get language () {\r\n    throw new Error('Must implement language getter');\r\n  }\r\n\r\n  addAction (action, params) {\r\n    this.actions.push({action, params});\r\n  }\r\n\r\n  wrapWithBoilerplate () {\r\n    throw new Error('Must implement wrapWithBoilerplate');\r\n  }\r\n\r\n  indent (str, spaces) {\r\n    let lines = str.split('\\n');\r\n    let spaceStr = '';\r\n    for (let i = 0; i < spaces; i++) {\r\n      spaceStr += ' ';\r\n    }\r\n    return lines\r\n      .filter((l) => !!l.trim())\r\n      .map((l) => `${spaceStr}${l}`)\r\n      .join('\\n');\r\n  }\r\n\r\n  getCodeString (includeBoilerplate = false) {\r\n    let str = '';\r\n    for (let {action, params} of this.actions) {\r\n      let genCodeFn = `codeFor_${action}`;\r\n      if (!this[genCodeFn]) {\r\n        throw new Error(`Need to implement 'codeFor_${action}()'`);\r\n      }\r\n      let code = this[genCodeFn](...params);\r\n      if (code) {\r\n        str += `${code}\\n`;\r\n      }\r\n    }\r\n    if (includeBoilerplate) {\r\n      return this.wrapWithBoilerplate(str);\r\n    }\r\n    return str;\r\n  }\r\n\r\n  getNewLocalVar () {\r\n    this.localVarCount++;\r\n    return `el${this.localVarCount}`;\r\n  }\r\n\r\n  getVarForFind (strategy, locator) {\r\n    const key = `${strategy}-${locator}`;\r\n    let wasNew = false;\r\n    if (!this.localVarCache[key]) {\r\n      this.localVarCache[key] = this.getNewLocalVar();\r\n      wasNew = true;\r\n    }\r\n    this.lastAssignedVar = this.localVarCache[key];\r\n    return [this.localVarCache[key], wasNew];\r\n  }\r\n\r\n  getVarName (varName, varIndex) {\r\n    if (varIndex || varIndex === 0) {\r\n      return `${varName}[${varIndex}]`;\r\n    }\r\n    return varName;\r\n  }\r\n\r\n  codeFor_findAndAssign () {\r\n    throw new Error('Need to implement codeFor_findAndAssign');\r\n  }\r\n\r\n  codeFor_findElement (strategy, locator) {\r\n    let [localVar, wasNew] = this.getVarForFind(strategy, locator);\r\n    if (!wasNew) {\r\n      // if we've already found this element, don't print out\r\n      // finding it again\r\n      return '';\r\n    }\r\n\r\n    return this.codeFor_findAndAssign(strategy, locator, localVar);\r\n\r\n  }\r\n\r\n  codeFor_tap () {\r\n    throw new Error('Need to implement codeFor_tap');\r\n  }\r\n\r\n  codeFor_swipe () {\r\n    throw new Error('Need to implement codeFor_tap');\r\n  }\r\n}\r\n","import Framework from './framework';\r\n\r\nclass JsWdFramework extends Framework {\r\n\r\n  get language () {\r\n    return 'js';\r\n  }\r\n\r\n  wrapWithBoilerplate (code) {\r\n    let caps = JSON.stringify(this.caps);\r\n    return `// Requires the admc/wd client library\r\n// (npm install wd)\r\n// Then paste this into a .js file and run with Node 7.6+\r\n\r\nconst wd = require('wd');\r\nconst driver = wd.promiseChainRemote(\"${this.serverUrl}\");\r\nconst caps = ${caps};\r\n\r\nasync function main () {\r\n  await driver.init(caps);\r\n${this.indent(code, 2)}\r\n  await driver.quit();\r\n}\r\n\r\nmain().catch(console.log);\r\n`;\r\n  }\r\n\r\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\r\n    let suffixMap = {\r\n      xpath: 'XPath',\r\n      'accessibility id': 'AccessibilityId',\r\n      'id': 'Id',\r\n      'name': 'Name',\r\n      'class name': 'ClassName',\r\n      '-android uiautomator': 'AndroidUIAutomator',\r\n      '-android datamatcher': 'AndroidDataMatcher',\r\n      '-android viewtag': 'unsupported',\r\n      '-ios predicate string': 'IosUIAutomation',\r\n      '-ios class chain': 'IosClassChain',\r\n    };\r\n    if (!suffixMap[strategy]) {\r\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\r\n    }\r\n    if (isArray) {\r\n      return `let ${localVar} = await driver.elementsBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\r\n    } else {\r\n      return `let ${localVar} = await driver.elementBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\r\n    }\r\n  }\r\n\r\n  codeFor_click (varName, varIndex) {\r\n    return `await ${this.getVarName(varName, varIndex)}.click();`;\r\n  }\r\n\r\n  codeFor_clear (varName, varIndex) {\r\n    return `await ${this.getVarName(varName, varIndex)}.clear();`;\r\n  }\r\n\r\n  codeFor_sendKeys (varName, varIndex, text) {\r\n    return `await ${this.getVarName(varName, varIndex)}.sendKeys(${JSON.stringify(text)});`;\r\n  }\r\n\r\n  codeFor_back () {\r\n    return `await driver.back();`;\r\n  }\r\n\r\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\r\n    return `await (new wd.TouchAction(driver))\r\n  .tap({x: ${x}, y: ${y}})\r\n  .perform()\r\n    `;\r\n  }\r\n\r\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\r\n    return `await (new wd.TouchAction(driver))\r\n  .press({x: ${x1}, y: ${y1}})\r\n  .moveTo({x: ${x2}, y: ${y2}})\r\n  .release()\r\n  .perform()\r\n    `;\r\n  }\r\n\r\n  codeFor_getCurrentActivity () {\r\n    return `let activityName = await driver.getCurrentActivity()`;\r\n  }\r\n\r\n  codeFor_getCurrentPackage () {\r\n    return `let packageName = await driver.getCurrentPackage()`;\r\n  }\r\n\r\n\r\n  codeFor_installAppOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `let isAppInstalled = await driver.installAppOnDevice('${app}');`;\r\n  }\r\n\r\n  codeFor_isAppInstalledOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `driver.isAppInstalled(\"${app}\");`;\r\n  }\r\n\r\n  codeFor_launchApp () {\r\n    return `await driver.launchApp();`;\r\n  }\r\n\r\n  codeFor_backgroundApp (varNameIgnore, varIndexIgnore, timeout) {\r\n    return `await driver.backgroundApp(${timeout});`;\r\n  }\r\n\r\n  codeFor_closeApp () {\r\n    return `await driver.closeApp();`;\r\n  }\r\n\r\n  codeFor_resetApp () {\r\n    return `await driver.resetApp();`;\r\n  }\r\n\r\n  codeFor_removeAppFromDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `await driver.removeAppFromDevice('${app}');`;\r\n  }\r\n\r\n  codeFor_getAppStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\r\n    return `let appStrings = await driver.getAppStrings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\r\n  }\r\n\r\n  codeFor_getClipboard () {\r\n    return `let clipboardText = await driver.getClipboard();`;\r\n  }\r\n\r\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\r\n    return `await driver.setClipboard('${clipboardText}')`;\r\n  }\r\n\r\n  codeFor_pressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_longPressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_hideDeviceKeyboard () {\r\n    return `await driver.hideDeviceKeyboard();`;\r\n  }\r\n\r\n  codeFor_isKeyboardShown () {\r\n    return `await driver.isKeyboardShown();`;\r\n  }\r\n\r\n  codeFor_pushFileToDevice (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\r\n    return `await driver.pushFileToDevice('${pathToInstallTo}', '${fileContentString}');`;\r\n  }\r\n\r\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\r\n    return `let fileBase64 = await driver.pullFile('${pathToPullFrom}');`;\r\n  }\r\n\r\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\r\n    return `let fileBase64 = await driver.pullFolder('${folderToPullFrom}');`;\r\n  }\r\n\r\n  codeFor_toggleAirplaneMode () {\r\n    return `await driver.toggleAirplaneMode();`;\r\n  }\r\n\r\n  codeFor_toggleData () {\r\n    return `await driver.toggleData();`;\r\n  }\r\n\r\n  codeFor_toggleWiFi () {\r\n    return `await driver.toggleWiFi();`;\r\n  }\r\n\r\n  codeFor_toggleLocationServices () {\r\n    return `await driver.toggleLocationServices();`;\r\n  }\r\n\r\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\r\n    return `await driver.sendSms('${phoneNumber}', '${text}');`;\r\n  }\r\n\r\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\r\n    return `await driver.gsmCall('${phoneNumber}', '${action}');`;\r\n  }\r\n\r\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\r\n    return `await driver.gsmSignal(${signalStrength});`;\r\n  }\r\n\r\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\r\n    return `await driver.gsmVoice('${state}');`;\r\n  }\r\n\r\n  codeFor_shake () {\r\n    return `await driver.shake();`;\r\n  }\r\n\r\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\r\n    return `await driver.lock(${seconds})`;\r\n  }\r\n\r\n  codeFor_unlock () {\r\n    return `await driver.unlock()`;\r\n  }\r\n\r\n  codeFor_isLocked () {\r\n    return `let isLocked = await driver.isLocked();`;\r\n  }\r\n\r\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\r\n    return `driver.rotateDevice({x: ${x}, y: ${y}, duration: ${duration}, radius: ${radius}, rotation: ${rotation}, touchCount: ${touchCount}});`;\r\n  }\r\n\r\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\r\n    return `let performanceData = await driver.getPerformanceData('${packageName}', '${dataType}', ${dataReadTimeout});`;\r\n  }\r\n\r\n  codeFor_getSupportedPerformanceDataTypes () {\r\n    return `let supportedPerformanceDataTypes = await driver.getSupportedPerformanceDataTypes();`;\r\n  }\r\n\r\n  codeFor_performTouchId (varNameIgnore, varIndexIgnore, match) {\r\n    return `await driver.touchId(${match});`;\r\n  }\r\n\r\n  codeFor_toggleTouchIdEnrollment (varNameIgnore, varIndexIgnore, enroll) {\r\n    return `await driver.toggleTouchIdEnrollment(${enroll});`;\r\n  }\r\n\r\n  codeFor_openNotifications () {\r\n    return `await driver.openNotifications();`;\r\n  }\r\n\r\n  codeFor_getDeviceTime () {\r\n    return `let time = await driver.getDeviceTime();`;\r\n  }\r\n\r\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\r\n    return `await driver.fingerprint(${fingerprintId});`;\r\n  }\r\n\r\n  codeFor_sessionCapabilities () {\r\n    return `let caps = await driver.sessionCapabilities();`;\r\n  }\r\n\r\n  codeFor_setPageLoadTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `await setPageLoadTimeout(${ms})`;\r\n  }\r\n\r\n  codeFor_setAsyncScriptTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `await setAsyncScriptTimeout(${ms})`;\r\n  }\r\n\r\n  codeFor_setImplicitWaitTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `await setImplicitWaitTimeout(${ms})`;\r\n  }\r\n\r\n  codeFor_getOrientation () {\r\n    return `let orientation = await driver.getOrientation();`;\r\n  }\r\n\r\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\r\n    return `await driver.setOrientation('${orientation}');`;\r\n  }\r\n\r\n  codeFor_getGeoLocation () {\r\n    return `let location = await driver.getGeoLocation();`;\r\n  }\r\n\r\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\r\n    return `await driver.setGeoLocation(${latitude}, ${longitude}, ${altitude});`;\r\n  }\r\n\r\n  codeFor_logTypes () {\r\n    return `let logTypes = await driver.logTypes();`;\r\n  }\r\n\r\n  codeFor_log (varNameIgnore, varIndexIgnore, logType) {\r\n    return `let logs = await driver.log('${logType}');`;\r\n  }\r\n\r\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\r\n    return `await driver.updateSettings(${settingsJson});`;\r\n  }\r\n\r\n  codeFor_settings () {\r\n    return `let settings = await driver.settings();`;\r\n  }\r\n\r\n  // Web\r\n\r\n  codeFor_get (url) {\r\n    return `driver.get('${url}');`;\r\n  }\r\n\r\n  codeFor_url () {\r\n    return `let current_url = driver.url();`;\r\n  }\r\n\r\n  codeFor_forward () {\r\n    return `driver.forward();`;\r\n  }\r\n\r\n  codeFor_refresh () {\r\n    return `driver.refresh();`;\r\n  }\r\n\r\n  // Context\r\n\r\n  codeFor_currentContext () {\r\n    return `driver.currentContext();`;\r\n  }\r\n\r\n  codeFor_contexts () {\r\n    return `driver.contexts();`;\r\n  }\r\n\r\n  codeFor_context (name) {\r\n    return `driver.context('${name}');`;\r\n  }\r\n}\r\n\r\nJsWdFramework.readableName = 'JS - WD (Promise)';\r\n\r\nexport default JsWdFramework;\r\n","import Framework from './framework';\r\n\r\nclass JsWdIoFramework extends Framework {\r\n\r\n  get language () {\r\n    return 'js';\r\n  }\r\n\r\n  chainifyCode (code) {\r\n    return code\r\n      .replace(/let .+ = /g, '')\r\n      .replace(/(\\n|^)(driver|el[0-9]+)\\./g, '\\n.')\r\n      .replace(/;\\n/g, '\\n');\r\n  }\r\n\r\n  wrapWithBoilerplate (code) {\r\n    let host = JSON.stringify(this.host);\r\n    let caps = JSON.stringify(this.caps);\r\n    let proto = JSON.stringify(this.scheme);\r\n    let path = JSON.stringify(this.path);\r\n    return `// Requires the webdriverio client library\r\n// (npm install webdriverio)\r\n// Then paste this into a .js file and run with Node:\r\n// node <file>.js\r\n\r\nconst wdio = require('webdriverio');\r\nconst caps = ${caps};\r\nconst driver = wdio.remote({\r\n  protocol: ${proto},\r\n  host: ${host},\r\n  port: ${this.port},\r\n  path: ${path},\r\n  desiredCapabilities: caps\r\n});\r\n\r\ndriver.init()\r\n${this.indent(this.chainifyCode(code), 2)}\r\n  .end();\r\n`;\r\n  }\r\n\r\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\r\n    // wdio has its own way of indicating the strategy in the locator string\r\n    switch (strategy) {\r\n      case 'xpath': break; // xpath does not need to be updated\r\n      case 'accessibility id': locator = `~${locator}`; break;\r\n      case 'id': locator = `${locator}`; break;\r\n      case 'name': locator = `name=${locator}`; break;\r\n      case 'class name': locator = `${locator}`; break;\r\n      case '-android uiautomator': locator = `android=${locator}`; break;\r\n      case '-android datamatcher': locator = `android=${locator}`; break;\r\n      case '-android viewtag': locator = `android=unsupported`; break;\r\n      case '-ios predicate string': locator = `ios=${locator}`; break;\r\n      case '-ios class chain': locator = `ios=${locator}`; break; // TODO: Handle IOS class chain properly. Not all libs support it. Or take it out\r\n      default: throw new Error(`Can't handle strategy ${strategy}`);\r\n    }\r\n    if (isArray) {\r\n      return `let ${localVar} = driver.elements(${JSON.stringify(locator)});`;\r\n    } else {\r\n      return `let ${localVar} = driver.element(${JSON.stringify(locator)});`;\r\n    }\r\n  }\r\n\r\n  codeFor_click (varName, varIndex) {\r\n    return `${this.getVarName(varName, varIndex)}.click();`;\r\n  }\r\n\r\n  codeFor_clear (varName, varIndex) {\r\n    return `${this.getVarName(varName, varIndex)}.clearElement();`;\r\n  }\r\n\r\n  codeFor_sendKeys (varName, varIndex, text) {\r\n    return `${this.getVarName(varName, varIndex)}.setValue(${JSON.stringify(text)});`;\r\n  }\r\n\r\n  codeFor_back () {\r\n    return `driver.back();`;\r\n  }\r\n\r\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\r\n    return `driver.touchAction({actions: 'tap', x: ${x}, y: ${y}})`;\r\n  }\r\n\r\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\r\n    return `driver.touchAction([\r\n  {action: 'press', x: ${x1}, y: ${y1}},\r\n  {action: 'moveTo', x: ${x2}, y: ${y2}},\r\n  'release'\r\n]);`;\r\n  }\r\n\r\n  codeFor_getCurrentActivity () {\r\n    return `let activityName = await driver.currentActivity();`;\r\n  }\r\n\r\n  codeFor_getCurrentPackage () {\r\n    return `let packageName = await driver.currentPackage();`;\r\n  }\r\n\r\n\r\n  codeFor_installAppOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `await driver.installApp('${app}');`;\r\n  }\r\n\r\n  codeFor_isAppInstalledOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `let isAppInstalled = await driver.isAppInstalled(\"${app}\");`;\r\n  }\r\n\r\n  codeFor_launchApp () {\r\n    return `await driver.launch();`;\r\n  }\r\n\r\n  codeFor_backgroundApp (varNameIgnore, varIndexIgnore, timeout) {\r\n    return `await driver.background(${timeout});`;\r\n  }\r\n\r\n  codeFor_closeApp () {\r\n    return `await driver.close_app();`;\r\n  }\r\n\r\n  codeFor_resetApp () {\r\n    return `await driver.reset();`;\r\n  }\r\n\r\n  codeFor_removeAppFromDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `await driver.removeApp('${app}')`;\r\n  }\r\n\r\n  codeFor_getAppStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\r\n    return `let appStrings = await driver.getAppStrings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\r\n  }\r\n\r\n  codeFor_getClipboard () {\r\n    return `let clipboardText = await driver.getClipboard();`;\r\n  }\r\n\r\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\r\n    return `await driver.setClipboard('${clipboardText}')`;\r\n  }\r\n\r\n  codeFor_pressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_longPressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_hideDeviceKeyboard () {\r\n    return `await driver.hideDeviceKeyboard();`;\r\n  }\r\n\r\n  codeFor_isKeyboardShown () {\r\n    return `await driver.isKeyboardShown();`;\r\n  }\r\n\r\n  codeFor_pushFileToDevice (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\r\n    return `await driver.pushFile('${pathToInstallTo}', '${fileContentString}');`;\r\n  }\r\n\r\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\r\n    return `let data = await driver.pullFile('${pathToPullFrom}');`;\r\n  }\r\n\r\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\r\n    return `let data = await driver.pullFolder('${folderToPullFrom}');`;\r\n  }\r\n\r\n  codeFor_toggleAirplaneMode () {\r\n    return `await driver.toggleAirplaneMode();`;\r\n  }\r\n\r\n  codeFor_toggleData () {\r\n    return `await driver.toggleData();`;\r\n  }\r\n\r\n  codeFor_toggleWiFi () {\r\n    return `await driver.toggleWiFi();`;\r\n  }\r\n\r\n  codeFor_toggleLocationServices () {\r\n    return `await driver.toggleLocationServices();`;\r\n  }\r\n\r\n  codeFor_sendSMS () {\r\n    return `// Not supported: sendSms;`;\r\n  }\r\n\r\n  codeFor_gsmCall () {\r\n    return `// Not supported: gsmCall`;\r\n  }\r\n\r\n  codeFor_gsmSignal () {\r\n    return `// Not supported: gsmSignal`;\r\n  }\r\n\r\n  codeFor_gsmVoice () {\r\n    return `// Not supported: gsmVoice`;\r\n  }\r\n\r\n  codeFor_shake () {\r\n    return `await driver.shake();`;\r\n  }\r\n\r\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\r\n    return `await driver.lock(${seconds});`;\r\n  }\r\n\r\n  codeFor_unlock () {\r\n    return `await driver.unlock();`;\r\n  }\r\n\r\n  codeFor_isLocked () {\r\n    return `let isLocked = await driver.isLocked();`;\r\n  }\r\n\r\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\r\n    return `driver.rotate(${x}, ${y}, ${radius}, ${rotation}, ${touchCount}, ${duration});`;\r\n  }\r\n\r\n  codeFor_getPerformanceData () {\r\n    return `// Not supported: getPerformanceData`;\r\n  }\r\n\r\n  codeFor_getSupportedPerformanceDataTypes () {\r\n    return `// Not supported: getSupportedPerformanceDataTypes`;\r\n  }\r\n\r\n  codeFor_performTouchId (varNameIgnore, varIndexIgnore, match) {\r\n    return `await driver.touchId(${match});`;\r\n  }\r\n\r\n  codeFor_toggleTouchIdEnrollment (varNameIgnore, varIndexIgnore, enroll) {\r\n    return `await driver.toggleTouchIdEnrollment(${enroll});`;\r\n  }\r\n\r\n  codeFor_openNotifications () {\r\n    return `await driver.openNotifications();`;\r\n  }\r\n\r\n  codeFor_getDeviceTime () {\r\n    return `let time = await driver.getDeviceTime();`;\r\n  }\r\n\r\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\r\n    return `await driver.fingerprint(${fingerprintId});`;\r\n  }\r\n\r\n  codeFor_sessionCapabilities () {\r\n    return `let caps = await driver.session('c8db88a0-47a6-47a1-802d-164d746c06aa');`;\r\n  }\r\n\r\n  codeFor_setPageLoadTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `await driver.timeouts('page load', ${ms})`;\r\n  }\r\n\r\n  codeFor_setAsyncScriptTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `await driver.timeouts('script', ${ms})`;\r\n  }\r\n\r\n  codeFor_setImplicitWaitTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `await driver.timeouts('implicit', ${ms})`;\r\n  }\r\n\r\n  codeFor_setCommandTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `await driver.timeouts('command', ${ms})`;\r\n  }\r\n\r\n  codeFor_getOrientation () {\r\n    return `let orientation = await driver.orientation();`;\r\n  }\r\n\r\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\r\n    return `driver.orientation(\"${orientation}\");`;\r\n  }\r\n\r\n  codeFor_getGeoLocation () {\r\n    return `let location = await driver.location();`;\r\n  }\r\n\r\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\r\n    return `await driver.location({latitude: ${latitude}, longitude: ${longitude}, altitude: ${altitude}});`;\r\n  }\r\n\r\n  codeFor_logTypes () {\r\n    return `let logTypes = await driver.log();`;\r\n  }\r\n\r\n  codeFor_log (varNameIgnore, varIndexIgnore, logType) {\r\n    return `let logs = await driver.log('${logType}');`;\r\n  }\r\n\r\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\r\n    return `await driver.settings(${settingsJson});`;\r\n  }\r\n\r\n  codeFor_settings () {\r\n    return `let settings = await driver.settings();`;\r\n  }\r\n\r\n  // Web\r\n\r\n  codeFor_get (url) {\r\n    return `driver.navigateTo('${url}');`;\r\n  }\r\n\r\n  codeFor_url () {\r\n    return `let current_url = driver.getUrl();`;\r\n  }\r\n\r\n  codeFor_forward () {\r\n    return `driver.forward();`;\r\n  }\r\n\r\n  codeFor_refresh () {\r\n    return `driver.refresh();`;\r\n  }\r\n\r\n  // Context\r\n\r\n  codeFor_currentContext () {\r\n    return `let context = driver.getContext();`;\r\n  }\r\n\r\n  codeFor_contexts () {\r\n    return `driver.getContexts();`;\r\n  }\r\n\r\n  codeFor_context (name) {\r\n    return `driver.switchContext('${name}');`;\r\n  }\r\n}\r\n\r\nJsWdIoFramework.readableName = 'JS - Webdriver.io';\r\n\r\nexport default JsWdIoFramework;\r\n","import Framework from './framework';\r\n\r\nclass JsOxygenFramework extends Framework {\r\n\r\n  get language () {\r\n    return 'js';\r\n  }\r\n\r\n  wrapWithBoilerplate (code) {\r\n    let caps = JSON.stringify(this.caps);\r\n    let url = JSON.stringify(`${this.scheme}://${this.host}:${this.port}${this.path}`);\r\n    return `// Requires the Oxygen HQ client library\r\n// (npm install oxygen-cli -g)\r\n// Then paste this into a .js file and run with:\r\n// oxygen <file>.js\r\n\r\nmob.init(${caps}, ${url});\r\n\r\n${code}\r\n\r\n`;\r\n  }\r\n\r\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\r\n    // wdio has its own way of indicating the strategy in the locator string\r\n    switch (strategy) {\r\n      case 'xpath': break; // xpath does not need to be updated\r\n      case 'accessibility id': locator = `~${locator}`; break;\r\n      case 'id': locator = `id=${locator}`; break;\r\n      case 'name': locator = `name=${locator}`; break;\r\n      case 'class name': locator = `css=${locator}`; break;\r\n      case '-android uiautomator': locator = `android=${locator}`; break;\r\n      case '-android datamatcher': locator = `android=${locator}`; break;\r\n      case '-ios predicate string': locator = `ios=${locator}`; break;\r\n      case '-ios class chain': locator = `ios=${locator}`; break; // TODO: Handle IOS class chain properly. Not all libs support it. Or take it out\r\n      default: throw new Error(`Can't handle strategy ${strategy}`);\r\n    }\r\n    if (isArray) {\r\n      return `let ${localVar} = mob.findElements(${JSON.stringify(locator)});`;\r\n    } else {\r\n      return `let ${localVar} = mob.findElement(${JSON.stringify(locator)});`;\r\n    }\r\n  }\r\n\r\n  codeFor_click (varName, varIndex) {\r\n    return `mob.click(${this.getVarName(varName, varIndex)});`;\r\n  }\r\n\r\n  codeFor_clear (varName, varIndex) {\r\n    return `mob.clear(${this.getVarName(varName, varIndex)});`;\r\n  }\r\n\r\n  codeFor_sendKeys (varName, varIndex, text) {\r\n    return `mob.type(${this.getVarName(varName, varIndex)}, ${JSON.stringify(text)});`;\r\n  }\r\n\r\n  codeFor_back () {\r\n    return `mob.back();`;\r\n  }\r\n\r\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\r\n    return `mob.tap(${x}, ${y});`;\r\n  }\r\n\r\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\r\n    return `mob.swipeScreen(${x1}, ${y1}, ${x2}, ${y2});`;\r\n  }\r\n\r\n  codeFor_getCurrentActivity () {\r\n    return `let activityName = mob.getCurrentActivity();`;\r\n  }\r\n\r\n  codeFor_getCurrentPackage () {\r\n    return `let packageName = mob.getCurrentPackage();`;\r\n  }\r\n\r\n  codeFor_installAppOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `mob.installApp('${app}');`;\r\n  }\r\n\r\n  codeFor_isAppInstalledOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `let isAppInstalled = mob.isAppInstalled(\"${app}\");`;\r\n  }\r\n\r\n  codeFor_launchApp () {\r\n    return `mob.launchApp();`;\r\n  }\r\n\r\n  codeFor_backgroundApp (varNameIgnore, varIndexIgnore, timeout) {\r\n    return `mob.driver().background(${timeout});`;\r\n  }\r\n\r\n  codeFor_closeApp () {\r\n    return `mob.closeApp();`;\r\n  }\r\n\r\n  codeFor_resetApp () {\r\n    return `mob.resetApp();`;\r\n  }\r\n\r\n  codeFor_removeAppFromDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `mob.removeApp('${app}')`;\r\n  }\r\n\r\n  codeFor_getAppStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\r\n    return `let appStrings = mob.driver().getAppStrings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\r\n  }\r\n\r\n  codeFor_getClipboard () {\r\n    return `let clipboardText = mob.driver().getClipboard();`;\r\n  }\r\n\r\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\r\n    return `mob.driver().setClipboard('${clipboardText}')`;\r\n  }\r\n\r\n  codeFor_pressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `mob.driver().longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_longPressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `mob.driver().longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_hideDeviceKeyboard () {\r\n    return `mob.driver().hideKeyboard();`;\r\n  }\r\n\r\n  codeFor_isKeyboardShown () {\r\n    return `//isKeyboardShown not supported`;\r\n  }\r\n\r\n  codeFor_pushFileToDevice (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\r\n    return `mob.driver().pushFile('${pathToInstallTo}', '${fileContentString}');`;\r\n  }\r\n\r\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\r\n    return `let data = mob.driver().pullFile('${pathToPullFrom}');`;\r\n  }\r\n\r\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\r\n    return `let data = mob.driver().pullFolder('${folderToPullFrom}');`;\r\n  }\r\n\r\n  codeFor_toggleAirplaneMode () {\r\n    return `mob.driver().toggleAirplaneMode();`;\r\n  }\r\n\r\n  codeFor_toggleData () {\r\n    return `mob.driver().toggleData();`;\r\n  }\r\n\r\n  codeFor_toggleWiFi () {\r\n    return `mob.driver().toggleWiFi();`;\r\n  }\r\n\r\n  codeFor_toggleLocationServices () {\r\n    return `mob.driver().toggleLocationServices();`;\r\n  }\r\n\r\n  codeFor_sendSMS () {\r\n    return `// Not supported: sendSms;`;\r\n  }\r\n\r\n  codeFor_gsmCall () {\r\n    return `// Not supported: gsmCall`;\r\n  }\r\n\r\n  codeFor_gsmSignal () {\r\n    return `// Not supported: gsmSignal`;\r\n  }\r\n\r\n  codeFor_gsmVoice () {\r\n    return `// Not supported: gsmVoice`;\r\n  }\r\n\r\n  codeFor_shake () {\r\n    return `mob.shake();`;\r\n  }\r\n\r\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\r\n    return `mob.driver().lock(${seconds});`;\r\n  }\r\n\r\n  codeFor_unlock () {\r\n    return `mob.driver().unlock();`;\r\n  }\r\n\r\n  codeFor_isLocked () {\r\n    return `let isLocked = mob.driver().isLocked();`;\r\n  }\r\n\r\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\r\n    return `mob.driver().rotateDevice(${x}, ${y}, ${radius}, ${rotation}, ${touchCount}, ${duration});`;\r\n  }\r\n\r\n  codeFor_getPerformanceData () {\r\n    return `// Not supported: getPerformanceData`;\r\n  }\r\n\r\n  codeFor_getSupportedPerformanceDataTypes () {\r\n    return `// Not supported: getSupportedPerformanceDataTypes`;\r\n  }\r\n\r\n  codeFor_performTouchId (varNameIgnore, varIndexIgnore, match) {\r\n    return `mob.driver().touchId(${match});`;\r\n  }\r\n\r\n  codeFor_toggleTouchIdEnrollment (varNameIgnore, varIndexIgnore, enroll) {\r\n    return `mob.driver().toggleEnrollTouchId(${enroll});`;\r\n  }\r\n\r\n  codeFor_openNotifications () {\r\n    return `mob.driver().openNotifications();`;\r\n  }\r\n\r\n  codeFor_getDeviceTime () {\r\n    return `let time = mob.getDeviceTime();`;\r\n  }\r\n\r\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\r\n    return `mob.driver().fingerPrint(${fingerprintId});`;\r\n  }\r\n\r\n  codeFor_sessionCapabilities () {\r\n    return `let caps = mob.driver().capabilities;`;\r\n  }\r\n\r\n  codeFor_setPageLoadTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `mob.driver().setTimeout({'pageLoad': ${ms}});`;\r\n  }\r\n\r\n  codeFor_setAsyncScriptTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `mob.driver().setTimeout({'script': ${ms}});`;\r\n  }\r\n\r\n  codeFor_setImplicitWaitTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `mob.driver().setTimeout({'implicit': ${ms}});`;\r\n  }\r\n\r\n  codeFor_setCommandTimeout () {\r\n    return `// Not supported: setCommandTimeout`;\r\n  }\r\n\r\n  codeFor_getOrientation () {\r\n    return `let orientation = mob.driver().getOrientation();`;\r\n  }\r\n\r\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\r\n    return `mob.driver().setOrientation(\"${orientation}\");`;\r\n  }\r\n\r\n  codeFor_getGeoLocation () {\r\n    return `let location = mob.driver().getGeoLocation();`;\r\n  }\r\n\r\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\r\n    return `mob.driver().setGeoLocation({latitude: ${latitude}, longitude: ${longitude}, altitude: ${altitude}});`;\r\n  }\r\n\r\n  codeFor_logTypes () {\r\n    return `let logTypes = mob.driver().getLogTypes();`;\r\n  }\r\n\r\n  codeFor_log (varNameIgnore, varIndexIgnore, logType) {\r\n    return `let logs = mob.driver().getLogs('${logType}');`;\r\n  }\r\n\r\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\r\n    return `mob.driver().updateSettings(${settingsJson});`;\r\n  }\r\n\r\n  codeFor_settings () {\r\n    return `let settings = mob.driver().getSettings();`;\r\n  }\r\n}\r\n\r\nJsOxygenFramework.readableName = 'JS - Oxygen HQ';\r\n\r\nexport default JsOxygenFramework;\r\n","import Framework from './framework';\r\nimport _ from 'lodash';\r\n\r\nclass JavaFramework extends Framework {\r\n\r\n  get language () {\r\n    return 'java';\r\n  }\r\n\r\n  wrapWithBoilerplate (code) {\r\n    let [pkg, cls] = (() => {\r\n      if (this.caps.platformName) {\r\n        switch (this.caps.platformName.toLowerCase()) {\r\n          case 'ios': return ['ios', 'IOSDriver'];\r\n          case 'android': return ['android', 'AndroidDriver'];\r\n          default: return ['unknownPlatform', 'UnknownDriver'];\r\n        }\r\n      } else {\r\n        return ['unknownPlatform', 'UnknownDriver'];\r\n      }\r\n    })();\r\n    let capStr = this.indent(Object.keys(this.caps).map((k) => `desiredCapabilities.setCapability(${JSON.stringify(k)}, ${JSON.stringify(this.caps[k])});`).join('\\n'), 4);\r\n    return `import io.appium.java_client.MobileElement;\r\nimport io.appium.java_client.${pkg}.${cls};\r\nimport junit.framework.TestCase;\r\nimport org.junit.After;\r\nimport org.junit.Before;\r\nimport org.junit.Test;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\n\r\npublic class SampleTest {\r\n\r\n  private ${cls} driver;\r\n\r\n  @Before\r\n  public void setUp() throws MalformedURLException {\r\n    DesiredCapabilities desiredCapabilities = new DesiredCapabilities();\r\n${capStr}\r\n\r\n    URL remoteUrl = new URL(\"${this.serverUrl}\");\r\n\r\n    driver = new ${cls}(remoteUrl, desiredCapabilities);\r\n  }\r\n\r\n  @Test\r\n  public void sampleTest() {\r\n${this.indent(code, 4)}\r\n  }\r\n\r\n  @After\r\n  public void tearDown() {\r\n    driver.quit();\r\n  }\r\n}\r\n`;\r\n  }\r\n\r\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\r\n    let suffixMap = {\r\n      xpath: 'XPath',\r\n      'accessibility id': 'AccessibilityId',\r\n      'id': 'Id',\r\n      'class name': 'ClassName',\r\n      'name': 'Name',\r\n      '-android uiautomator': 'AndroidUIAutomator',\r\n      '-android datamatcher': 'AndroidDataMatcher',\r\n      '-android viewtag': 'AndroidViewTag',\r\n      '-ios predicate string': 'IosNsPredicate',\r\n      '-ios class chain': 'IosClassChain',\r\n    };\r\n    if (!suffixMap[strategy]) {\r\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\r\n    }\r\n    if (isArray) {\r\n      return `List<MobileElement> ${localVar} = (MobileElement) driver.findElementsBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\r\n    } else {\r\n      return `MobileElement ${localVar} = (MobileElement) driver.findElementBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\r\n    }\r\n  }\r\n\r\n  getVarName (varName, varIndex) {\r\n    if (varIndex || varIndex === 0) {\r\n      return `${varName}.get(${varIndex})`;\r\n    }\r\n    return varName;\r\n  }\r\n\r\n  codeFor_click (varName, varIndex) {\r\n    return `${this.getVarName(varName, varIndex)}.click();`;\r\n  }\r\n\r\n  codeFor_clear (varName, varIndex) {\r\n    return `${this.getVarName(varName, varIndex)}.clear();`;\r\n  }\r\n\r\n  codeFor_sendKeys (varName, varIndex, text) {\r\n    return `${this.getVarName(varName, varIndex)}.sendKeys(${JSON.stringify(text)});`;\r\n  }\r\n\r\n  codeFor_back () {\r\n    return `driver.navigate().back();`;\r\n  }\r\n\r\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\r\n    return `(new TouchAction(driver)).tap(${x}, ${y}).perform()`;\r\n  }\r\n\r\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\r\n    return `(new TouchAction(driver))\r\n  .press({x: ${x1}, y: ${y1}})\r\n  .moveTo({x: ${x2}: y: ${y2}})\r\n  .release()\r\n  .perform()\r\n  `;\r\n  }\r\n\r\n  codeFor_getCurrentActivity () {\r\n    return `String activityName = driver.currentActivity()`;\r\n  }\r\n\r\n  codeFor_getCurrentPackage () {\r\n    return `String packageName = driver.currentPackage()`;\r\n  }\r\n\r\n  codeFor_startActivity () {\r\n    return `driver.`;\r\n  }\r\n\r\n  codeFor_installAppOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `driver.installApp(\"${app}\");`;\r\n  }\r\n\r\n  codeFor_isAppInstalledOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `boolean isAppInstalled = driver.isAppInstalled(\"${app}\");`;\r\n  }\r\n\r\n  codeFor_launchApp () {\r\n    return `driver.launchApp();`;\r\n  }\r\n\r\n  codeFor_backgroundApp (varNameIgnore, varIndexIgnore, timeout) {\r\n    return `driver.runAppInBackground(Duration.ofSeconds(${timeout}));`;\r\n  }\r\n\r\n  codeFor_closeApp () {\r\n    return `driver.closeApp();`;\r\n  }\r\n\r\n  codeFor_resetApp () {\r\n    return `driver.resetApp();`;\r\n  }\r\n\r\n  codeFor_removeAppFromDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `driver.removeApp(\"${app}\");`;\r\n  }\r\n\r\n  codeFor_getAppStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\r\n    return `Map<String, String> appStrings = driver.getAppStringMap(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\r\n  }\r\n\r\n  codeFor_getClipboard () {\r\n    return `String clipboardText = driver.getClipboardText();`;\r\n  }\r\n\r\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\r\n    return `driver.setClipboardText(\"${clipboardText}\");`;\r\n  }\r\n\r\n  codeFor_pressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `driver.pressKeyCode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_longPressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_hideDeviceKeyboard () {\r\n    return `driver.hideKeyboard();`;\r\n  }\r\n\r\n  codeFor_isKeyboardShown () {\r\n    return `boolean isKeyboardShown = driver.isKeyboardShown();`;\r\n  }\r\n\r\n  codeFor_pushFileToDevice (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\r\n    return `driver.pushFile(\"${pathToInstallTo}\", ${fileContentString})`;\r\n  }\r\n\r\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\r\n    return `byte[] fileBase64 = driver.pullFile(\"${pathToPullFrom}\");`;\r\n  }\r\n\r\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\r\n    return `byte[] fileBase64 = driver.pullFolder(\"${folderToPullFrom}\");`;\r\n  }\r\n\r\n  codeFor_toggleAirplaneMode () {\r\n    return `driver.toggleAirplaneMode();`;\r\n  }\r\n\r\n  codeFor_toggleData () {\r\n    return `driver.toggleData();`;\r\n  }\r\n\r\n  codeFor_toggleWiFi () {\r\n    return `driver.toggleWifi();`;\r\n  }\r\n\r\n  codeFor_toggleLocationServices () {\r\n    return `driver.toggleLocationServices();`;\r\n  }\r\n\r\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\r\n    return `driver.sendSMS(\"${phoneNumber}\", \"${text}\");`;\r\n  }\r\n\r\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\r\n    return `driver.makeGsmCall(\"${phoneNumber}\", \"${action}\");`;\r\n  }\r\n\r\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\r\n    return `driver.setGsmSignalStrength(\"${signalStrength}\");`;\r\n  }\r\n\r\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\r\n    return `driver.setGsmVoice(\"${state}\");`;\r\n  }\r\n\r\n  codeFor_shake () {\r\n    return `driver.shake();`;\r\n  }\r\n\r\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\r\n    return `driver.lockDevice(${seconds});`;\r\n  }\r\n\r\n  codeFor_unlock () {\r\n    return `driver.unlockDevice()`;\r\n  }\r\n\r\n  codeFor_isLocked () {\r\n    return `boolean isLocked = driver.isDeviceLocked();`;\r\n  }\r\n\r\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\r\n    return `driver.rotate(new DeviceRotation(${x}, ${y}, ${radius}, ${rotation}, ${touchCount}, ${duration}));`;\r\n  }\r\n\r\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\r\n    return `List<List<Object>> performanceData = driver.getPerformanceData(\"${packageName}\", \"${dataType}\", ${dataReadTimeout});`;\r\n  }\r\n\r\n  codeFor_getSupportedPerformanceDataTypes () {\r\n    return `List<String> performanceTypes = driver.getSupportedPerformanceDataTypes();`;\r\n  }\r\n\r\n  codeFor_performTouchId (varNameIgnore, varIndexIgnore, match) {\r\n    return `driver.performTouchID(${match});`;\r\n  }\r\n\r\n  codeFor_toggleTouchIdEnrollment (varNameIgnore, varIndexIgnore, enroll) {\r\n    return `driver.toggleTouchIDEnrollment(${enroll});`;\r\n  }\r\n\r\n  codeFor_openNotifications () {\r\n    return `driver.openNotifications();`;\r\n  }\r\n\r\n  codeFor_getDeviceTime () {\r\n    return `String time = driver.getDeviceTime();`;\r\n  }\r\n\r\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\r\n    return `driver.fingerPrint(${fingerprintId});`;\r\n  }\r\n\r\n  codeFor_sessionCapabilities () {\r\n    return `Map<String, Object> caps = driver.getSessionDetails();`;\r\n  }\r\n\r\n  codeFor_setPageLoadTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.manage().timeouts().pageLoadTimeout(${ms / 1000}, TimeUnit.SECONDS);`;\r\n  }\r\n\r\n  codeFor_setAsyncScriptTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.manage().timeouts().setScriptTimeout(${ms / 1000}, TimeUnit.SECONDS);`;\r\n  }\r\n\r\n  codeFor_setImplicitWaitTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.manage().timeouts().implicitlyWait(${ms / 1000}, TimeUnit.SECONDS);`;\r\n  }\r\n\r\n  codeFor_getOrientation () {\r\n    return `ScreenOrientation orientation = driver.getOrientation();`;\r\n  }\r\n\r\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\r\n    return `driver.rotate(\"${orientation}\");`;\r\n  }\r\n\r\n  codeFor_getGeoLocation () {\r\n    return `Location location = driver.location();`;\r\n  }\r\n\r\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\r\n    return `driver.setLocation(new Location(${latitude}, ${longitude}, ${altitude}));`;\r\n  }\r\n\r\n  codeFor_logTypes () {\r\n    return `Set<String> logTypes = driver.manage().logs().getAvailableLogTypes();`;\r\n  }\r\n\r\n  codeFor_log (varNameIgnore, varIndexIgnore, logType) {\r\n    return `LogEntries logEntries = driver.manage().logs().get(\"${logType}\");`;\r\n  }\r\n\r\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\r\n    try {\r\n      let settings = '';\r\n      for (let [settingName, settingValue] of _.toPairs(JSON.parse(settingsJson))) {\r\n        settings += `driver.setSetting(\"${settingName}\", \"${settingValue}\");\\n`;\r\n      }\r\n      return settings;\r\n    } catch (e) {\r\n      return `// Could not parse: ${settingsJson}`;\r\n    }\r\n  }\r\n\r\n  codeFor_settings () {\r\n    return `Map<String, Object> settings = driver.getSettings();`;\r\n  }\r\n\r\n  /*\r\n\r\n  codeFor_ REPLACE_ME (varNameIgnore, varIndexIgnore) {\r\n    return `REPLACE_ME`;\r\n  }\r\n\r\n  */\r\n\r\n  // Web\r\n\r\n  codeFor_get (url) {\r\n    return `driver.get(\"${url}\");`;\r\n  }\r\n\r\n  codeFor_url () {\r\n    return `String current_url = driver.getCurrentUrl();`;\r\n  }\r\n\r\n  codeFor_forward () {\r\n    return `driver.navigate().forward();`;\r\n  }\r\n\r\n  codeFor_refresh () {\r\n    return `driver.navigate().refresh();`;\r\n  }\r\n\r\n  // Context\r\n\r\n  codeFor_currentContext () {\r\n    return `driver.getContext()`;\r\n  }\r\n\r\n  codeFor_contexts () {\r\n    return `driver.getContextHandles();`;\r\n  }\r\n\r\n  codeFor_context (name) {\r\n    return `driver.context(\"${name}\");`;\r\n  }\r\n}\r\n\r\nJavaFramework.readableName = 'Java - JUnit';\r\n\r\nexport default JavaFramework;\r\n","import Framework from './framework';\r\n\r\nclass PythonFramework extends Framework {\r\n\r\n  get language () {\r\n    return 'python';\r\n  }\r\n\r\n  getPythonVal (jsonVal) {\r\n    if (typeof jsonVal === 'boolean') {\r\n      return jsonVal ? 'True' : 'False';\r\n    }\r\n    return JSON.stringify(jsonVal);\r\n  }\r\n\r\n  wrapWithBoilerplate (code) {\r\n    let capStr = Object.keys(this.caps).map((k) => `caps[${JSON.stringify(k)}] = ${this.getPythonVal(this.caps[k])}`).join('\\n');\r\n    return `# This sample code uses the Appium python client\r\n# pip install Appium-Python-Client\r\n# Then you can paste this into a file and simply run with Python\r\n\r\nfrom appium import webdriver\r\n\r\ncaps = {}\r\n${capStr}\r\n\r\ndriver = webdriver.Remote(\"${this.serverUrl}\", caps)\r\n\r\n${code}\r\ndriver.quit()`;\r\n  }\r\n\r\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\r\n    let suffixMap = {\r\n      xpath: 'xpath',\r\n      'accessibility id': 'accessibility_id',\r\n      'id': 'id',\r\n      'name': 'name', // TODO: How does Python use name selector\r\n      'class name': 'class_name',\r\n      '-android uiautomator': 'android_uiautomator',\r\n      '-android datamatcher': 'android_datamatcher',\r\n      '-android viewtag': 'android_viewtag',\r\n      '-ios predicate string': 'ios_predicate',\r\n      '-ios class chain': 'ios_uiautomation', // TODO: Could not find iOS UIAutomation\r\n    };\r\n    if (!suffixMap[strategy]) {\r\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\r\n    }\r\n    if (isArray) {\r\n      return `${localVar} = driver.find_elements_by_${suffixMap[strategy]}(${JSON.stringify(locator)})`;\r\n    } else {\r\n      return `${localVar} = driver.find_element_by_${suffixMap[strategy]}(${JSON.stringify(locator)})`;\r\n    }\r\n  }\r\n\r\n  codeFor_click (varName, varIndex) {\r\n    return `${this.getVarName(varName, varIndex)}.click()`;\r\n  }\r\n\r\n  codeFor_clear (varName, varIndex) {\r\n    return `${this.getVarName(varName, varIndex)}.clear()`;\r\n  }\r\n\r\n  codeFor_sendKeys (varName, varIndex, text) {\r\n    return `${this.getVarName(varName, varIndex)}.send_keys(${JSON.stringify(text)})`;\r\n  }\r\n\r\n  codeFor_back () {\r\n    return `driver.back()`;\r\n  }\r\n\r\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\r\n    return `TouchAction(driver).tap(x=${x}, y=${y}).perform()`;\r\n  }\r\n\r\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\r\n    return `TouchAction(driver) \\\r\n  .press(x=${x1}, y=${y1}) \\\r\n  .move_to(x=${x2}, y=${y2}) \\\r\n  .release() \\\r\n  .perform()\r\n    `;\r\n  }\r\n\r\n  codeFor_getCurrentActivity () {\r\n    return `activity_name = driver.current_activity`;\r\n  }\r\n\r\n  codeFor_getCurrentPackage () {\r\n    return `package_name = driver.current_package`;\r\n  }\r\n\r\n  codeFor_installAppOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `driver.install_app('${app}');`;\r\n  }\r\n\r\n  codeFor_isAppInstalledOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `is_app_installed = driver.isAppInstalled(\"${app}\");`;\r\n  }\r\n\r\n  codeFor_launchApp () {\r\n    return `driver.launch_app()`;\r\n  }\r\n\r\n  codeFor_backgroundApp (varNameIgnore, varIndexIgnore, timeout) {\r\n    return `driver.background_app(${timeout})`;\r\n  }\r\n\r\n  codeFor_closeApp () {\r\n    return `driver.close_app()`;\r\n  }\r\n\r\n  codeFor_resetApp () {\r\n    return `driver.reset()`;\r\n  }\r\n\r\n  codeFor_removeAppFromDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `driver.remove_app('${app}');`;\r\n  }\r\n\r\n  codeFor_getAppStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\r\n    return `appStrings = driver.app_strings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''})`;\r\n  }\r\n\r\n  codeFor_getClipboard () {\r\n    return `clipboard_text = driver.get_clipboard_text()`;\r\n  }\r\n\r\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\r\n    return `driver.set_clipboard_text('${clipboardText}')`;\r\n  }\r\n\r\n  codeFor_pressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `driver.press_keycode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_longPressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `driver.long_press_keycode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_hideDeviceKeyboard () {\r\n    return `driver.hide_keyboard()`;\r\n  }\r\n\r\n  codeFor_isKeyboardShown () {\r\n    return `# isKeyboardShown not supported`;\r\n  }\r\n\r\n  codeFor_pushFileToDevice (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\r\n    return `driver.push_file('${pathToInstallTo}', '${fileContentString}');`;\r\n  }\r\n\r\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\r\n    return `file_base64 = self.driver.pull_file('${pathToPullFrom}');`;\r\n  }\r\n\r\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\r\n    return `file_base64 = self.driver.pull_folder('${folderToPullFrom}');`;\r\n  }\r\n\r\n  codeFor_toggleAirplaneMode () {\r\n    return `# Not supported: toggleAirplaneMode`;\r\n  }\r\n\r\n  codeFor_toggleData () {\r\n    return `# Not supported: toggleData`;\r\n  }\r\n\r\n  codeFor_toggleWiFi () {\r\n    return `# Not supported: toggleWifi`;\r\n  }\r\n\r\n  codeFor_toggleLocationServices () {\r\n    return `driver.toggle_location_services();`;\r\n  }\r\n\r\n  codeFor_sendSMS () {\r\n    return `# Not supported: sendSMS`;\r\n  }\r\n\r\n  codeFor_gsmCall () {\r\n    return `# Not supported: gsmCall`;\r\n  }\r\n\r\n  codeFor_gsmSignal () {\r\n    return `# Not supported: gsmSignal`;\r\n  }\r\n\r\n  codeFor_gsmVoice () {\r\n    return `# Not supported: gsmVoice`;\r\n  }\r\n\r\n  codeFor_shake () {\r\n    return `driver.shake();`;\r\n  }\r\n\r\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\r\n    return `driver.lock(${seconds});`;\r\n  }\r\n\r\n  codeFor_unlock () {\r\n    return `driver.unlock();`;\r\n  }\r\n\r\n  codeFor_isLocked () {\r\n    return `# Not supported: is device locked`;\r\n  }\r\n\r\n  codeFor_rotateDevice () {\r\n    return `# Not supported: rotate device`;\r\n  }\r\n\r\n  codeFor_getPerformanceData () {\r\n    return `# Not supported: getPerformanceData`;\r\n  }\r\n\r\n  codeFor_getSupportedPerformanceDataTypes () {\r\n    return `# Not supported: getSupportedPerformanceDataTypes`;\r\n  }\r\n\r\n  codeFor_performTouchId (varNameIgnore, varIndexIgnore, match) {\r\n    return `driver.touch_id(${match})`;\r\n  }\r\n\r\n  codeFor_toggleTouchIdEnrollment (varNameIgnore, varIndexIgnore, enroll) {\r\n    return `driver.toggle_touch_id_enrollment(${enroll})`;\r\n  }\r\n\r\n  codeFor_openNotifications () {\r\n    return `driver.open_notifications();`;\r\n  }\r\n\r\n  codeFor_getDeviceTime () {\r\n    return `time = self.driver.device_time()`;\r\n  }\r\n\r\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\r\n    return `driver.finger_print(${fingerprintId})`;\r\n  }\r\n\r\n  codeFor_sessionCapabilities () {\r\n    return `desired_caps = self.driver.desired_capabilities()`;\r\n  }\r\n\r\n  codeFor_setPageLoadTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.set_page_load_timeout(${ms})`;\r\n  }\r\n\r\n  codeFor_setAsyncScriptTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.timeouts('script', ${ms})`;\r\n  }\r\n\r\n  codeFor_setImplicitWaitTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.timeouts('implicit', ${ms})`;\r\n  }\r\n\r\n  codeFor_getOrientation () {\r\n    return `orientation = self.driver.orientation()`;\r\n  }\r\n\r\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\r\n    return `driver.orientation = \"${orientation}\"`;\r\n  }\r\n\r\n  codeFor_getGeoLocation () {\r\n    return `location = self.driver.location()`;\r\n  }\r\n\r\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\r\n    return `driver.set_location(${latitude}, ${longitude}, ${altitude})`;\r\n  }\r\n\r\n  codeFor_logTypes () {\r\n    return `log_types = driver.log_types();`;\r\n  }\r\n\r\n  codeFor_log (varNameIgnore, varIndexIgnore, logType) {\r\n    return `logs = driver.get_log('${logType}');`;\r\n  }\r\n\r\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\r\n    return `driver.update_settings(${settingsJson}))`;\r\n  }\r\n\r\n  codeFor_settings () {\r\n    return `settings = driver.get_settings`;\r\n  }\r\n\r\n  // Web\r\n\r\n  codeFor_get (url) {\r\n    return `driver.get('${url}')`;\r\n  }\r\n\r\n  codeFor_url () {\r\n    return `current_url = driver.current_url`;\r\n  }\r\n\r\n  codeFor_forward () {\r\n    return `driver.forward()`;\r\n  }\r\n\r\n  codeFor_refresh () {\r\n    return `driver.refresh()`;\r\n  }\r\n\r\n  // Context\r\n\r\n  codeFor_currentContext () {\r\n    return `driver.current_context`;\r\n  }\r\n\r\n  codeFor_contexts () {\r\n    return `driver.contexts()`;\r\n  }\r\n\r\n  codeFor_context (name) {\r\n    return `driver.switch_to.context('${name}')`;\r\n  }\r\n}\r\n\r\nPythonFramework.readableName = 'Python';\r\n\r\nexport default PythonFramework;\r\n","import Framework from './framework';\r\nimport _ from 'lodash';\r\n\r\nclass RubyFramework extends Framework {\r\n\r\n  get language () {\r\n    return 'ruby';\r\n  }\r\n\r\n  wrapWithBoilerplate (code) {\r\n    let capStr = Object.keys(this.caps).map((k) => `caps[${JSON.stringify(k)}] = ${JSON.stringify(this.caps[k])}`).join('\\n');\r\n    return `# This sample code uses the Appium ruby client\r\n# gem install appium_lib\r\n# Then you can paste this into a file and simply run with Ruby\r\n\r\nrequire 'rubygems'\r\nrequire 'appium_lib'\r\n\r\ncaps = {}\r\n${capStr}\r\nopts = {\r\n    sauce_username: nil,\r\n    server_url: \"${this.serverUrl}\"\r\n}\r\ndriver = Appium::Driver.new({caps: caps, appium_lib: opts}).start_driver\r\n\r\n${code}\r\ndriver.quit`;\r\n  }\r\n\r\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\r\n    let suffixMap = {\r\n      xpath: ':xpath',\r\n      'accessibility id': ':accessibility_id',\r\n      'id': ':id',\r\n      'name': ':name',\r\n      'class name': ':class_name',\r\n      '-android uiautomator': ':uiautomation',\r\n      '-android datamatcher': ':datamatcher',\r\n      '-android viewtag': ':viewtag',\r\n      '-ios predicate string': ':predicate',\r\n      '-ios class chain': ':class_chain',\r\n    };\r\n    if (!suffixMap[strategy]) {\r\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\r\n    }\r\n    if (isArray) {\r\n      return `${localVar} = driver.find_element(${suffixMap[strategy]}, ${JSON.stringify(locator)})`;\r\n    } else {\r\n      return `${localVar} = driver.find_elements(${suffixMap[strategy]}, ${JSON.stringify(locator)})`;\r\n    }\r\n  }\r\n\r\n  codeFor_click (varName, varIndex) {\r\n    return `${this.getVarName(varName, varIndex)}.click`;\r\n  }\r\n\r\n  codeFor_clear (varName, varIndex) {\r\n    return `${this.getVarName(varName, varIndex)}.clear`;\r\n  }\r\n\r\n  codeFor_sendKeys (varName, varIndex, text) {\r\n    return `${this.getVarName(varName, varIndex)}.send_keys ${JSON.stringify(text)}`;\r\n  }\r\n\r\n  codeFor_back () {\r\n    return `driver.back`;\r\n  }\r\n\r\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\r\n    return `TouchAction\r\n  .new\r\n  .tap(x: ${x}, y: ${y})\r\n  .perform\r\n    `;\r\n  }\r\n\r\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\r\n    return `TouchAction\r\n  .new\r\n  .press({x: ${x1}, y: ${y1}})\r\n  .move_to({x: ${x2}, y: ${y2}})\r\n  .release\r\n  .perform\r\n    `;\r\n  }\r\n\r\n  codeFor_getCurrentActivity () {\r\n    return `current_activity = driver.current_activity`;\r\n  }\r\n\r\n  codeFor_getCurrentPackage () {\r\n    return `current_package = driver.current_package`;\r\n  }\r\n\r\n\r\n  codeFor_installAppOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `driver.app_installed?('${app}')`;\r\n  }\r\n\r\n  codeFor_isAppInstalledOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `is_app_installed = driver.isAppInstalled(\"${app}\");`;\r\n  }\r\n\r\n  codeFor_launchApp () {\r\n    return `driver.launch_app`;\r\n  }\r\n\r\n  codeFor_backgroundApp (varNameIgnore, varIndexIgnore, timeout) {\r\n    return `driver.background_app(${timeout})`;\r\n  }\r\n\r\n  codeFor_closeApp () {\r\n    return `driver.close_app`;\r\n  }\r\n\r\n  codeFor_resetApp () {\r\n    return `driver.reset`;\r\n  }\r\n\r\n  codeFor_removeAppFromDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `driver.remove_app('${app}')`;\r\n  }\r\n\r\n  codeFor_getAppStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\r\n    return `driver.app_strings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''})`;\r\n  }\r\n\r\n  codeFor_getClipboard () {\r\n    return `clipboard_text = driver.get_clipboard`;\r\n  }\r\n\r\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\r\n    return `driver.set_clipboard content: '${clipboardText}'`;\r\n  }\r\n\r\n  codeFor_pressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `driver.press_keycode(${keyCode}, ${metaState}, ${flags})`;\r\n  }\r\n\r\n  codeFor_longPressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `driver.long_press_keycode(${keyCode}, ${metaState}, ${flags})`;\r\n  }\r\n\r\n  codeFor_hideDeviceKeyboard () {\r\n    return `driver.hide_keyboard`;\r\n  }\r\n\r\n  codeFor_isKeyboardShown () {\r\n    return `is_keyboard_shown = driver.is_keyboard_shown`;\r\n  }\r\n\r\n  codeFor_pushFileToDevice (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\r\n    return `driver.push_file('${pathToInstallTo}', '${fileContentString}')`;\r\n  }\r\n\r\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\r\n    return `driver.pull_file('${pathToPullFrom}')`;\r\n  }\r\n\r\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\r\n    return `driver.pull_folder('${folderToPullFrom}')`;\r\n  }\r\n\r\n  codeFor_toggleAirplaneMode () {\r\n    return `driver.toggle_flight_mode`;\r\n  }\r\n\r\n  codeFor_toggleData () {\r\n    return `driver.toggle_data`;\r\n  }\r\n\r\n  codeFor_toggleWiFi () {\r\n    return `driver.toggle_wifi`;\r\n  }\r\n\r\n  codeFor_toggleLocationServices () {\r\n    return `driver.toggle_location_services`;\r\n  }\r\n\r\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\r\n    return `driver.send_sms(phone_number: '${phoneNumber}', message: '${text}')`;\r\n  }\r\n\r\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\r\n    return `driver.gsm_call(phone_number: '${phoneNumber}', action: :${action})`;\r\n  }\r\n\r\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\r\n    return `driver.gsm_signal :${signalStrength}`;\r\n  }\r\n\r\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\r\n    return `driver.gsm_voice :${state}`;\r\n  }\r\n\r\n  codeFor_shake () {\r\n    return `driver.shake`;\r\n  }\r\n\r\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\r\n    return `driver.lock(${seconds})`;\r\n  }\r\n\r\n  codeFor_unlock () {\r\n    return `driver.unlock`;\r\n  }\r\n\r\n  codeFor_isLocked () {\r\n    return `is_device_locked = driver.device_locked?`;\r\n  }\r\n\r\n  codeFor_rotateDevice () {\r\n    return `# Not supported: rotateDevice`;\r\n  }\r\n\r\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\r\n    return `performance_data = driver.get_performance_data package_name: '${packageName}', data_type: '${dataType}', data_read_timeout: ${dataReadTimeout}`;\r\n  }\r\n\r\n  codeFor_getSupportedPerformanceDataTypes () {\r\n    return `performance_data = driver.get_performance_data_types`;\r\n  }\r\n\r\n  codeFor_performTouchId (varNameIgnore, varIndexIgnore, match) {\r\n    return `driver.touch_id ${match}`;\r\n  }\r\n\r\n  codeFor_toggleTouchIdEnrollment (varNameIgnore, varIndexIgnore, enroll) {\r\n    return `driver.toggle_touch_id_enrollment ${enroll}`;\r\n  }\r\n\r\n  codeFor_openNotifications () {\r\n    return `driver.open_notifications`;\r\n  }\r\n\r\n  codeFor_getDeviceTime () {\r\n    return `device_time = driver.device_time`;\r\n  }\r\n\r\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\r\n    return `driver.finger_print ${fingerprintId}`;\r\n  }\r\n\r\n  codeFor_sessionCapabilities () {\r\n    return `session_capabilities = driver.session_capabilities`;\r\n  }\r\n\r\n  codeFor_setPageLoadTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.timeout('pageLoad', ${ms})`;\r\n  }\r\n\r\n  codeFor_setAsyncScriptTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.timeout('script', ${ms})`;\r\n  }\r\n\r\n  codeFor_setImplicitWaitTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.timeout('implicit', ${ms})`;\r\n  }\r\n\r\n  codeFor_getOrientation () {\r\n    return `orientation = driver.orientation`;\r\n  }\r\n\r\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\r\n    return `driver.rotation = :${orientation}`;\r\n  }\r\n\r\n  codeFor_getGeoLocation () {\r\n    return `geo_location = driver.location`;\r\n  }\r\n\r\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\r\n    return `driver.set_location(${latitude}, ${longitude}, ${altitude})`;\r\n  }\r\n\r\n  codeFor_logTypes () {\r\n    return `log_types = driver.logs.available_types`;\r\n  }\r\n\r\n  codeFor_log (varNameIgnore, varIndexIgnore, logType) {\r\n    return `driver.logs.get '${logType}'`;\r\n  }\r\n\r\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\r\n    try {\r\n      let settings = '';\r\n      for (let [settingName, settingValue] of _.toPairs(JSON.parse(settingsJson))) {\r\n        settings += `driver.update_settings(${settingName}: '${settingValue}')\\n`;\r\n      }\r\n      return settings;\r\n    } catch (e) {\r\n      return `// Could not parse: ${settingsJson}`;\r\n    }\r\n  }\r\n\r\n  codeFor_settings () {\r\n    return `settings = driver.get_settings`;\r\n  }\r\n\r\n  // Web\r\n\r\n  codeFor_get (url) {\r\n    return `driver.get '${url}'`;\r\n  }\r\n\r\n  codeFor_url () {\r\n    return `current_url = driver.current_url`;\r\n  }\r\n\r\n  codeFor_forward () {\r\n    return `driver.navigate().forward`;\r\n  }\r\n\r\n  codeFor_refresh () {\r\n    return `driver.navigate().refresh`;\r\n  }\r\n\r\n  // Context\r\n\r\n  codeFor_currentContext () {\r\n    return `driver.current_context`;\r\n  }\r\n\r\n  codeFor_contexts () {\r\n    return `driver.available_contexts`;\r\n  }\r\n\r\n  codeFor_context (name) {\r\n    return `set_context '${name}'`;\r\n  }\r\n}\r\n\r\nRubyFramework.readableName = 'Ruby';\r\n\r\nexport default RubyFramework;\r\n","/* eslint no-useless-escape: 0 */\r\n\r\nimport Framework from './framework';\r\n\r\nclass RobotFramework extends Framework {\r\n\r\n  get language () {\r\n    //TODO: Make https://highlightjs.org/ use robot syntax\r\n    return 'python';\r\n  }\r\n\r\n  get getCapsVariables () {\r\n    return Object.keys(this.caps).map((k) => `\\$\\{${k}\\}    ${this.getPythonVal(this.caps[k])}`).join('\\n');\r\n  }\r\n\r\n  getPythonVal (jsonVal) {\r\n    if (typeof jsonVal === 'boolean') {\r\n      return jsonVal ? 'True' : 'False';\r\n    }\r\n    return jsonVal;\r\n  }\r\n\r\n  wrapWithBoilerplate (code) {\r\n    return `# This sample code uses the Appium robot client\r\n# pip install robotframework-appiumlibrary\r\n# Then you can paste this into a file and simply run with robot\r\n#\r\n#  more keywords on: http://serhatbolsu.github.io/robotframework-appiumlibrary/AppiumLibrary.html\r\n\r\n*** Settings ***\r\nLibrary           AppiumLibrary\r\n\r\n*** Variables ***\r\n$\\{REMOTE_URL\\}   ${this.serverUrl}\r\n${this.getCapsVariables}\r\n\r\n*** Test Cases ***\r\nTest case name\r\n${this.indent(this.getApplicationInitialization(), 4)}\r\n${this.indent(code, 4)}\r\n\r\n*** Test Teardown ***\r\n    Quit Application\r\n\r\n*** Suite Teardown ***\r\n    Close Application`;\r\n  }\r\n\r\n  codeFor_findAndAssign (strategy, locator/*, localVar, isArray*/) {\r\n    let suffixMap = {\r\n      xpath: 'xpath',\r\n      'accessibility id': 'accessibility_id',\r\n      'id': 'id',\r\n      'name': 'name', // TODO: How does Python use name selector\r\n      'class name': 'class_name',\r\n      '-android uiautomator': 'unsupported',\r\n      '-android datamatcher': 'unsupported',\r\n      '-android viewtag': 'unsupported',\r\n      '-ios predicate string': 'ios_predicate',\r\n      '-ios class chain': 'ios_uiautomation', // TODO: Could not find iOS UIAutomation\r\n    };\r\n    if (!suffixMap[strategy]) {\r\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\r\n    }\r\n    //TODO: in the robot case, we need the ID on the codeFor_ for execution\r\n    this.lastID = `${strategy}=${locator}`;\r\n    return `# ${this.lastID}`;\r\n  }\r\n\r\n  getApplicationInitialization () {\r\n    let varString = Object.keys(this.caps).map((k) => `${k}=\\$\\{${k}\\}`).join('  ');\r\n    return `Open Application    \\$\\{REMOTE_URL\\}   ${varString}`;\r\n  }\r\n\r\n  codeFor_click (/*varName, varIndex*/) {\r\n    return `Click Element    ${this.lastID}`;\r\n  }\r\n\r\n  codeFor_clear (/*varName, varIndex*/) {\r\n    return `Clear Text    ${this.lastID}`;\r\n  }\r\n\r\n  codeFor_sendKeys (varName, varIndex, text) {\r\n    return `Input Text    ${this.lastID}    ${text}`;\r\n  }\r\n\r\n  codeFor_back () {\r\n    return `Go Back`;\r\n  }\r\n\r\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\r\n    return `Tap    ${this.lastID}    ${x}    ${y}`;\r\n  }\r\n\r\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\r\n    return `Swipe    ${x1}    ${y1}    ${x2}    ${y2}`;\r\n  }\r\n\r\n  // TODO: Add these robot framework commands\r\n  codeFor_getCurrentActivity () {\r\n    return '';\r\n  }\r\n\r\n  codeFor_getCurrentPackage () {\r\n    return '';\r\n  }\r\n\r\n  codeFor_installAppOnDevice () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_isAppInstalledOnDevice () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_launchApp () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_backgroundApp () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_closeApp () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_resetApp () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_removeAppFromDevice () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_getAppStrings () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_getClipboard () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_setClipboard () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_pressKeycode () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_longPressKeycode () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_hideDeviceKeyboard () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_isKeyboardShown () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_pushFileToDevice () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_pullFile () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_pullFolder () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_toggleAirplaneMode () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_toggleData () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_toggleWiFi () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_toggleLocationServices () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_sendSMS () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_gsmCall () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_gsmSignal () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_gsmVoice () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_shake () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_lock () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_unlock () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_isLocked () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_rotateDevice () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_getPerformanceData () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_getSupportedPerformanceDataTypes () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_performTouchId () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_toggleTouchIdEnrollment () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_openNotifications () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_getDeviceTime () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_fingerprint () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_sessionCapabilities () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_setPageLoadTimeout () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_setAsyncScriptTimeout () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_setImplicitWaitTimeout () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_setCommandTimeout () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_getOrientation () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_setOrientation () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_getGeoLocation () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_setGeoLocation () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_logTypes () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_log () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_updateSettings () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_settings () {\r\n    return ``;\r\n  }\r\n\r\n  // Web\r\n\r\n  codeFor_get () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_url () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_forward () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_refresh () {\r\n    return ``;\r\n  }\r\n\r\n  // Context\r\n\r\n  codeFor_currentContext () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_contexts () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_context () {\r\n    return ``;\r\n  }\r\n}\r\n\r\nRobotFramework.readableName = 'Robot Framework';\r\n\r\nexport default RobotFramework;\r\n","import JsWdFramework from './js-wd';\r\nimport JsWdIoFramework from './js-wdio';\r\nimport JsOxygenFramework from './js-oxygen';\r\nimport JavaFramework from './java';\r\nimport PythonFramework from './python';\r\nimport RubyFramework from './ruby';\r\nimport RobotFramework from './robot';\r\n\r\nconst frameworks = {\r\n  jsWd: JsWdFramework,\r\n  jsWdIo: JsWdIoFramework,\r\n  jsOxygen: JsOxygenFramework,\r\n  java: JavaFramework,\r\n  python: PythonFramework,\r\n  ruby: RubyFramework,\r\n  robot: RobotFramework,\r\n};\r\n\r\nexport default frameworks;\r\n","import { ipcRenderer } from 'electron';\r\nimport { notification } from 'antd';\r\nimport { push } from 'connected-react-router';\r\nimport _ from 'lodash';\r\nimport B from 'bluebird';\r\nimport { getLocators } from '../components/Inspector/shared';\r\nimport { showError } from './Session';\r\nimport { bindClient, unbindClient, callClientMethod } from './shared';\r\nimport { xmlToJSON } from '../util';\r\nimport frameworks from '../lib/client-frameworks';\r\nimport settings from '../../shared/settings';\r\nimport i18n from '../../configs/i18next.config.renderer';\r\n\r\nexport const SET_SESSION_DETAILS = 'SET_SESSION_DETAILS';\r\nexport const SET_SOURCE_AND_SCREENSHOT = 'SET_SOURCE_AND_SCREENSHOT';\r\nexport const SESSION_DONE = 'SESSION_DONE';\r\nexport const SELECT_ELEMENT = 'SELECT_ELEMENT';\r\nexport const UNSELECT_ELEMENT = 'UNSELECT_ELEMENT';\r\nexport const SET_SELECTED_ELEMENT_ID = 'SET_SELECTED_ELEMENT_ID';\r\nexport const SET_INTERACTIONS_NOT_AVAILABLE = 'SET_INTERACTIONS_NOT_AVAILABLE';\r\nexport const METHOD_CALL_REQUESTED = 'METHOD_CALL_REQUESTED';\r\nexport const METHOD_CALL_DONE = 'METHOD_CALL_DONE';\r\nexport const SET_FIELD_VALUE = 'SET_FIELD_VALUE';\r\nexport const SET_EXPANDED_PATHS = 'SET_EXPANDED_PATHS';\r\nexport const SELECT_HOVERED_ELEMENT = 'SELECT_HOVERED_ELEMENT';\r\nexport const UNSELECT_HOVERED_ELEMENT = 'UNSELECT_HOVERED_ELEMENT';\r\nexport const SHOW_SEND_KEYS_MODAL = 'SHOW_SEND_KEYS_MODAL';\r\nexport const HIDE_SEND_KEYS_MODAL = 'HIDE_SEND_KEYS_MODAL';\r\nexport const QUIT_SESSION_REQUESTED = 'QUIT_SESSION_REQUESTED';\r\nexport const QUIT_SESSION_DONE = 'QUIT_SESSION_DONE';\r\n\r\nexport const START_RECORDING = 'START_RECORDING';\r\nexport const PAUSE_RECORDING = 'PAUSE_RECORDING';\r\nexport const CLEAR_RECORDING = 'CLEAR_RECORDING';\r\nexport const CLOSE_RECORDER = 'CLOSE_RECORDER';\r\nexport const SET_ACTION_FRAMEWORK = 'SET_ACTION_FRAMEWORK';\r\nexport const SAVED_FRAMEWORK = 'SAVED_FRAMEWORK';\r\nexport const RECORD_ACTION = 'RECORD_ACTION';\r\nexport const SET_SHOW_BOILERPLATE = 'SET_SHOW_BOILERPLATE';\r\n\r\nexport const SHOW_LOCATOR_TEST_MODAL = 'SHOW_LOCATOR_TEST_MODAL';\r\nexport const HIDE_LOCATOR_TEST_MODAL = 'HIDE_LOCATOR_TEST_MODAL';\r\nexport const SET_LOCATOR_TEST_STRATEGY = 'SET_LOCATOR_TEST_STRATEGY';\r\nexport const SET_LOCATOR_TEST_VALUE = 'SET_LOCATOR_TEST_VALUE';\r\nexport const SEARCHING_FOR_ELEMENTS = 'SEARCHING_FOR_ELEMENTS';\r\nexport const SEARCHING_FOR_ELEMENTS_COMPLETED = 'SEARCHING_FOR_ELEMENTS_COMPLETED';\r\nexport const GET_FIND_ELEMENTS_TIMES = 'GET_FIND_ELEMENTS_TIMES';\r\nexport const GET_FIND_ELEMENTS_TIMES_COMPLETED = 'GET_FIND_ELEMENTS_TIMES_COMPLETED';\r\nexport const SET_LOCATOR_TEST_ELEMENT = 'SET_LOCATOR_TEST_ELEMENT';\r\nexport const CLEAR_SEARCH_RESULTS = 'CLEAR_SEARCH_RESULTS';\r\nexport const ADD_ASSIGNED_VAR_CACHE = 'ADD_ASSIGNED_VAR_CACHE';\r\nexport const CLEAR_ASSIGNED_VAR_CACHE = 'CLEAR_ASSIGNED_VAR_CACHE';\r\nexport const SET_SCREENSHOT_INTERACTION_MODE = 'SET_SCREENSHOT_INTERACTION_MODE';\r\nexport const SET_SEARCHED_FOR_ELEMENT_BOUNDS = 'SET_SEARCHED_FOR_ELEMENT_BOUNDS';\r\nexport const CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS = 'CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS';\r\n\r\nexport const SET_SWIPE_START = 'SET_SWIPE_START';\r\nexport const SET_SWIPE_END = 'SET_SWIPE_END';\r\nexport const CLEAR_SWIPE_ACTION = 'CLEAR_SWIPE_ACTION';\r\nexport const PROMPT_KEEP_ALIVE = 'PROMPT_KEEP_ALIVE';\r\nexport const HIDE_PROMPT_KEEP_ALIVE = 'HIDE_PROMPT_KEEP_ALIVE';\r\n\r\nexport const SELECT_INTERACTION_MODE = 'SELECT_INTERACTION_MODE';\r\n\r\nexport const SELECT_ACTION_GROUP = 'SELECT_ACTION_GROUP';\r\nexport const SELECT_SUB_ACTION_GROUP = 'SELECT_SUB_ACTION_GROUP';\r\n\r\nexport const ENTERING_ACTION_ARGS = 'ENTERING_ACTION_ARGS';\r\nexport const REMOVE_ACTION = 'REMOVE_ACTION';\r\nexport const SET_ACTION_ARG = 'SET_ACTION_ARG';\r\n\r\nexport const SET_CONTEXT = 'SET_CONTEXT';\r\n\r\nexport function bindAppium () {\r\n  return (dispatch) => {\r\n    // Listen for session response messages from 'main'\r\n    bindClient();\r\n\r\n    // If user is inactive ask if they wish to keep session alive\r\n    ipcRenderer.on('appium-prompt-keep-alive', () => {\r\n      promptKeepAlive()(dispatch);\r\n    });\r\n\r\n    // When session is done, unbind them all\r\n    ipcRenderer.on('appium-session-done', (evt, {reason, killedByUser}) => {\r\n      ipcRenderer.removeAllListeners('appium-session-done');\r\n      ipcRenderer.removeAllListeners('appium-prompt-keep-alive');\r\n      unbindClient();\r\n      dispatch({type: QUIT_SESSION_DONE});\r\n      dispatch(push('/session'));\r\n      if (!killedByUser) {\r\n        notification.error({\r\n          message: 'Error',\r\n          description: reason || i18n.t('Session has been terminated'),\r\n          duration: 0\r\n        });\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\n// A debounced function that calls findElement and gets info about the element\r\nconst findElement = _.debounce(async function (strategyMap, dispatch, getState, path) {\r\n  for (let [strategy, selector] of strategyMap) {\r\n    // Get the information about the element\r\n    let {elementId, variableName, variableType} = await callClientMethod({\r\n      strategy,\r\n      selector,\r\n    });\r\n\r\n    // Set the elementId, variableName and variableType for the selected element\r\n    // (check first that the selectedElementPath didn't change, to avoid race conditions)\r\n    if (elementId && getState().inspector.selectedElementPath === path) {\r\n      return dispatch({type: SET_SELECTED_ELEMENT_ID, elementId, variableName, variableType});\r\n    }\r\n  }\r\n\r\n  return dispatch({type: SET_INTERACTIONS_NOT_AVAILABLE});\r\n}, 1000);\r\n\r\nexport function selectElement (path) {\r\n  return async (dispatch, getState) => {\r\n    // Set the selected element in the source tree\r\n    dispatch({type: SELECT_ELEMENT, path});\r\n    const state = getState().inspector;\r\n    const {attributes: selectedElementAttributes, xpath: selectedElementXPath} = state.selectedElement;\r\n    const {sourceXML} = state;\r\n\r\n    // Expand all of this element's ancestors so that it's visible in the source tree\r\n    let {expandedPaths} = getState().inspector;\r\n    let pathArr = path.split('.').slice(0, path.length - 1);\r\n    while (pathArr.length > 1) {\r\n      pathArr.splice(pathArr.length - 1);\r\n      let path = pathArr.join('.');\r\n      if (expandedPaths.indexOf(path) < 0) {\r\n        expandedPaths.push(path);\r\n      }\r\n    }\r\n    dispatch({type: SET_EXPANDED_PATHS, paths: expandedPaths});\r\n\r\n\r\n    // Find the optimal selection strategy. If none found, fall back to XPath.\r\n    const strategyMap = _.toPairs(getLocators(selectedElementAttributes, sourceXML));\r\n    strategyMap.push(['xpath', selectedElementXPath]);\r\n\r\n    // Debounce find element so that if another element is selected shortly after, cancel the previous search\r\n    await findElement(strategyMap, dispatch, getState, path);\r\n  };\r\n}\r\n\r\nexport function unselectElement () {\r\n  return (dispatch) => {\r\n    dispatch({type: UNSELECT_ELEMENT});\r\n  };\r\n}\r\n\r\nexport function selectHoveredElement (path) {\r\n  return (dispatch) => {\r\n    dispatch({type: SELECT_HOVERED_ELEMENT, path});\r\n  };\r\n}\r\n\r\nexport function unselectHoveredElement (path) {\r\n  return (dispatch) => {\r\n    dispatch({type: UNSELECT_HOVERED_ELEMENT, path});\r\n  };\r\n}\r\n\r\n/**\r\n * Requests a method call on appium\r\n */\r\nexport function applyClientMethod (params) {\r\n  return async (dispatch, getState) => {\r\n    const isRecording = params.methodName !== 'quit' &&\r\n                      params.methodName !== 'source' &&\r\n                      getState().inspector.isRecording;\r\n    try {\r\n      dispatch({type: METHOD_CALL_REQUESTED});\r\n      const {contexts, contextsError, currentContext, currentContextError,\r\n             source, screenshot, windowSize, result, sourceError,\r\n             screenshotError, windowSizeError, variableName,\r\n             variableIndex, strategy, selector} = await callClientMethod(params);\r\n\r\n      if (isRecording) {\r\n        // Add 'findAndAssign' line of code. Don't do it for arrays though. Arrays already have 'find' expression\r\n        if (strategy && selector && !variableIndex && variableIndex !== 0) {\r\n          findAndAssign(strategy, selector, variableName, false)(dispatch, getState);\r\n        }\r\n\r\n        // now record the actual action\r\n        let args = [variableName, variableIndex];\r\n        args = args.concat(params.args || []);\r\n        dispatch({type: RECORD_ACTION, action: params.methodName, params: args });\r\n      }\r\n      dispatch({type: METHOD_CALL_DONE});\r\n\r\n      if (source && screenshot) {\r\n        dispatch({\r\n          type: SET_SOURCE_AND_SCREENSHOT,\r\n          contexts,\r\n          currentContext,\r\n          source: source && xmlToJSON(source),\r\n          sourceXML: source,\r\n          screenshot,\r\n          windowSize,\r\n          contextsError,\r\n          currentContextError,\r\n          sourceError,\r\n          screenshotError,\r\n          windowSizeError,\r\n        });\r\n      }\r\n      return result;\r\n    } catch (error) {\r\n      let methodName = params.methodName === 'click' ? 'tap' : params.methodName;\r\n      showError(error, methodName, 10);\r\n      dispatch({type: METHOD_CALL_DONE});\r\n    }\r\n  };\r\n}\r\n\r\nexport function addAssignedVarCache (varName) {\r\n  return (dispatch) => {\r\n    dispatch({type: ADD_ASSIGNED_VAR_CACHE, varName});\r\n  };\r\n}\r\n\r\nexport function showSendKeysModal () {\r\n  return (dispatch) => {\r\n    dispatch({type: SHOW_SEND_KEYS_MODAL});\r\n  };\r\n}\r\n\r\nexport function hideSendKeysModal () {\r\n  return (dispatch) => {\r\n    dispatch({type: HIDE_SEND_KEYS_MODAL});\r\n  };\r\n}\r\n\r\n/**\r\n * Set a value of an arbitrarily named field\r\n */\r\nexport function setFieldValue (name, value) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_FIELD_VALUE, name, value});\r\n  };\r\n}\r\n\r\nexport function setExpandedPaths (paths) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_EXPANDED_PATHS, paths});\r\n  };\r\n}\r\n\r\n/**\r\n * Quit the session and go back to the new session window\r\n */\r\nexport function quitSession () {\r\n  return async (dispatch) => {\r\n    await applyClientMethod({methodName: 'quit'})(dispatch);\r\n  };\r\n}\r\n\r\nexport function startRecording () {\r\n  return (dispatch) => {\r\n    dispatch({type: START_RECORDING});\r\n  };\r\n}\r\n\r\nexport function pauseRecording () {\r\n  return (dispatch) => {\r\n    dispatch({type: PAUSE_RECORDING});\r\n  };\r\n}\r\n\r\nexport function clearRecording () {\r\n  return (dispatch) => {\r\n    dispatch({type: CLEAR_RECORDING});\r\n    ipcRenderer.send('appium-restart-recorder'); // Tell the main thread to start the variable count from 1\r\n    dispatch({type: CLEAR_ASSIGNED_VAR_CACHE}); // Get rid of the variable cache\r\n  };\r\n}\r\n\r\nexport function getSavedActionFramework () {\r\n  return async (dispatch) => {\r\n    let framework = await settings.get(SAVED_FRAMEWORK);\r\n    dispatch({type: SET_ACTION_FRAMEWORK, framework});\r\n  };\r\n}\r\n\r\nexport function setActionFramework (framework) {\r\n  return async (dispatch) => {\r\n    if (!frameworks[framework]) {\r\n      throw new Error(i18n.t('frameworkNotSupported', {framework}));\r\n    }\r\n    await settings.set(SAVED_FRAMEWORK, framework);\r\n    dispatch({type: SET_ACTION_FRAMEWORK, framework});\r\n  };\r\n}\r\n\r\nexport function recordAction (action, params) {\r\n  return (dispatch) => {\r\n    dispatch({type: RECORD_ACTION, action, params});\r\n  };\r\n}\r\n\r\nexport function closeRecorder () {\r\n  return (dispatch) => {\r\n    dispatch({type: CLOSE_RECORDER});\r\n  };\r\n}\r\n\r\nexport function toggleShowBoilerplate () {\r\n  return (dispatch, getState) => {\r\n    const show = !getState().inspector.showBoilerplate;\r\n    dispatch({type: SET_SHOW_BOILERPLATE, show});\r\n  };\r\n}\r\n\r\nexport function setSessionDetails (sessionDetails) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_SESSION_DETAILS, sessionDetails});\r\n  };\r\n}\r\n\r\nexport function showLocatorTestModal () {\r\n  return (dispatch) => {\r\n    dispatch({type: SHOW_LOCATOR_TEST_MODAL});\r\n  };\r\n}\r\n\r\nexport function hideLocatorTestModal () {\r\n  return (dispatch) => {\r\n    dispatch({type: HIDE_LOCATOR_TEST_MODAL});\r\n    dispatch({type: CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS});\r\n  };\r\n}\r\n\r\nexport function setLocatorTestValue (locatorTestValue) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_LOCATOR_TEST_VALUE, locatorTestValue});\r\n  };\r\n}\r\n\r\nexport function setLocatorTestStrategy (locatorTestStrategy) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_LOCATOR_TEST_STRATEGY, locatorTestStrategy});\r\n  };\r\n}\r\n\r\nexport function setContext (context) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_CONTEXT, context});\r\n  };\r\n}\r\n\r\nexport function searchForElement (strategy, selector) {\r\n  return async (dispatch, getState) => {\r\n    dispatch({type: SEARCHING_FOR_ELEMENTS});\r\n    try {\r\n      let {elements, variableName} = await callClientMethod({strategy, selector, fetchArray: true});\r\n      findAndAssign(strategy, selector, variableName, true)(dispatch, getState);\r\n      elements = elements.map((el) => el.id);\r\n      dispatch({type: SEARCHING_FOR_ELEMENTS_COMPLETED, elements});\r\n    } catch (error) {\r\n      dispatch({type: SEARCHING_FOR_ELEMENTS_COMPLETED});\r\n      showError(error, 10);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Get all the find element times based on the find data source\r\n */\r\nexport function getFindElementsTimes (findDataSource) {\r\n  return async (dispatch) => {\r\n    dispatch({type: GET_FIND_ELEMENTS_TIMES});\r\n    try {\r\n      const findElementsExecutionTimes = [];\r\n      for (const element of findDataSource) {\r\n        const {find, key, selector} = element;\r\n        const {executionTime} = await callClientMethod({strategy: key, selector});\r\n        findElementsExecutionTimes.push({find, key, selector, time: executionTime});\r\n      }\r\n\r\n      dispatch({\r\n        type: GET_FIND_ELEMENTS_TIMES_COMPLETED,\r\n        findElementsExecutionTimes: _.sortBy(findElementsExecutionTimes, ['time']),\r\n      });\r\n    } catch (error) {\r\n      dispatch({type: GET_FIND_ELEMENTS_TIMES_COMPLETED});\r\n      showError(error, 10);\r\n    }\r\n  };\r\n}\r\n\r\nexport function findAndAssign (strategy, selector, variableName, isArray) {\r\n  return (dispatch, getState) => {\r\n    const {assignedVarCache} = getState().inspector;\r\n\r\n    // If this call to 'findAndAssign' for this variable wasn't done already, do it now\r\n    if (!assignedVarCache[variableName]) {\r\n      dispatch({type: RECORD_ACTION, action: 'findAndAssign', params: [strategy, selector, variableName, isArray]});\r\n      dispatch({type: ADD_ASSIGNED_VAR_CACHE, varName: variableName});\r\n    }\r\n  };\r\n}\r\n\r\nexport function setLocatorTestElement (elementId) {\r\n  return async (dispatch) => {\r\n    dispatch({type: SET_LOCATOR_TEST_ELEMENT, elementId});\r\n    dispatch({type: CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS});\r\n    if (elementId) {\r\n      try {\r\n        const [location, size] = await (B.all([\r\n          callClientMethod({methodName: 'getLocation', args: [elementId], skipRefresh: true, skipRecord: true, ignoreResult: true}),\r\n          callClientMethod({methodName: 'getSize', args: [elementId], skipRefresh: true, skipRecord: true, ignoreResult: true}),\r\n        ]));\r\n        dispatch({type: SET_SEARCHED_FOR_ELEMENT_BOUNDS, location: location.res, size: size.res});\r\n      } catch (ign) { }\r\n    }\r\n  };\r\n}\r\n\r\nexport function clearSearchResults () {\r\n  return (dispatch) => {\r\n    dispatch({type: CLEAR_SEARCH_RESULTS});\r\n  };\r\n}\r\n\r\nexport function selectScreenshotInteractionMode (screenshotInteractionMode) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_SCREENSHOT_INTERACTION_MODE, screenshotInteractionMode });\r\n  };\r\n}\r\n\r\nexport function setSwipeStart (swipeStartX, swipeStartY) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_SWIPE_START, swipeStartX, swipeStartY});\r\n  };\r\n}\r\n\r\nexport function setSwipeEnd (swipeEndX, swipeEndY) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_SWIPE_END, swipeEndX, swipeEndY});\r\n  };\r\n}\r\n\r\nexport function clearSwipeAction () {\r\n  return (dispatch) => {\r\n    dispatch({type: CLEAR_SWIPE_ACTION});\r\n  };\r\n}\r\n\r\nexport function promptKeepAlive () {\r\n  return (dispatch) => {\r\n    dispatch({type: PROMPT_KEEP_ALIVE});\r\n  };\r\n}\r\n\r\nexport function keepSessionAlive () {\r\n  return (dispatch) => {\r\n    dispatch({type: HIDE_PROMPT_KEEP_ALIVE});\r\n    ipcRenderer.send('appium-keep-session-alive');\r\n  };\r\n}\r\n\r\nexport function selectActionGroup (group) {\r\n  return (dispatch) => {\r\n    dispatch({type: SELECT_ACTION_GROUP, group});\r\n  };\r\n}\r\n\r\nexport function selectSubActionGroup (group) {\r\n  return (dispatch) => {\r\n    dispatch({type: SELECT_SUB_ACTION_GROUP, group});\r\n  };\r\n}\r\n\r\nexport function selectInteractionMode (interaction) {\r\n  return (dispatch) => {\r\n    dispatch({type: SELECT_INTERACTION_MODE, interaction});\r\n  };\r\n}\r\n\r\nexport function startEnteringActionArgs (actionName, action) {\r\n  return (dispatch) => {\r\n    dispatch({type: ENTERING_ACTION_ARGS, actionName, action});\r\n  };\r\n}\r\n\r\nexport function cancelPendingAction () {\r\n  return (dispatch) => {\r\n    dispatch({type: REMOVE_ACTION});\r\n  };\r\n}\r\n\r\nexport function setActionArg (index, value) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_ACTION_ARG, index, value});\r\n  };\r\n}\r\n","const BUTTON = {\r\n  DEFAULT: 'default',\r\n  PRIMARY: 'primary',\r\n  DISABLED: 'disabled',\r\n  DANGER: 'danger'\r\n};\r\n\r\nconst ALERT = {\r\n  ERROR: 'error',\r\n  WARNING: 'warning',\r\n  INFO: 'info'\r\n};\r\n\r\nconst INPUT = {\r\n  NUMBER: 'number',\r\n  TEXT: 'text',\r\n  TEXTAREA: 'textarea',\r\n  PASSWORD: 'password',\r\n  SUBMIT: 'submit'\r\n};\r\n\r\nconst ROW = {\r\n  FLEX: 'flex'\r\n};\r\n\r\n\r\nexport {\r\n  BUTTON,\r\n  ALERT,\r\n  INPUT,\r\n  ROW\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Form, Input, Radio, Row, Col } from 'antd';\r\nimport SessionStyles from './Session.css';\r\nimport { INPUT } from '../AntdTypes';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabTestobject extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, setServerParam, t} = this.props;\r\n\r\n    const placeholder = process.env.TESTOBJECT_API_KEY ?\r\n      t('usingDataFoundIn', {environmentVariable: 'TESTOBJECT_API_KEY'}) : t('testobjectApiKey');\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={24}>\r\n          <FormItem>\r\n            <Input id='testObjectPassword' type={INPUT.PASSWORD} placeholder={placeholder} addonBefore={t('TestObject API Key')} value={server.testobject.apiKey} onChange={(e) => setServerParam('apiKey', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={24}>\r\n          <FormItem>\r\n            <div className={['ant-input-group-addon', SessionStyles.addonDataCenter].join(' ') }>{t('TestObject Data Center')}</div>\r\n            <Radio.Group className={SessionStyles.inputDataCenter} buttonStyle=\"solid\" defaultValue='us1' id='testObjectDataCenter' value={server.testobject.dataCenter} onChange={(e) => setServerParam('dataCenter', e.target.value)}>\r\n              <Radio value='us1'>{t('US')}</Radio>\r\n              <Radio value='eu1'>{t('EU')}</Radio>\r\n            </Radio.Group>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Row, Col, Input } from 'antd';\r\nimport SessionStyles from './Session.css';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabHeadspin extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, setServerParam, t} = this.props;\r\n\r\n    const headspinUrl = 'https://xxxx.headspin.io:4723/v0/your-api-token/wd/hub';\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={24}>\r\n          <FormItem>\r\n            <Input className={SessionStyles.customServerInputLeft} id='headspinServerHost' placeholder={headspinUrl} addonBefore={t('serverTabHeasdpinWebDriverURL')}\r\n              value={server.headspin.webDriverUrl} onChange={(e) => setServerParam('webDriverUrl', e.target.value)} />\r\n            <p className={SessionStyles.localDesc}>{t('sessionHeadspinWebDriverURLDescription')}</p>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Input, Row, Col } from 'antd';\r\nimport { INPUT } from '../AntdTypes';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabBrowserstack extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, setServerParam, t} = this.props;\r\n\r\n    const browserstackUsernamePlaceholder = process.env.BROWSERSTACK_USERNAME ?\r\n      t('usingDataFoundIn', {environmentVariable: 'BROWSERSTACK_USERNAME'}) : t('yourUsername');\r\n\r\n    const browserstackAccessKeyPlaceholder = process.env.BROWSERSTACK_ACCESS_KEY ?\r\n      t('usingDataFoundIn', {environmentVariable: 'BROWSERSTACK_ACCESS_KEY'}) : t('yourAccessKey');\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='browserstackUsername' placeholder={browserstackUsernamePlaceholder} addonBefore={t('BrowserStack Username')} value={server.browserstack.username}\r\n              onChange={(e) => setServerParam('username', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='browserstackPassword' type={INPUT.PASSWORD} placeholder={browserstackAccessKeyPlaceholder} addonBefore={t('BrowserStack Access Key')}\r\n              value={server.browserstack.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Input, Row, Col } from 'antd';\r\nimport { INPUT } from '../AntdTypes';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabBitbar extends Component {\r\n\r\n  render () {\r\n    const { server, setServerParam, t } = this.props;\r\n\r\n    const bitbarApiKeyPlaceholder = process.env.BITBAR_API_KEY ?\r\n      t('usingDataFoundIn', {environmentVariable: 'BITBAR_API_KEY'}) : t('yourApiKey');\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='bitbarApiKey' type={INPUT.PASSWORD} placeholder={bitbarApiKeyPlaceholder} addonBefore={t('Bitbar API Key')}\r\n              value={server.bitbar.apiKey} onChange={(e) => setServerParam('apiKey', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Input, Row, Col } from 'antd';\r\nimport { INPUT } from '../AntdTypes';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabKobiton extends Component {\r\n\r\n  render () {\r\n    const {server, setServerParam, t} = this.props;\r\n    const kobitonUsernamePlaceholder = process.env.KOBITON_USERNAME ?\r\n      t('usingDataFoundIn', {environmentVariable: 'KOBITON_USERNAME'}) : t('yourUsername');\r\n\r\n    const kobitonAccessKeyPlaceholder = process.env.KOBITON_ACCESS_KEY ?\r\n      t('usingDataFoundIn', {environmentVariable: 'KOBITON_ACCESS_KEY'}) : t('yourAccessKey');\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='kobitonUsername' placeholder={kobitonUsernamePlaceholder} addonBefore={t('Kobiton Username')} value={server.kobiton.username}\r\n              onChange={(e) => setServerParam('username', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='kobitonAccessKey' type={INPUT.PASSWORD} placeholder={kobitonAccessKeyPlaceholder} addonBefore={t('Kobiton Access Key')} value={server.kobiton.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Row, Col, Input } from 'antd';\r\nimport SessionStyles from './Session.css';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabPerfecto extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, setServerParam, t} = this.props;\r\n\r\n    const cloudPerfectoUrl = 'cloud.Perfectomobile.com';\r\n\r\n    const perfectoTokenPlaceholder = process.env.PERFECTO_TOKEN ?\r\n      t('usingDataFoundIn', {environmentVariable: 'PERFECTO_TOKEN'}) : t('Add your token');\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input className={SessionStyles.customServerInputLeft} id='PerfectoServerHost' placeholder={cloudPerfectoUrl} addonBefore={t('Perfecto Host')}\r\n              value={server.perfecto.hostname} onChange={(e) => setServerParam('hostname', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='PerfectoPort' placeholder={80} addonBefore={t('Perfecto Port')} value={server.perfecto.port}\r\n              onChange={(e) => setServerParam('port', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n        <Col span={24}>\r\n          <FormItem>\r\n            <Input id='token' placeholder={perfectoTokenPlaceholder} addonBefore={t('Perfecto Token')} value={server.perfecto.token} onChange={(e) => setServerParam('token', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Row, Col, Input } from 'antd';\r\nimport SessionStyles from './Session.css';\r\nimport { INPUT } from '../AntdTypes';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabPcloudy extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, setServerParam, t} = this.props;\r\n\r\n    const pcloudyUsernamePlaceholder = 'username@pcloudy.com';\r\n    const pcloudyHostPlaceholder = 'cloud.pcloudy.com';\r\n    const pcloudyAccessKeyExample = 'kjdgtdwn65fdasd78uy6y';\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input className={SessionStyles.customServerInputLeft} id='PcloudyServerHost' placeholder={pcloudyHostPlaceholder} addonBefore={t('Pcloudy Host')}\r\n              value={server.pcloudy.hostname} onChange={(e) => setServerParam('hostname', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='username' type={INPUT.TEXT} placeholder={pcloudyUsernamePlaceholder} addonBefore={t('Pcloudy User Name')} value={server.pcloudy.username} onChange={(e) => setServerParam('username', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='accessKey' type={INPUT.PASSWORD} placeholder={pcloudyAccessKeyExample} addonBefore={t('Pcloudy API Key')}\r\n              value={server.pcloudy.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Row, Col, Input, Checkbox, Radio, Tooltip } from 'antd';\r\nimport SessionStyles from './Session.css';\r\nimport { INPUT } from '../AntdTypes';\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabSauce extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, setServerParam, t} = this.props;\r\n\r\n    const sauceUsernamePlaceholder = process.env.SAUCE_USERNAME ?\r\n      t('usingDataFoundIn', {environmentVariable: 'SAUCE_USERNAME'}) : t('yourUsername');\r\n\r\n    const sauceAccessKeyPlaceholder = process.env.SAUCE_ACCESS_KEY ?\r\n      t('usingDataFoundIn', {environmentVariable: 'SAUCE_ACCESS_KEY'}) : t('yourAccessKey');\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='sauceUsername' placeholder={sauceUsernamePlaceholder} addonBefore={t('Sauce Username')} value={server.sauce.username} onChange={(e) => setServerParam('username', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='saucePassword' type={INPUT.PASSWORD} placeholder={sauceAccessKeyPlaceholder}\r\n              addonBefore={t('Sauce Access Key')} value={server.sauce.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={24}>\r\n          <FormItem>\r\n            <div className={['ant-input-group-addon', SessionStyles.addonDataCenter].join(' ') }>{t('SauceLabs Data Center')}</div>\r\n            <Radio.Group className={[SessionStyles.inputDataCenter, SessionStyles.addonDataCenterRadioContainer].join(' ')} buttonStyle=\"solid\" defaultValue='us-west-1' id='sauceObjectDataCenter' value={server.sauce.dataCenter} onChange={(e) => setServerParam('dataCenter', e.target.value)}>\r\n              <Tooltip placement=\"top\" title={t('UP')}>\r\n                <Radio value='us-west-1'>{t('US')}</Radio>\r\n              </Tooltip>\r\n              <Radio value='eu-central-1'>{t('EU')}</Radio>\r\n            </Radio.Group>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={10}>\r\n          <FormItem>\r\n            <Checkbox checked={!!server.sauce.useSCProxy} onChange={(e) => setServerParam('useSCProxy', e.target.checked)}> {t('proxyThroughSC')}</Checkbox>\r\n          </FormItem>\r\n        </Col>\r\n        <Col span={6}>\r\n          <FormItem>\r\n            <Input addonBefore={t('Host')} placeholder={t('localhost')} disabled={!server.sauce.useSCProxy} value={server.sauce.scHost} onChange={(e) => setServerParam('scHost', e.target.value)}/>\r\n          </FormItem>\r\n        </Col>\r\n        <Col span={6}>\r\n          <FormItem>\r\n            <Input addonBefore={t('Port')} placeholder={4445} disabled={!server.sauce.useSCProxy} value={server.sauce.scPort} onChange={(e) => setServerParam('scPort', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Input, Row, Col } from 'antd';\r\nimport { INPUT } from '../AntdTypes';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabTestingbot extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, setServerParam, t} = this.props;\r\n\r\n    const testingbotKeyPlaceholder = process.env.TB_KEY ?\r\n      t('usingDataFoundIn', {environmentVariable: 'TB_KEY'}) : t('yourUsername');\r\n\r\n    const testingbotSecretPlaceholder = process.env.TB_SECRET ?\r\n      t('usingDataFoundIn', {environmentVariable: 'TB_SECRET'}) : t('yourAccessKey');\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='testingbotKey' placeholder={testingbotKeyPlaceholder} addonBefore={t('TestingBot Key')} value={server.testingbot.key} onChange={(e) => setServerParam('key', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='testingbotSecret' type={INPUT.PASSWORD} placeholder={testingbotSecretPlaceholder} addonBefore={t('TestingBot Secret')} value={server.testingbot.secret} onChange={(e) => setServerParam('secret', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Row, Col, Input } from 'antd';\r\nimport SessionStyles from './Session.css';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabExperitest extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, setServerParam, t} = this.props;\r\n    const accessKeyPlaceholder = 'accessKey';\r\n    const placeholderUrl = 'https://example.experitest.com';\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={24}>\r\n          <FormItem>\r\n            <Input className={SessionStyles.customServerInputLeft} id='ExperitestServerUrl' placeholder={placeholderUrl}\r\n              addonBefore={t('experitestUrl')} value={server.experitest.url}\r\n              onChange={(evt) => setServerParam('url', evt.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={24}>\r\n          <FormItem>\r\n            <Input className={SessionStyles.customServerInputLeft} id='ExperitestServerAccessKey' placeholder={accessKeyPlaceholder}\r\n              addonBefore={t('experitestAccessKey')} value={server.experitest.accessKey}\r\n              onChange={(evt) => setServerParam('accessKey', evt.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Input, Row, Col } from 'antd';\r\n\r\nconst FormItem = Form.Item;\r\nexport default class ServerTabRoboticMobi extends Component {\r\n  render () {\r\n\r\n    const { server, setServerParam, t } = this.props;\r\n\r\n    const placeholder = process.env.ROBOTIC_MOBI_TOKEN ?\r\n      t('usingDataFoundIn', { environmentVariable: 'ROBOTIC_MOBI_TOKEN' }) : t('roboticMobiToken');\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={24}>\r\n          <FormItem>\r\n            <Input id='roboticMobiToken' placeholder={placeholder} addonBefore={t('Robotic.Mobi Token')} value={server.roboticmobi.token} onChange={(e) => setServerParam('token', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ServerTabTestobject from './ServerTabTestobject';\r\nimport ServerTabHeadspin from './ServerTabHeadspin';\r\nimport ServerTabBrowserstack from './ServerTabBrowserstack';\r\nimport ServerTabBitbar from './ServerTabBitbar';\r\nimport ServerTabKobiton from './ServerTabKobiton';\r\nimport ServerTabPerfecto from './ServerTabPerfecto';\r\nimport ServerTabPcloudy from './ServerTabPcloudy';\r\nimport ServerTabSauce from './ServerTabSauce';\r\nimport ServerTabTestingbot from './ServerTabTestingbot';\r\nimport ServerTabExperitest from './ServerTabExperitest';\r\nimport ServerTabRoboticMobi from './ServerTabRoboticMobi';\r\n\r\nimport SessionStyles from './Session.css';\r\n\r\n// ParcelJS handles image loading by exporting a path to the image\r\nimport SauceLogo from '../../images/sauce_logo.svg';\r\nimport TestObjectLogo from '../../images/testobject_logo.svg';\r\nimport HeadSpinLogo from '../../images/headspin_logo.svg';\r\nimport BrowserStackLogo from '../../images/browserstack_logo.svg';\r\nimport BitBarLogo from '../../images/bitbar_logo.svg';\r\nimport KobitonLogo from '../../images/kobiton_logo.svg';\r\nimport PerfectoLogo from '../../images/perfecto_logo.png';\r\nimport PcloudyLogo from '../../images/pcloudy_logo.svg';\r\nimport TestingBotLogo from '../../images/testingbot_logo.svg';\r\nimport ExperitestLogo from '../../images/experitest_logo.svg';\r\nimport RoboticMobiLogo from '../../images/roboticmobi_logo.svg';\r\n\r\nconst CloudProviders = {\r\n  sauce: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={SauceLogo} /></span>,\r\n    tab: (props) => <ServerTabSauce {...props} />,\r\n    logo: SauceLogo,\r\n  },\r\n  testobject: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={TestObjectLogo} /></span>,\r\n    tab: (props) => <ServerTabTestobject {...props} />,\r\n    logo: TestObjectLogo,\r\n  },\r\n  headspin: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={HeadSpinLogo} /></span>,\r\n    tab: (props) => <ServerTabHeadspin {...props} />,\r\n    logo: HeadSpinLogo,\r\n  },\r\n  browserstack: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={BrowserStackLogo} /></span>,\r\n    tab: (props) => <ServerTabBrowserstack {...props} />,\r\n    logo: BrowserStackLogo,\r\n  },\r\n  bitbar: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={BitBarLogo} /></span>,\r\n    tab: (props) => <ServerTabBitbar {...props} />,\r\n    logo: BitBarLogo,\r\n  },\r\n  kobiton: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={KobitonLogo} /></span>,\r\n    tab: (props) => <ServerTabKobiton {...props} />,\r\n    logo: KobitonLogo,\r\n  },\r\n  perfecto: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={PerfectoLogo} /></span>,\r\n    tab: (props) => <ServerTabPerfecto {...props} />,\r\n    logo: PerfectoLogo,\r\n  },\r\n  pcloudy: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={PcloudyLogo} /></span>,\r\n    tab: (props) => <ServerTabPcloudy {...props} />,\r\n    logo: PcloudyLogo,\r\n  },\r\n  testingbot: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={TestingBotLogo} /></span>,\r\n    tab: (props) => <ServerTabTestingbot {...props} />,\r\n    logo: TestingBotLogo,\r\n  },\r\n  experitest: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={ExperitestLogo} /></span>,\r\n    tab: (props) => <ServerTabExperitest {...props} />,\r\n    logo: ExperitestLogo,\r\n  },\r\n  roboticmobi: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={RoboticMobiLogo} /></span>,\r\n    tab: (props) => <ServerTabRoboticMobi {...props} />,\r\n    logo: RoboticMobiLogo,\r\n  }\r\n};\r\n\r\nexport default CloudProviders;\r\n","import { ipcRenderer } from 'electron';\r\nimport settings from '../../shared/settings';\r\nimport { v4 as UUID } from 'uuid';\r\nimport url from 'url';\r\nimport { push } from 'connected-react-router';\r\nimport { notification } from 'antd';\r\nimport { debounce, toPairs, union, without, keys } from 'lodash';\r\nimport { setSessionDetails } from './Inspector';\r\nimport i18n from '../../configs/i18next.config.renderer';\r\nimport CloudProviders from '../components/Session/CloudProviders';\r\n\r\nexport const NEW_SESSION_REQUESTED = 'NEW_SESSION_REQUESTED';\r\nexport const NEW_SESSION_BEGAN = 'NEW_SESSION_BEGAN';\r\nexport const NEW_SESSION_DONE = 'NEW_SESSION_DONE';\r\nexport const CHANGE_CAPABILITY = 'CHANGE_CAPABILITY';\r\nexport const SAVE_SESSION_REQUESTED = 'SAVE_SESSION_REQUESTED';\r\nexport const SAVE_SESSION_DONE = 'SAVE_SESSION_DONE';\r\nexport const GET_SAVED_SESSIONS_REQUESTED = 'GET_SAVED_SESSIONS_REQUESTED';\r\nexport const GET_SAVED_SESSIONS_DONE = 'GET_SAVED_SESSIONS_DONE';\r\nexport const SET_CAPABILITY_PARAM = 'SET_CAPABILITY_PARAM';\r\nexport const ADD_CAPABILITY = 'ADD_CAPABILITY';\r\nexport const REMOVE_CAPABILITY = 'REMOVE_CAPABILITY';\r\nexport const SWITCHED_TABS = 'SWITCHED_TABS';\r\nexport const SET_CAPS = 'SET_CAPS';\r\nexport const SAVE_AS_MODAL_REQUESTED = 'SAVE_AS_MODAL_REQUESTED';\r\nexport const HIDE_SAVE_AS_MODAL_REQUESTED = 'HIDE_SAVE_AS_MODAL_REQUESTED';\r\nexport const SET_SAVE_AS_TEXT = 'SET_SAVE_AS_TEXT';\r\nexport const DELETE_SAVED_SESSION_REQUESTED = 'DELETE_SAVED_SESSION_REQUESTED';\r\nexport const DELETE_SAVED_SESSION_DONE = 'DELETE_SAVED_SESSION_DONE';\r\nexport const CHANGE_SERVER_TYPE = 'CHANGE_SERVER_TYPE';\r\nexport const SET_SERVER_PARAM = 'SET_SERVER_PARAM';\r\nexport const SET_SERVER = 'SET_SERVER';\r\nexport const SESSION_LOADING = 'SESSION_LOADING';\r\nexport const SESSION_LOADING_DONE = 'SESSION_LOADING_DONE';\r\n\r\nexport const SAVED_SESSIONS = 'SAVED_SESSIONS';\r\nexport const SESSION_SERVER_PARAMS = 'SESSION_SERVER_PARAMS';\r\nexport const SESSION_SERVER_TYPE = 'SESSION_SERVER_TYPE';\r\nexport const SERVER_ARGS = 'SERVER_ARGS';\r\nexport const VISIBLE_PROVIDERS = 'VISIBLE_PROVIDERS';\r\n\r\nexport const SET_ATTACH_SESS_ID = 'SET_ATTACH_SESS_ID';\r\n\r\nexport const GET_SESSIONS_REQUESTED = 'GET_SESSIONS_REQUESTED';\r\nexport const GET_SESSIONS_DONE = 'GET_SESSIONS_DONE';\r\n\r\n\r\nexport const ENABLE_DESIRED_CAPS_EDITOR = 'ENABLE_DESIRED_CAPS_EDITOR';\r\nexport const ABORT_DESIRED_CAPS_EDITOR = 'ABORT_DESIRED_CAPS_EDITOR';\r\nexport const SAVE_RAW_DESIRED_CAPS = 'SAVE_RAW_DESIRED_CAPS';\r\nexport const SET_RAW_DESIRED_CAPS = 'SET_RAW_DESIRED_CAPS';\r\nexport const SHOW_DESIRED_CAPS_JSON_ERROR = 'SHOW_DESIRED_CAPS_JSON_ERROR';\r\n\r\nexport const IS_ADDING_CLOUD_PROVIDER = 'IS_ADDING_CLOUD_PROVIDER';\r\n\r\nexport const SET_PROVIDERS = 'SET_PROVIDERS';\r\n\r\nconst serverTypes = {};\r\nfor (const key of keys(CloudProviders)) {\r\n  serverTypes[key] = key;\r\n}\r\nserverTypes.local = 'local';\r\nserverTypes.remote = 'remote';\r\n\r\nexport const ServerTypes = serverTypes;\r\n\r\nconst JSON_TYPES = ['object', 'number', 'boolean'];\r\n\r\nexport function getCapsObject (caps) {\r\n  return Object.assign({}, ...(caps.map((cap) => {\r\n    if (JSON_TYPES.indexOf(cap.type) !== -1) {\r\n      try {\r\n        let obj = JSON.parse(cap.value);\r\n        return {[cap.name]: obj};\r\n      } catch (ign) {}\r\n    }\r\n    return {[cap.name]: cap.value};\r\n  })));\r\n}\r\n\r\nexport function showError (e, methodName, secs = 5) {\r\n  let errMessage;\r\n  if (e['jsonwire-error'] && e['jsonwire-error'].status === 7) {\r\n    // FIXME: we probably should set 'findElement' as the method name\r\n    // if it is also number.\r\n    if (methodName === 10) {\r\n      methodName = 'findElements';\r\n    }\r\n    errMessage = i18n.t('findElementFailure', {methodName});\r\n    if (e.message) {\r\n      errMessage += ` Original error: '${e.message}'`;\r\n    }\r\n  } else if (e.data) {\r\n    try {\r\n      e.data = JSON.parse(e.data);\r\n    } catch (ign) {}\r\n    if (e.data.value && e.data.value.message) {\r\n      errMessage = e.data.value.message;\r\n    } else {\r\n      errMessage = e.data;\r\n    }\r\n  } else if (e.message) {\r\n    errMessage = e.message;\r\n  } else if (e.code) {\r\n    errMessage = e.code;\r\n  } else {\r\n    errMessage = i18n.t('Could not start session');\r\n  }\r\n  if (errMessage === 'ECONNREFUSED') {\r\n    errMessage = i18n.t('couldNotConnect');\r\n  }\r\n\r\n  notification.error({\r\n    message: methodName ? i18n.t('callToMethodFailed', {methodName}) : i18n.t('Error'),\r\n    description: errMessage,\r\n    duration: secs\r\n  });\r\n\r\n}\r\n\r\n/**\r\n * Change the caps object and then go back to the new session tab\r\n */\r\nexport function setCaps (caps, uuid) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_CAPS, caps, uuid});\r\n  };\r\n}\r\n\r\n/**\r\n * Change a single desired capability\r\n */\r\nexport function changeCapability (key, value) {\r\n  return (dispatch) => {\r\n    dispatch({type: CHANGE_CAPABILITY, key, value});\r\n  };\r\n}\r\n\r\n/**\r\n * Push a capability to the list\r\n */\r\nexport function addCapability () {\r\n  return (dispatch) => {\r\n    dispatch({type: ADD_CAPABILITY});\r\n  };\r\n}\r\n\r\n/**\r\n * Update value of a capability parameter\r\n */\r\nexport function setCapabilityParam (index, name, value) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_CAPABILITY_PARAM, index, name, value});\r\n  };\r\n}\r\n\r\n/**\r\n * Delete a capability from the list\r\n */\r\nexport function removeCapability (index) {\r\n  return (dispatch) => {\r\n    dispatch({type: REMOVE_CAPABILITY, index});\r\n  };\r\n}\r\n\r\n/**\r\n * Get the server info for the current serverType\r\n */\r\nexport function getServerInfo (session) {\r\n  let host, port, username, accessKey, https, path, token;\r\n  switch (session.serverType) {\r\n    case ServerTypes.local:\r\n      host = session.server.local.hostname;\r\n      if (host === '0.0.0.0') {\r\n        // if we're on windows, we won't be able to connect directly to '0.0.0.0'\r\n        // so just connect to localhost; if we're listening on all interfaces,\r\n        // that will of course include 127.0.0.1 on all platforms\r\n        host = 'localhost';\r\n      }\r\n      port = session.server.local.port;\r\n      break;\r\n    case ServerTypes.remote:\r\n      host = session.server.remote.hostname || '127.0.0.1';\r\n      port = session.server.remote.port || 4723;\r\n      path = session.server.remote.path;\r\n      https = session.server.remote.ssl;\r\n      break;\r\n    case ServerTypes.sauce:\r\n      host = `ondemand.${session.server.sauce.dataCenter}.saucelabs.com`;\r\n      port = 80;\r\n      if (session.server.sauce.useSCProxy) {\r\n        host = session.server.sauce.scHost || 'localhost';\r\n        port = parseInt(session.server.sauce.scPort, 10) || 4445;\r\n      }\r\n      username = session.server.sauce.username || process.env.SAUCE_USERNAME;\r\n      accessKey = session.server.sauce.accessKey || process.env.SAUCE_ACCESS_KEY;\r\n      if (!username || !accessKey) {\r\n        return;\r\n      }\r\n      https = false;\r\n      break;\r\n    case ServerTypes.testobject:\r\n      host = process.env.TESTOBJECT_HOST || `${session.server.testobject.dataCenter || 'us1'}.appium.testobject.com`;\r\n      port = 443;\r\n      https = true;\r\n      break;\r\n    case ServerTypes.headspin: {\r\n      const headspinUrl = url.parse(session.server.headspin.webDriverUrl);\r\n      host = session.server.headspin.hostname = headspinUrl.hostname;\r\n      port = session.server.headspin.port = headspinUrl.port;\r\n      path = session.server.headspin.path = headspinUrl.pathname;\r\n      https = session.server.headspin.ssl = headspinUrl.protocol === 'https:';\r\n      break;\r\n    }\r\n    case ServerTypes.perfecto:\r\n      host = session.server.perfecto.hostname;\r\n      port = session.server.perfecto.port || 80;\r\n      token = session.server.perfecto.token || process.env.PERFECTO_TOKEN;\r\n      path = session.server.perfecto.path = '/nexperience/perfectomobile/wd/hub';\r\n      if (!token) {\r\n        return;\r\n      }\r\n      https = session.server.perfecto.ssl = false;\r\n      break;\r\n    case ServerTypes.browserstack:\r\n      host = session.server.browserstack.hostname = process.env.BROWSERSTACK_HOST || 'hub-cloud.browserstack.com';\r\n      port = session.server.browserstack.port = process.env.BROWSERSTACK_PORT || 443;\r\n      path = session.server.browserstack.path = '/wd/hub';\r\n      username = session.server.browserstack.username || process.env.BROWSERSTACK_USERNAME;\r\n      accessKey = session.server.browserstack.accessKey || process.env.BROWSERSTACK_ACCESS_KEY;\r\n      if (!username || !accessKey) {\r\n        return;\r\n      }\r\n      https = session.server.browserstack.ssl = (parseInt(port, 10) === 443);\r\n      break;\r\n    case ServerTypes.bitbar:\r\n      host = process.env.BITBAR_HOST || 'appium.bitbar.com';\r\n      port = session.server.bitbar.port = 443;\r\n      path = session.server.bitbar.path = '/wd/hub';\r\n      accessKey = session.server.bitbar.apiKey || process.env.BITBAR_API_KEY;\r\n      if (!accessKey) {\r\n        return;\r\n      }\r\n      https = session.server.bitbar.ssl = true;\r\n      break;\r\n    case ServerTypes.kobiton:\r\n      host = process.env.KOBITON_HOST || 'api.kobiton.com';\r\n      port = session.server.kobiton.port = 443;\r\n      path = session.server.kobiton.path = '/wd/hub';\r\n      username = session.server.kobiton.username || process.env.KOBITON_USERNAME;\r\n      accessKey = session.server.kobiton.accessKey || process.env.KOBITON_ACCESS_KEY;\r\n      if (!username || !accessKey) {\r\n        return;\r\n      }\r\n      https = session.server.kobiton.ssl = true;\r\n      break;\r\n    case ServerTypes.pcloudy:\r\n      host = session.server.pcloudy.hostname;\r\n      port = session.server.pcloudy.port = 443;\r\n      path = session.server.pcloudy.path = '/objectspy/wd/hub';\r\n      username = session.server.pcloudy.username || process.env.PCLOUDY_USERNAME;\r\n      accessKey = session.server.pcloudy.accessKey || process.env.PCLOUDY_ACCESS_KEY;\r\n      if (!username || !accessKey) {\r\n        return;\r\n      }\r\n      https = session.server.pcloudy.ssl = true;\r\n      break;\r\n    case ServerTypes.testingbot:\r\n      host = session.server.testingbot.hostname = process.env.TB_HOST || 'hub.testingbot.com';\r\n      port = session.server.testingbot.port = 443;\r\n      username = session.server.testingbot.key || process.env.TB_KEY;\r\n      accessKey = session.server.testingbot.secret || process.env.TB_SECRET;\r\n      if (!username || !accessKey) {\r\n        return;\r\n      }\r\n      https = session.server.testingbot.ssl = true;\r\n      break;\r\n    case ServerTypes.experitest: {\r\n      if (!session.server.experitest.url || !session.server.experitest.accessKey) {\r\n        return;\r\n      }\r\n      let experitestUrl = url.parse(session.server.experitest.url);\r\n      host = session.server.experitest.hostname = experitestUrl.hostname;\r\n      path = session.server.experitest.path = '/wd/hub';\r\n      port = session.server.experitest.port = experitestUrl.port;\r\n      https = session.server.experitest.ssl = experitestUrl.protocol === 'https:';\r\n      break;\r\n    }\r\n    case ServerTypes.roboticmobi: {\r\n      host = 'api.robotic.mobi';\r\n      path = '/wd/hub';\r\n      port = 443;\r\n      https = 'https:';\r\n      break;\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n  return {host, port, username, accessKey, https, path, token};\r\n}\r\n\r\n/**\r\n * Start a new appium session with the given caps\r\n */\r\nexport function newSession (caps, attachSessId = null) {\r\n  return async (dispatch, getState) => {\r\n\r\n    dispatch({type: NEW_SESSION_REQUESTED, caps});\r\n\r\n    let desiredCapabilities = caps ? getCapsObject(caps) : {};\r\n    let session = getState().session;\r\n    let {host, port, username, accessKey, https, path, token} = getServerInfo(session);\r\n    desiredCapabilities = addCustomCaps(desiredCapabilities);\r\n\r\n    switch (session.serverType) {\r\n      case ServerTypes.local:\r\n        break;\r\n      case ServerTypes.remote:\r\n        break;\r\n      case ServerTypes.sauce:\r\n        if (!username || !accessKey) {\r\n          notification.error({\r\n            message: i18n.t('Error'),\r\n            description: i18n.t('sauceCredentialsRequired'),\r\n            duration: 4\r\n          });\r\n          return;\r\n        }\r\n        break;\r\n      case ServerTypes.testobject:\r\n        if (caps) {\r\n          desiredCapabilities.testobject_api_key = session.server.testobject.apiKey || process.env.TESTOBJECT_API_KEY;\r\n        }\r\n        break;\r\n      case ServerTypes.headspin: {\r\n        break;\r\n      }\r\n      case ServerTypes.perfecto:\r\n        if (!token) {\r\n          notification.error({\r\n            message: i18n.t('Error'),\r\n            description: i18n.t('Perfecto SecurityToken is required'),\r\n            duration: 4\r\n          });\r\n          return;\r\n        }\r\n        desiredCapabilities.securityToken = token;\r\n        break;\r\n      case ServerTypes.browserstack:\r\n        desiredCapabilities['browserstack.source'] = 'appiumdesktop';\r\n        if (!username || !accessKey) {\r\n          notification.error({\r\n            message: i18n.t('Error'),\r\n            description: i18n.t('browserstackCredentialsRequired'),\r\n            duration: 4\r\n          });\r\n          return;\r\n        }\r\n        break;\r\n      case ServerTypes.bitbar:\r\n        if (!accessKey) {\r\n          notification.error({\r\n            message: i18n.t('Error'),\r\n            description: i18n.t('bitbarCredentialsRequired'),\r\n            duration: 4\r\n          });\r\n          return;\r\n        }\r\n        desiredCapabilities.testdroid_source = 'appiumdesktop';\r\n        desiredCapabilities.testdroid_apiKey = accessKey;\r\n        break;\r\n      case ServerTypes.kobiton:\r\n        desiredCapabilities['kobiton.source'] = 'appiumdesktop';\r\n        if (!username || !accessKey) {\r\n          notification.error({\r\n            message: i18n.t('Error'),\r\n            description: i18n.t('kobitonCredentialsRequired'),\r\n            duration: 4\r\n          });\r\n          return;\r\n        }\r\n        break;\r\n      case ServerTypes.pcloudy:\r\n        desiredCapabilities.pCloudy_Username = username;\r\n        desiredCapabilities.pCloudy_ApiKey = accessKey;\r\n        if (!username || !accessKey) {\r\n          notification.error({\r\n            message: 'Error',\r\n            description: 'PCLOUDY username and api key are required!',\r\n            duration: 4\r\n          });\r\n          return;\r\n        }\r\n        break;\r\n      case ServerTypes.testingbot:\r\n        desiredCapabilities['tb.source'] = 'appiumdesktop';\r\n        if (!username || !accessKey) {\r\n          notification.error({\r\n            message: 'Error',\r\n            description: i18n.t('testingbotCredentialsRequired'),\r\n            duration: 4\r\n          });\r\n          return;\r\n        }\r\n        break;\r\n      case ServerTypes.experitest: {\r\n        if (!session.server.experitest.url || !session.server.experitest.accessKey) {\r\n          notification.error({\r\n            message: i18n.t('Error'),\r\n            description: i18n.t('experitestAccessKeyURLRequired'),\r\n            duration: 4\r\n          });\r\n          return;\r\n        }\r\n        desiredCapabilities['experitest:accessKey'] = session.server.experitest.accessKey;\r\n        break;\r\n      } case ServerTypes.roboticmobi: {\r\n        if (caps) {\r\n          desiredCapabilities.robotic_mobi_token = session.server.roboticmobi.token || process.env.ROBOTIC_MOBI_TOKEN;\r\n        }\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n\r\n    let rejectUnauthorized = !session.server.advanced.allowUnauthorized;\r\n    let proxy;\r\n    if (session.server.advanced.useProxy && session.server.advanced.proxy) {\r\n      proxy = session.server.advanced.proxy;\r\n    }\r\n\r\n    // Start the session\r\n    ipcRenderer.send('appium-create-new-session', {\r\n      desiredCapabilities,\r\n      attachSessId,\r\n      host,\r\n      port,\r\n      path,\r\n      username,\r\n      accessKey,\r\n      https,\r\n      rejectUnauthorized,\r\n      proxy,\r\n    });\r\n\r\n    dispatch({type: SESSION_LOADING});\r\n\r\n    // If it failed, show an alert saying it failed\r\n    ipcRenderer.once('appium-new-session-failed', (evt, e) => {\r\n      dispatch({type: SESSION_LOADING_DONE});\r\n      removeNewSessionListeners();\r\n      showError(e, 0);\r\n    });\r\n\r\n    ipcRenderer.once('appium-new-session-ready', () => {\r\n      dispatch({type: SESSION_LOADING_DONE});\r\n      // pass some state to the inspector that it needs to build recorder\r\n      // code boilerplate\r\n      setSessionDetails({\r\n        desiredCapabilities,\r\n        host,\r\n        port,\r\n        path,\r\n        username,\r\n        accessKey,\r\n        https,\r\n      })(dispatch);\r\n      removeNewSessionListeners();\r\n      dispatch(push('/inspector'));\r\n    });\r\n\r\n    // Save the current server settings\r\n    await settings.set(SESSION_SERVER_PARAMS, session.server);\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Saves the caps\r\n */\r\nexport function saveSession (caps, params) {\r\n  return async (dispatch) => {\r\n    let {name, uuid} = params;\r\n    dispatch({type: SAVE_SESSION_REQUESTED});\r\n    let savedSessions = await settings.get(SAVED_SESSIONS);\r\n    if (!uuid) {\r\n\r\n      // If it's a new session, add it to the list\r\n      uuid = UUID();\r\n      let newSavedSession = {\r\n        date: +(new Date()),\r\n        name,\r\n        uuid,\r\n        caps,\r\n      };\r\n      savedSessions.push(newSavedSession);\r\n    } else {\r\n\r\n      // If it's an existing session, overwrite it\r\n      for (let session of savedSessions) {\r\n        if (session.uuid === uuid) {\r\n          session.caps = caps;\r\n        }\r\n      }\r\n    }\r\n    await settings.set(SAVED_SESSIONS, savedSessions);\r\n    await getSavedSessions()(dispatch);\r\n    dispatch({type: SET_CAPS, caps, uuid});\r\n    dispatch({type: SAVE_SESSION_DONE});\r\n  };\r\n}\r\n\r\n/**\r\n * Get the sessions saved by the user\r\n */\r\nexport function getSavedSessions () {\r\n  return async (dispatch) => {\r\n    dispatch({type: GET_SAVED_SESSIONS_REQUESTED});\r\n    let savedSessions = await settings.get(SAVED_SESSIONS);\r\n    dispatch({type: GET_SAVED_SESSIONS_DONE, savedSessions});\r\n  };\r\n}\r\n\r\n/**\r\n * Switch to a different tab\r\n */\r\nexport function switchTabs (key) {\r\n  return (dispatch) => {\r\n    dispatch({type: SWITCHED_TABS, key});\r\n  };\r\n}\r\n\r\n/**\r\n * Open a 'Save As' modal\r\n */\r\nexport function requestSaveAsModal () {\r\n  return (dispatch) => {\r\n    dispatch({type: SAVE_AS_MODAL_REQUESTED});\r\n  };\r\n}\r\n\r\n/**\r\n * Hide the 'Save As' modal\r\n */\r\nexport function hideSaveAsModal () {\r\n  return (dispatch) => {\r\n    dispatch({type: HIDE_SAVE_AS_MODAL_REQUESTED});\r\n  };\r\n}\r\n\r\n/**\r\n * Set the text to save capabilities as\r\n */\r\nexport function setSaveAsText (saveAsText) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_SAVE_AS_TEXT, saveAsText});\r\n  };\r\n}\r\n\r\n/**\r\n * Delete a saved session\r\n */\r\nexport function deleteSavedSession (uuid) {\r\n  return async (dispatch) => {\r\n    dispatch({type: DELETE_SAVED_SESSION_REQUESTED, uuid});\r\n    let savedSessions = await settings.get(SAVED_SESSIONS);\r\n    let newSessions = savedSessions.filter((session) => session.uuid !== uuid);\r\n    await settings.set(SAVED_SESSIONS, newSessions);\r\n    dispatch({type: DELETE_SAVED_SESSION_DONE});\r\n    dispatch({type: GET_SAVED_SESSIONS_DONE, savedSessions: newSessions});\r\n  };\r\n}\r\n\r\n/**\r\n * Set the session id to attach to\r\n */\r\nexport function setAttachSessId (attachSessId) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_ATTACH_SESS_ID, attachSessId});\r\n  };\r\n}\r\n\r\n/**\r\n * Change the server type\r\n */\r\nexport function changeServerType (serverType) {\r\n  return async (dispatch, getState) => {\r\n    await settings.set(SESSION_SERVER_TYPE, serverType);\r\n    dispatch({type: CHANGE_SERVER_TYPE, serverType});\r\n    getRunningSessions()(dispatch, getState);\r\n  };\r\n}\r\n\r\n/**\r\n * Set a server parameter (host, port, etc...)\r\n */\r\nexport function setServerParam (name, value, serverType) {\r\n  const debounceGetRunningSessions = debounce(getRunningSessions(), 5000);\r\n  return async (dispatch, getState) => {\r\n    serverType = serverType || getState().session.serverType;\r\n    await settings.set(SESSION_SERVER_TYPE, serverType);\r\n    dispatch({type: SET_SERVER_PARAM, serverType, name, value});\r\n    debounceGetRunningSessions(dispatch, getState);\r\n  };\r\n}\r\n\r\n/**\r\n * Set the local server hostname and port to whatever was saved in 'actions/StartServer.js' so that it\r\n * defaults to what the currently running appium server is\r\n */\r\nexport function setLocalServerParams () {\r\n  return async (dispatch, getState) => {\r\n    let serverArgs = await settings.get(SERVER_ARGS);\r\n    // Get saved server args from settings and set local server settings to it. If there are no saved args, set local\r\n    // host and port to undefined\r\n    if (serverArgs) {\r\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'port', value: serverArgs.port});\r\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'hostname', value: 'localhost'});\r\n    } else {\r\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'port', value: undefined});\r\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'hostname', value: undefined});\r\n      if (getState().session.serverType === 'local') {\r\n        await changeServerType('remote')(dispatch, getState);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Set the server parameters to whatever they were last saved as.\r\n * Params are saved whenever there's a new session\r\n */\r\nexport function setSavedServerParams () {\r\n  return async (dispatch, getState) => {\r\n    let server = await settings.get(SESSION_SERVER_PARAMS);\r\n    let serverType = await settings.get(SESSION_SERVER_TYPE);\r\n    let currentProviders = getState().session.visibleProviders;\r\n\r\n    if (server) {\r\n      // if we have a cloud provider as a saved server, but for some reason the\r\n      // cloud provider is no longer in the list, revert server type to remote\r\n      if (keys(CloudProviders).includes(serverType) &&\r\n          !currentProviders.includes(serverType)) {\r\n        serverType = ServerTypes.remote;\r\n      }\r\n      dispatch({type: SET_SERVER, server, serverType});\r\n    }\r\n  };\r\n}\r\n\r\nexport function getRunningSessions () {\r\n  return (dispatch, getState) => {\r\n    const avoidServerTypes = [\r\n      'sauce', 'testobject'\r\n    ];\r\n    // Get currently running sessions for this server\r\n    const state = getState().session;\r\n    const {host, port, username, accessKey, https, path} = getServerInfo(state);\r\n\r\n    dispatch({type: GET_SESSIONS_REQUESTED});\r\n    if (avoidServerTypes.includes(state.serverType)) {\r\n      dispatch({type: GET_SESSIONS_DONE});\r\n    } else {\r\n      ipcRenderer.send('appium-client-get-sessions', {\r\n        host,\r\n        port,\r\n        path,\r\n        ssl: https,\r\n        username,\r\n        accessKey\r\n      });\r\n      ipcRenderer.once('appium-client-get-sessions-response', (evt, e) => {\r\n        const res = JSON.parse(e.res);\r\n        dispatch({type: GET_SESSIONS_DONE, sessions: res.value});\r\n        removeRunningSessionsListeners();\r\n      });\r\n      ipcRenderer.once('appium-client-get-sessions-fail', () => {\r\n        dispatch({type: GET_SESSIONS_DONE});\r\n        removeRunningSessionsListeners();\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport function startDesiredCapsEditor () {\r\n  return (dispatch) => {\r\n    dispatch({type: ENABLE_DESIRED_CAPS_EDITOR});\r\n  };\r\n}\r\n\r\nexport function abortDesiredCapsEditor () {\r\n  return (dispatch) => {\r\n    dispatch({type: ABORT_DESIRED_CAPS_EDITOR});\r\n  };\r\n}\r\n\r\nexport function saveRawDesiredCaps () {\r\n  return (dispatch, getState) => {\r\n    const state = getState().session;\r\n    const {rawDesiredCaps, caps: capsArray} = state;\r\n    try {\r\n      const newCaps = JSON.parse(rawDesiredCaps);\r\n\r\n      // Transform the current caps array to an object\r\n      let caps = {};\r\n      for (let {type, name, value} of capsArray) {\r\n        caps[name] = {type, value};\r\n      }\r\n\r\n      // Translate the caps JSON to array format\r\n      let newCapsArray = toPairs(newCaps).map(([name, value]) => ({\r\n        type: (() => {\r\n          let type = typeof value;\r\n\r\n          // If we already have this cap and it's file type, keep the type the same\r\n          if (caps[name] && caps[name].type === 'file' && type === 'string') {\r\n            return 'file';\r\n          } else if (type === 'string') {\r\n            return 'text';\r\n          } else {\r\n            return type;\r\n          }\r\n        })(),\r\n        name,\r\n        value,\r\n      }));\r\n      dispatch({type: SAVE_RAW_DESIRED_CAPS, caps: newCapsArray});\r\n    } catch (e) {\r\n      dispatch({type: SHOW_DESIRED_CAPS_JSON_ERROR, message: e.message});\r\n    }\r\n  };\r\n}\r\n\r\nexport function setRawDesiredCaps (rawDesiredCaps) {\r\n  return (dispatch, getState) => {\r\n    const state = getState().session;\r\n    let isValidCapsJson = true;\r\n    let invalidCapsJsonReason;\r\n    if (state.isValidatingCapsJson) {\r\n      try {\r\n        JSON.parse(rawDesiredCaps);\r\n      } catch (e) {\r\n        isValidCapsJson = false;\r\n        invalidCapsJsonReason = e.message;\r\n      }\r\n    }\r\n    dispatch({type: SET_RAW_DESIRED_CAPS, rawDesiredCaps, isValidCapsJson, invalidCapsJsonReason});\r\n  };\r\n}\r\n\r\nfunction removeNewSessionListeners () {\r\n  ipcRenderer.removeAllListeners('appium-new-session-failed');\r\n  ipcRenderer.removeAllListeners('appium-new-session-ready');\r\n}\r\n\r\nfunction removeRunningSessionsListeners () {\r\n  ipcRenderer.removeAllListeners('appium-client-get-sessions-fail');\r\n  ipcRenderer.removeAllListeners('appium-client-get-sessions-response');\r\n}\r\n\r\nexport function addCloudProvider () {\r\n  return (dispatch) => {\r\n    dispatch({type: IS_ADDING_CLOUD_PROVIDER, isAddingProvider: true});\r\n  };\r\n}\r\n\r\nexport function stopAddCloudProvider () {\r\n  return (dispatch) => {\r\n    dispatch({type: IS_ADDING_CLOUD_PROVIDER, isAddingProvider: false});\r\n  };\r\n}\r\n\r\nexport function addVisibleProvider (provider) {\r\n  return async (dispatch, getState) => {\r\n    let currentProviders = getState().session.visibleProviders;\r\n    const providers = union(currentProviders, [provider]);\r\n    await settings.set(VISIBLE_PROVIDERS, providers);\r\n    dispatch({type: SET_PROVIDERS, providers});\r\n  };\r\n}\r\n\r\nexport function removeVisibleProvider (provider) {\r\n  return async (dispatch, getState) => {\r\n    let currentProviders = getState().session.visibleProviders;\r\n    const providers = without(currentProviders, provider);\r\n    await settings.set(VISIBLE_PROVIDERS, providers);\r\n    dispatch({type: SET_PROVIDERS, providers});\r\n  };\r\n}\r\n\r\nexport function setVisibleProviders () {\r\n  return async (dispatch) => {\r\n    const providers = await settings.get(VISIBLE_PROVIDERS);\r\n    dispatch({type: SET_PROVIDERS, providers});\r\n  };\r\n}\r\n\r\n/**\r\n * Add custom capabilities\r\n *\r\n * @param {object} caps\r\n */\r\nfunction addCustomCaps (caps) {\r\n  const {browserName = '', platformName = ''} = caps;\r\n  const safariCustomCaps = {\r\n    // Add the includeSafariInWebviews for future HTML detection\r\n    includeSafariInWebviews: true,\r\n  };\r\n  const chromeCustomCaps = {\r\n    // Make sure the screenshot is taken of the whole screen when the ChromeDriver is used\r\n    nativeWebScreenshot: true,\r\n    // Set the ChromeDriver to w3c:false because all internal calls are still JSONWP calls\r\n    chromeOptions: {\r\n      'w3c': false,\r\n    },\r\n  };\r\n  const androidCustomCaps = {\r\n    // @TODO: remove when this is defaulted in the newest Appium 1.8.x release\r\n    ensureWebviewsHavePages: true,\r\n  };\r\n  const iosCustomCaps = {};\r\n\r\n  return {\r\n    ...caps,\r\n    ...(browserName.toLowerCase() === 'safari' ? safariCustomCaps : {}),\r\n    ...(browserName.toLowerCase() === 'chrome' ? chromeCustomCaps : {}),\r\n    ...(platformName.toLowerCase() === 'android' ? androidCustomCaps : {}),\r\n    ...(platformName.toLowerCase() === 'ios' ? iosCustomCaps : {}),\r\n  };\r\n}\r\n","import settings from 'electron-settings';\r\nimport { PRESETS } from '../renderer/actions/StartServer';\r\nimport { SAVED_SESSIONS, SERVER_ARGS, SESSION_SERVER_PARAMS,\r\n         SESSION_SERVER_TYPE } from '../renderer/actions/Session';\r\nimport { SAVED_FRAMEWORK } from '../renderer/actions/Inspector';\r\n\r\n// set default persistent settings\r\n// do it here because settings are kind of like state!\r\nsettings.defaults({\r\n  [PRESETS]: {},\r\n  [SAVED_SESSIONS]: [],\r\n  [SERVER_ARGS]: null,\r\n  [SESSION_SERVER_PARAMS]: null,\r\n  [SESSION_SERVER_TYPE]: null,\r\n  [SAVED_FRAMEWORK]: 'java',\r\n});\r\n\r\nexport default settings;\r\n","import i18n from 'i18next';\r\nimport i18nextBackend from 'i18next-node-fs-backend';\r\nimport config from './app.config';\r\nimport path from 'path';\r\nimport settings from '../shared/settings';\r\n\r\nconst i18nextOptions = {\r\n  backend: {\r\n    loadPath: path.join(__dirname, 'locales/{{lng}}/{{ns}}.json'),\r\n    addPath: path.join(__dirname, 'locales/{{lng}}/{{ns}}.json'),\r\n    jsonIndent: 2,\r\n  },\r\n  // debug: true,\r\n  // saveMissing: true,\r\n  interpolation: {\r\n    escapeValue: false\r\n  },\r\n  lng: settings && settings.getSync('PREFERRED_LANGUAGE', 'en') || 'en',\r\n  fallbackLng: config.fallbackLng,\r\n  whitelist: config.languages,\r\n  react: {\r\n    wait: false\r\n  }\r\n};\r\n\r\nif (!i18n.isInitialized) {\r\n  i18n\r\n    .use(i18nextBackend)\r\n    .init(i18nextOptions);\r\n}\r\n\r\nexport default i18n;\r\n","import {load} from 'cheerio';\r\n\r\n/**\r\n * JS code that is executed in the webview to determine the status+address bar height\r\n *\r\n * NOTE:\r\n * object destructuring the arguments resulted in this error with iOS (not with Android)\r\n *\r\n * `Duplicate parameter 'e' not allowed in function with destructuring parameters.`\r\n *\r\n * That's why the object destructuring is done in the method itself\r\n */\r\nexport function getWebviewStatusAddressBarHeight (obj) {\r\n  // Calculate the status + address bar height\r\n  // Address bar height for iOS 11+ is 50, for lower it is 44,\r\n  // but we take 50 as a default here\r\n  // For Chrome it is 56 for Android 6 to 10\r\n  const {platformName, statBarHeight} = obj;\r\n  const isAndroid = platformName.toLowerCase() === 'android';\r\n  // iOS uses CSS sizes for elements and screenshots, Android sizes times DRP\r\n  const dpr = isAndroid ? window.devicePixelRatio : 1;\r\n  const screenHeight = window.screen.height;\r\n  const viewportHeight = window.innerHeight;\r\n  // Need to determine this later for Chrome\r\n  const osAddressBarDefaultHeight = isAndroid ? 56 : 50;\r\n  const addressToolBarHeight = screenHeight - viewportHeight - statBarHeight;\r\n  // When a manual scroll has been executed for iOS and Android\r\n  // the address bar becomes smaller\r\n  const addressBarHeight = (addressToolBarHeight >= 0) && (addressToolBarHeight - osAddressBarDefaultHeight) < 0\r\n    ? addressToolBarHeight : osAddressBarDefaultHeight;\r\n\r\n  return statBarHeight + (addressBarHeight * dpr);\r\n}\r\n\r\n/**\r\n * JS code that is executed in the webview to set the needed attributes on the DOM so the source can be used for the\r\n * native inspector window.\r\n *\r\n * NOTE:\r\n * object destructuring the arguments resulted in this error with iOS (not with Android)\r\n *\r\n * `Duplicate parameter 'e' not allowed in function with destructuring parameters.`\r\n *\r\n * That's why the object destructuring is done in the method itself\r\n */\r\nexport function setHtmlElementAttributes (obj) {\r\n  const {platformName, webviewStatusAddressBarHeight} = obj;\r\n  const htmlElements = document.body.getElementsByTagName('*');\r\n  const isAndroid = platformName.toLowerCase() === 'android';\r\n  // iOS uses CSS sizes for elements and screenshots, Android sizes times DRP\r\n  const dpr = isAndroid ? window.devicePixelRatio : 1;\r\n\r\n  Array.from(htmlElements).forEach((el) => {\r\n    const rect = el.getBoundingClientRect();\r\n\r\n    el.setAttribute('data-appium-desktop-width', Math.round(rect.width * dpr));\r\n    el.setAttribute('data-appium-desktop-height', Math.round(rect.height * dpr));\r\n    el.setAttribute('data-appium-desktop-x', Math.round(rect.left * dpr));\r\n    el.setAttribute('data-appium-desktop-y', Math.round(webviewStatusAddressBarHeight + (rect.top * dpr)));\r\n  });\r\n}\r\n\r\n/**\r\n * Parse the source if it's HTML:\r\n * - head and scripts need to be removed to clean the HTML tree\r\n * - all custom attributes need to be transformed to normal width/height/x/y\r\n */\r\nexport function parseSource (source) {\r\n  if (!source.includes('<html')) {\r\n    return source;\r\n  }\r\n\r\n  const $ = load(source);\r\n  // Remove the head and the scripts\r\n  const head = $('head');\r\n  head.remove();\r\n  const scripts = $('script');\r\n  scripts.remove();\r\n\r\n  // remove all `data-appium-desktop-` prefixes\r\n  return $.html().replace(/data-appium-desktop-/g, '');\r\n}\r\n","import Bluebird from 'bluebird';\r\nimport wd from 'wd';\r\nimport log from 'electron-log';\r\nimport _ from 'lodash';\r\nimport { timing } from 'appium-support';\r\nimport { SCREENSHOT_INTERACTION_MODE } from '../renderer/components/Inspector/shared';\r\nimport {getWebviewStatusAddressBarHeight, parseSource, setHtmlElementAttributes} from './webviewHelpers';\r\n\r\nconst isDevelopment = process.env.NODE_ENV === 'development';\r\nconst NATIVE_APP = 'NATIVE_APP';\r\n\r\nconst KEEP_ALIVE_PING_INTERVAL = 5 * 1000;\r\nconst NO_NEW_COMMAND_LIMIT = isDevelopment ? 30 * 1000 : 24 * 60 * 60 * 1000; // Set timeout to 24 hours\r\nconst WAIT_FOR_USER_KEEP_ALIVE = 60 * 60 * 1000; // Give user 1 hour to reply\r\n\r\nexport default class AppiumMethodHandler {\r\n  constructor (driver, sender) {\r\n    this.driver = driver;\r\n    this.sender = sender;\r\n    this.elementCache = {};\r\n    this.elVariableCounter = 1;\r\n    this.elArrayVariableCounter = 1;\r\n    this._lastActiveMoment = +(new Date());\r\n  }\r\n\r\n  /**\r\n   * Ping server every 30 seconds to prevent `newCommandTimeout` from killing session\r\n   */\r\n  runKeepAliveLoop () {\r\n    this.keepAlive = setInterval(() => {\r\n      this.driver.sessionCapabilities(); // Pings the Appium server to keep it alive\r\n      const now = +(new Date());\r\n\r\n      // If the new command limit has been surpassed, prompt user if they want to keep session going\r\n      // Give them 30 seconds to respond\r\n      if (now - this._lastActiveMoment > NO_NEW_COMMAND_LIMIT) {\r\n        this.sender.send('appium-prompt-keep-alive');\r\n\r\n        // After the time limit kill the session (this timeout will be killed if they keep it alive)\r\n        this.waitForUserTimeout = setTimeout(() => {\r\n          this.close('Session closed due to inactivity');\r\n        }, WAIT_FOR_USER_KEEP_ALIVE);\r\n      }\r\n    }, KEEP_ALIVE_PING_INTERVAL);\r\n  }\r\n\r\n  /**\r\n   * Get rid of the intervals to keep the session alive\r\n   */\r\n  killKeepAliveLoop () {\r\n    clearInterval(this.keepAlive);\r\n    if (this.waitForUserTimeout) {\r\n      clearTimeout(this.waitForUserTimeout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset the new command clock and kill the wait for user timeout\r\n   */\r\n  keepSessionAlive () {\r\n    this._lastActiveMoment = +(new Date());\r\n    if (this.waitForUserTimeout) {\r\n      clearTimeout(this.waitForUserTimeout);\r\n    }\r\n  }\r\n\r\n  async fetchElement (strategy, selector) {\r\n    const timer = new timing.Timer().start();\r\n    let element = await this.driver.elementOrNull(strategy, selector);\r\n    const duration = timer.getDuration();\r\n    const executionTime = Math.round(duration.asMilliSeconds);\r\n\r\n    if (element === null) {\r\n      return {};\r\n    }\r\n    let id = element.value;\r\n\r\n    // Cache this ID along with its variable name, variable type and strategy/selector\r\n    let cachedEl = this.elementCache[id] = {\r\n      el: element,\r\n      variableType: 'string',\r\n      strategy,\r\n      selector,\r\n      id,\r\n    };\r\n\r\n    return {\r\n      ...cachedEl,\r\n      strategy,\r\n      selector,\r\n      id,\r\n      executionTime,\r\n    };\r\n  }\r\n\r\n  async fetchElements (strategy, selector) {\r\n    let els = await this.driver.elements(strategy, selector);\r\n\r\n    let variableName = `els${this.elArrayVariableCounter++}`;\r\n    let variableType = 'array';\r\n\r\n    // Cache the elements that we find\r\n    let elements = els.map((el, index) => {\r\n      const res = {\r\n        el,\r\n        variableName,\r\n        variableIndex: index,\r\n        variableType: 'string',\r\n        id: el.value,\r\n        strategy,\r\n        selector,\r\n      };\r\n      this.elementCache[el.value] = res;\r\n      return res;\r\n    });\r\n\r\n    return {variableName, variableType, strategy, selector, elements};\r\n  }\r\n\r\n  async _execute ({elementId, methodName, args, skipRefresh}) {\r\n    this._lastActiveMoment = +(new Date());\r\n    let cachedEl;\r\n    let res = {};\r\n    if (!_.isArray(args)) {\r\n      args = [args];\r\n    }\r\n\r\n    if (elementId) {\r\n      // Give the cached element a variable name (el1, el2, el3,...) the first time it's used\r\n      cachedEl = this.elementCache[elementId];\r\n      if (!cachedEl.variableName && cachedEl.variableType === 'string') {\r\n        cachedEl.variableName = `el${this.elVariableCounter++}`;\r\n      }\r\n      res = await cachedEl.el[methodName].apply(cachedEl.el, args);\r\n    } else {\r\n      // Specially handle the tap and swipe method\r\n      if (methodName === SCREENSHOT_INTERACTION_MODE.TAP) {\r\n        res = await (new wd.TouchAction(this.driver))\r\n          .tap({x: args[0], y: args[1]})\r\n          .perform();\r\n      } else if (methodName === SCREENSHOT_INTERACTION_MODE.SWIPE) {\r\n        const [startX, startY, endX, endY] = args;\r\n        res = await (new wd.TouchAction(this.driver))\r\n          .press({x: startX, y: startY})\r\n          .wait(500)\r\n          .moveTo({x: endX, y: endY})\r\n          .release()\r\n          .perform();\r\n      } else if (methodName !== 'source' && methodName !== 'screenshot') {\r\n        res = await this.driver[methodName].apply(this.driver, args);\r\n      }\r\n    }\r\n\r\n    // Give the source/screenshot time to change before taking the screenshot\r\n    await Bluebird.delay(500);\r\n\r\n    let contextsSourceAndScreenshot;\r\n    if (!skipRefresh) {\r\n      contextsSourceAndScreenshot = await this._getContextsSourceAndScreenshot();\r\n    }\r\n\r\n    return {\r\n      ...contextsSourceAndScreenshot,\r\n      ...cachedEl,\r\n      res,\r\n    };\r\n  }\r\n\r\n  async executeElementCommand (elementId, methodName, args = [], skipRefresh = false) {\r\n    return await this._execute({elementId, methodName, args, skipRefresh});\r\n  }\r\n\r\n  async executeMethod (methodName, args = [], skipRefresh = false) {\r\n    return await this._execute({methodName, args, skipRefresh});\r\n  }\r\n\r\n  /**\r\n   * If the app under test can return contexts command.\r\n   *\r\n   * @returns {boolean} True if the app under test supports contexts command.\r\n   *\r\n   */\r\n  async _hasContextsCommand () {\r\n    try {\r\n      const { error } = await this.driver.contexts();\r\n      return !error;\r\n    } catch (ign) { }\r\n    // If the app under test returns non JSON format response\r\n    return false;\r\n  }\r\n\r\n  async _getContextsSourceAndScreenshot () {\r\n    let contexts, contextsError, currentContext, currentContextError, platformName,\r\n        source, sourceError, screenshot, screenshotError, statBarHeight, windowSize, windowSizeError;\r\n\r\n    if (!await this._hasContextsCommand()) {\r\n      currentContext = null;\r\n      contexts = [];\r\n    } else {\r\n      try {\r\n        currentContext = await this.driver.currentContext();\r\n      } catch (e) {\r\n        if (e.status === 6) {\r\n          throw e;\r\n        }\r\n        currentContextError = e;\r\n      }\r\n\r\n      // Note: These methods need to be executed in the native context because ChromeDriver behaves differently\r\n      if (currentContext !== NATIVE_APP) {\r\n        await this.driver.context(NATIVE_APP);\r\n      }\r\n\r\n      ({platformName, statBarHeight} = await this.driver.sessionCapabilities());\r\n\r\n      try {\r\n        windowSize = await this.driver.getWindowSize();\r\n      } catch (e) {\r\n        if (e.status === 6) {\r\n          throw e;\r\n        }\r\n        windowSizeError = e;\r\n      }\r\n\r\n      try {\r\n        contexts = await this._getContexts(platformName);\r\n      } catch (e) {\r\n        if (e.status === 6) {\r\n          throw e;\r\n        }\r\n        contextsError = e;\r\n      }\r\n\r\n      if (currentContext !== NATIVE_APP) {\r\n        await this.driver.context(currentContext);\r\n      }\r\n      // End of note\r\n\r\n      /**\r\n       * If its a webview then update the HTML with the element location\r\n       * so the source can be used in the native inspector\r\n       */\r\n      try {\r\n        if (currentContext !== NATIVE_APP) {\r\n          const webviewStatusAddressBarHeight = await this.driver.execute(getWebviewStatusAddressBarHeight, [{platformName, statBarHeight}]);\r\n\r\n          await this.driver.execute(setHtmlElementAttributes, [{platformName, webviewStatusAddressBarHeight}]);\r\n        }\r\n      } catch (ign) {}\r\n    }\r\n\r\n    try {\r\n      source = parseSource(await this.driver.source());\r\n    } catch (e) {\r\n      if (e.status === 6) {\r\n        throw e;\r\n      }\r\n      sourceError = e;\r\n    }\r\n\r\n    try {\r\n      screenshot = await this.driver.takeScreenshot();\r\n    } catch (e) {\r\n      if (e.status === 6) {\r\n        throw e;\r\n      }\r\n      screenshotError = e;\r\n    }\r\n\r\n    return {contexts, contextsError, currentContext, currentContextError,\r\n            source, sourceError, screenshot, screenshotError, windowSize, windowSizeError};\r\n  }\r\n\r\n  /**\r\n   * Retrieve available contexts, along with the title associated with each webview\r\n   */\r\n  async _getContexts (platform) {\r\n    return _.toLower(platform) === 'ios' ? await this.driver.execute('mobile:getContexts', []) : await this._getAndroidContexts();\r\n  }\r\n\r\n  /**\r\n   * Custom implementation of the `mobile:getContexts` for Android, which only returns an object with the id and title\r\n   */\r\n  async _getAndroidContexts () {\r\n    let newContexts = [];\r\n    const currentContext = await this.driver.currentContext();\r\n\r\n    // Get the contexts and retrieve extra data\r\n    const contexts = await this.driver.contexts();\r\n    const getContextData = async (context) => {\r\n      let title;\r\n      const id = context;\r\n      if (id !== NATIVE_APP) {\r\n        await this.driver.context(context);\r\n        const pageTitle = await this.driver.title();\r\n        title = _.isEmpty(pageTitle) ? 'No page title available' : pageTitle;\r\n      }\r\n      return {\r\n        id,\r\n        ...(title ? {title} : {}),\r\n      };\r\n    };\r\n    // const newContexts = await Promise.all(contexts.map((context) => getContextData(context)));\r\n    for (const context of contexts) {\r\n      newContexts.push(await getContextData(context));\r\n    }\r\n\r\n    // Set it back to the current context\r\n    await this.driver.context(currentContext);\r\n\r\n    return newContexts;\r\n  }\r\n\r\n  restart () {\r\n    // Clear the variable names and start over (el1, el2, els1, els2, etc...)\r\n    for (const elCache of Object.values(this.elementCache)) {\r\n      delete elCache.variableName;\r\n    }\r\n\r\n    // Restart the variable counter\r\n    this.elVariableCounter = 1;\r\n    this.elArrayVariableCounter = 1;\r\n  }\r\n\r\n  async close (reason, killedByUser = false) {\r\n    this.killKeepAliveLoop();\r\n    this.sender.send('appium-session-done', {reason, killedByUser});\r\n    if (!this.driver._isAttachedSession) {\r\n      try {\r\n        await this.driver.quit();\r\n      } catch (ign) { }\r\n    }\r\n  }\r\n}\r\n\r\nexport function createSession (driver, sender, winId) {\r\n  const {appiumHandlers} = AppiumMethodHandler;\r\n  log.info(`Creating method handler for session with window id: ${winId}`);\r\n  const handler = AppiumMethodHandler.appiumHandlers[winId] = new AppiumMethodHandler(driver, sender);\r\n  log.info(`The following session window ID's have active sessions: '${JSON.stringify(_.keys(appiumHandlers))}'`);\r\n  return handler;\r\n}\r\n\r\nexport function killSession (winId, killedByUser) {\r\n  const {appiumHandlers} = AppiumMethodHandler;\r\n  const handler = appiumHandlers[winId];\r\n  delete AppiumMethodHandler.appiumHandlers[winId];\r\n  log.info(`Killing session for window with id: ${winId}`);\r\n\r\n  if (handler) {\r\n    handler.close('', killedByUser);\r\n  }\r\n\r\n  log.info(`Deleted session for window with id: ${winId}`);\r\n  log.info(`The following session window ID's have active sessions: '${JSON.stringify(_.keys(appiumHandlers))}'`);\r\n}\r\n\r\nexport function getSessionHandler (winId) {\r\n  log.info(`Retrieving session for window with id: ${winId}`);\r\n  const {appiumHandlers} = AppiumMethodHandler;\r\n  const handler = appiumHandlers[winId];\r\n  if (handler) {\r\n    return handler;\r\n  } else {\r\n    log.error(`Could not find session with window id '${winId}'. Available sessions are: '${JSON.stringify(_.keys(appiumHandlers))}'`);\r\n    return false;\r\n  }\r\n}\r\n\r\nAppiumMethodHandler.appiumHandlers = {};\r\n","const baseFeedUrl = `https://hazel-server-pxufsrwofl.now.sh`;\r\n\r\nexport function getFeedUrl (version) {\r\n  let platform = process.platform;\r\n  if (platform.toLowerCase() === 'linux') {\r\n    platform = 'AppImage';\r\n  }\r\n  return `${baseFeedUrl}/update/${platform}/${version}`;\r\n}\r\n\r\n\r\nexport default {\r\n  baseFeedUrl,\r\n  getFeedUrl,\r\n};","import request from 'request-promise';\r\nimport { getFeedUrl } from './config';\r\nimport semver from 'semver';\r\n\r\nexport async function checkUpdate (currentVersion) {\r\n  try {\r\n    // The response is like (macOS):\r\n    // {  \"name\":\"v1.15.0-1\",\r\n    //    \"notes\":\"* Bump up Appium to v1.15.0\",\r\n    //    \"pub_date\":\"2019-10-04T04:40:37Z\",\r\n    //    \"url\":\"https://github.com/appium/appium-desktop/releases/download/v1.15.0-1/Appium-1.15.0-1-mac.zip\"}\r\n    const res = await request.get(getFeedUrl(currentVersion));\r\n    if (res) {\r\n      const j = JSON.parse(res);\r\n      if (semver.lt(currentVersion, j.name)) {\r\n        return j;\r\n      }\r\n    }\r\n  } catch (ign) { }\r\n\r\n  return false;\r\n}","export default {\r\n\r\n};","let env = {};\r\n\r\nif (typeof (_ENV_) === 'undefined') {\r\n  env = require('../env/.env-dev');\r\n} else {\r\n  env = _ENV_; // eslint-disable-line no-undef\r\n}\r\n\r\nexport default env;","/**\r\n * Auto Updater\r\n *\r\n * Similar to https://electronjs.org/docs/api/auto-updater#events\r\n * See https://electronjs.org/docs/tutorial/updates for documentation\r\n */\r\nimport { app, autoUpdater, dialog } from 'electron';\r\nimport moment from 'moment';\r\nimport B from 'bluebird';\r\nimport { checkUpdate } from './update-checker';\r\nimport { getFeedUrl } from './config';\r\nimport _ from 'lodash';\r\nimport env from '../../env';\r\nimport i18n from '../../configs/i18next.config';\r\n\r\nconst isDev = process.env.NODE_ENV === 'development';\r\nconst runningLocally = isDev || process.env.RUNNING_LOCALLY;\r\n\r\nlet checkNewUpdates = _.noop;\r\n\r\nif (!runningLocally && !process.env.RUNNING_IN_SPECTRON) {\r\n\r\n  autoUpdater.setFeedURL(getFeedUrl(app.getVersion()));\r\n\r\n  /**\r\n   * Check for new updates\r\n   */\r\n  checkNewUpdates = async function (fromMenu) {\r\n    // autoupdate.checkForUpdates always downloads updates immediately\r\n    // This method (getUpdate) let's us take a peek to see if there is an update\r\n    // available before calling .checkForUpdates\r\n    if (process.env.RUNNING_IN_SPECTRON) {\r\n      return;\r\n    }\r\n    const update = await checkUpdate(app.getVersion());\r\n    if (update) {\r\n      let {name, notes, pub_date: pubDate} = update;\r\n      pubDate = moment(pubDate).format(i18n.t('datetimeFormat'));\r\n\r\n      let detail = i18n.t('updateDetails', {pubDate, notes: notes.replace('*', '\\n*')});\r\n      if (env.NO_AUTO_UPDATE) {\r\n        detail += `\\n\\nhttps://www.github.com/appium/appium-desktop/releases/latest`;\r\n      }\r\n\r\n\r\n      // Ask user if they wish to install now or later\r\n      if (!process.env.RUNNING_IN_SPECTRON) {\r\n        dialog.showMessageBox({\r\n          type: 'info',\r\n          buttons: env.NO_AUTO_UPDATE\r\n            ? [i18n.t('OK')]\r\n            : [i18n.t('Install Now'), i18n.t('Install Later')],\r\n          message: i18n.t('appiumIsAvailable', {name}),\r\n          detail,\r\n        }, (response) => {\r\n          if (response === 0) {\r\n            // If they say yes, get the updates now\r\n            if (!env.NO_AUTO_UPDATE) {\r\n              autoUpdater.checkForUpdates();\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      if (fromMenu) {\r\n        autoUpdater.emit('update-not-available');\r\n      } else {\r\n        // If no updates found check for updates every hour\r\n        await B.delay(60 * 60 * 1000);\r\n        checkNewUpdates();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Inform user when the download is starting and that they'll be notified again when it is complete\r\n  autoUpdater.on('update-available', () => {\r\n    dialog.showMessageBox({\r\n      type: 'info',\r\n      buttons: [i18n.t('OK')],\r\n      message: i18n.t('Update Download Started'),\r\n      detail: i18n.t('updateIsBeingDownloaded'),\r\n    });\r\n  });\r\n\r\n  // Handle the unusual case where we checked the updates endpoint, found an update\r\n  // but then after calling 'checkForUpdates', nothing was there\r\n  autoUpdater.on('update-not-available', () => {\r\n    dialog.showMessageBox({\r\n      type: 'info',\r\n      buttons: [i18n.t('OK')],\r\n      message: i18n.t('No update available'),\r\n      detail: i18n.t('Appium Desktop is up-to-date'),\r\n    });\r\n  });\r\n\r\n  // When it's done, ask if user want to restart now or later\r\n  autoUpdater.on('update-downloaded', (event, releaseNotes, releaseName) => {\r\n    dialog.showMessageBox({\r\n      type: 'info',\r\n      buttons: [i18n.t('Restart Now'), i18n.t('Later')],\r\n      message: i18n.t('Update Downloaded'),\r\n      detail: i18n.t('updateIsDownloaded', {releaseName}),\r\n    }, (response) => {\r\n      // If they say yes, restart now\r\n      if (response === 0) {\r\n        autoUpdater.quitAndInstall();\r\n      }\r\n    });\r\n  });\r\n\r\n  // Handle error case\r\n  autoUpdater.on('error', (message) => {\r\n    dialog.showMessageBox({\r\n      type: 'error',\r\n      message: i18n.t('Could not download update'),\r\n      detail: i18n.t('updateDownloadFailed', {message}),\r\n    });\r\n  });\r\n\r\n}\r\n\r\nexport { checkNewUpdates };\r\n","import {BrowserWindow, Menu} from 'electron';\r\nimport settings from '../shared/settings';\r\nimport path from 'path';\r\nimport i18n from '../configs/i18next.config';\r\n\r\nconst isDev = process.env.NODE_ENV === 'development';\r\n\r\nexport function openBrowserWindow (route, opts) {\r\n  const defaultOpts = {\r\n    width: 1080,\r\n    minWidth: 1080,\r\n    height: 570,\r\n    minHeight: 570,\r\n    backgroundColor: '#f2f2f2',\r\n    frame: 'customButtonsOnHover',\r\n    webPreferences: {\r\n      devTools: true,\r\n      nodeIntegration: true\r\n    },\r\n  };\r\n\r\n  let win = new BrowserWindow({\r\n    ...defaultOpts,\r\n    ...opts,\r\n  });\r\n\r\n  let htmlPath = path.resolve(__dirname, 'index.html');\r\n\r\n  // on Windows we'll get backslashes, but we don't want these for a browser URL, so replace\r\n  htmlPath = htmlPath.replace('\\\\', '/');\r\n  htmlPath += `#/${route}`;\r\n  win.loadURL(`file://${htmlPath}`);\r\n  win.show();\r\n\r\n  // If it's dev, go ahead and open up the dev tools automatically\r\n  if (isDev) {\r\n    win.openDevTools();\r\n  }\r\n\r\n  // Make 'devTools' available on right click\r\n  win.webContents.on('context-menu', (e, props) => {\r\n    const {x, y} = props;\r\n\r\n    Menu.buildFromTemplate([{\r\n      label: i18n.t('Inspect element'),\r\n      click () {\r\n        win.inspectElement(x, y);\r\n      }\r\n    }]).popup(win);\r\n  });\r\n\r\n  return win;\r\n}\r\n\r\n\r\n// Sets the environment variables to a combination of process.env and whatever\r\n// the user saved\r\nexport async function setSavedEnv () {\r\n  const savedEnv = await settings.get('ENV');\r\n  process.env = {\r\n    ...process.env,\r\n    ...savedEnv || {},\r\n  };\r\n}\r\n","/* eslint-disable no-console */\r\n\r\nimport { ipcMain, app } from 'electron';\r\nimport { main as appiumServer } from 'appium';\r\nimport { getDefaultArgs } from 'appium/build/lib/parser';\r\nimport path from 'path';\r\nimport wd from 'wd';\r\nimport { fs, tempDir } from 'appium-support';\r\nimport _ from 'lodash';\r\nimport settings from '../shared/settings';\r\nimport {createSession, killSession, getSessionHandler} from './appium-method-handler';\r\nimport request from 'request-promise';\r\nimport { checkNewUpdates } from './auto-updater';\r\nimport { openBrowserWindow, setSavedEnv } from './helpers';\r\n\r\nconst LOG_SEND_INTERVAL_MS = 250;\r\n\r\nconst defaultEnvironmentVariables = _.clone(process.env);\r\n\r\nlet server = null;\r\nlet logWatcher = null;\r\nlet batchedLogs = [];\r\n\r\nlet logFile;\r\n\r\n// Delete saved server args, don't start until a server has been started\r\nsettings.deleteSync('SERVER_ARGS');\r\n\r\nasync function deleteLogfile () {\r\n  if (logFile) {\r\n    try {\r\n      await fs.rimraf(logFile);\r\n    } catch (ign) { }\r\n  }\r\n}\r\n\r\nfunction connectStartServer (win) {\r\n  ipcMain.on('start-server', async (event, args) => {\r\n    // log the server logs to a file\r\n    try {\r\n      const dir = await tempDir.openDir();\r\n      logFile = path.resolve(dir, 'appium-server-logs.txt');\r\n      win.webContents.send('path-to-logs', logFile);\r\n      win.on('close', deleteLogfile);\r\n    } catch (ign) { }\r\n\r\n    // clean up args object for appium log purposes (so it doesn't show in\r\n    // non-default args list\r\n    if (args.defaultCapabilities &&\r\n        Object.keys(args.defaultCapabilities).length === 0) {\r\n      delete args.defaultCapabilities;\r\n    }\r\n    args.logHandler = (level, msg) => {\r\n      batchedLogs.push({level, msg});\r\n    };\r\n    // make sure if the server barfs on startup, it throws an error rather\r\n    // than the typical behavior, which is process.exit o_O\r\n    args.throwInsteadOfExit = true;\r\n\r\n    // set up our log watcher\r\n    logWatcher = setInterval(async () => {\r\n      if (batchedLogs.length) {\r\n        try {\r\n          await fs.writeFile(\r\n            logFile,\r\n            batchedLogs.map((log) => `[${log.level}] ${log.msg}`).join('\\n'),\r\n            {flag: 'a'}\r\n          );\r\n          win.webContents.send('appium-log-line', batchedLogs);\r\n        } catch (ign) { }\r\n        batchedLogs.splice(0, batchedLogs.length);\r\n      }\r\n    }, LOG_SEND_INTERVAL_MS);\r\n\r\n    try {\r\n      // set up the appium server running in this thread\r\n      server = await appiumServer(args, true);\r\n      await settings.set('SERVER_ARGS', args);\r\n      win.webContents.send('appium-start-ok');\r\n    } catch (e) {\r\n      win.webContents.send('appium-start-error', e.message);\r\n      try {\r\n        await server.close();\r\n      } catch (ign) {}\r\n      clearInterval(logWatcher);\r\n    }\r\n  });\r\n}\r\n\r\nfunction connectStopServer (win) {\r\n  ipcMain.on('stop-server', async () => {\r\n    try {\r\n      await server.close();\r\n      win.webContents.send('appium-stop-ok');\r\n    } catch (e) {\r\n      win.webContents.send('appium-stop-error', e.message);\r\n    }\r\n\r\n    clearInterval(logWatcher);\r\n    await settings.delete('SERVER_ARGS');\r\n  });\r\n}\r\n\r\nfunction connectGetDefaultArgs () {\r\n\r\n  ipcMain.on('get-default-args', (evt) => {\r\n    evt.returnValue = getDefaultArgs();\r\n  });\r\n\r\n  ipcMain.on('get-args-metadata', (/*evt*/) => {\r\n    // If argv isn't defined, set it now. If argv[1] isn't defined, set it to empty string.\r\n    // If process.argv[1] is undefined, calling getParser() will break because argparse expects it to be a string\r\n    if (!process.argv) {\r\n      process.argv = [];\r\n    }\r\n\r\n    if (!process.argv[1]) {\r\n      process.argv[1] = '';\r\n    }\r\n    // Temporarily remove this feature until 'getParser' issue (https://github.com/appium/appium/issues/11320) has been fixed\r\n    /*const backupPathResolve = path.resolve;\r\n    path.resolve = () => \"node_modules/appium/package.json\";\r\n    let defArgs = Object.keys(getDefaultArgs());\r\n    evt.returnValue = getParser().rawArgs\r\n                        .filter((a) => defArgs.indexOf(a[1].dest) !== -1)\r\n                        .map((a) => a[1]);\r\n    path.resolve = backupPathResolve;*/\r\n  });\r\n}\r\n\r\n/**\r\n * Opens a new window for creating new sessions\r\n */\r\nfunction connectCreateNewSessionWindow (win) {\r\n  ipcMain.on('create-new-session-window', () => {\r\n    createNewSessionWindow(win);\r\n  });\r\n}\r\n\r\nfunction connectClearLogFile () {\r\n  ipcMain.on('appium-clear-logfile', async (event, {logfilePath}) => {\r\n    await fs.writeFile(logfilePath, '');\r\n  });\r\n}\r\n\r\nexport function createNewSessionWindow (win) {\r\n  let sessionWin = openBrowserWindow('session', {\r\n    title: 'Start Session',\r\n    titleBarStyle: 'hidden',\r\n  });\r\n\r\n  // When you close the session window, kill its associated Appium session (if there is one)\r\n  let sessionID = sessionWin.webContents.id;\r\n  sessionWin.on('closed', () => {\r\n    killSession(sessionID);\r\n    sessionWin = null;\r\n  });\r\n\r\n  // When the main window is closed, close the session window too\r\n  win.once('closed', () => {\r\n    sessionWin.close();\r\n  });\r\n}\r\n\r\nfunction connectCreateNewSession () {\r\n  ipcMain.on('appium-create-new-session', async (event, args) => {\r\n    const {desiredCapabilities, host, port, path, username, accessKey, https,\r\n           attachSessId, rejectUnauthorized, proxy} = args;\r\n\r\n    try {\r\n      // If there is an already active session, kill it. Limit one session per window.\r\n      const windowId = event.sender.id;\r\n      if (getSessionHandler(windowId)) {\r\n        killSession(windowId);\r\n      }\r\n\r\n      // Create the driver and cache it by the sender ID\r\n      let driver = wd.promiseChainRemote({\r\n        hostname: host,\r\n        port,\r\n        path,\r\n        username,\r\n        accessKey,\r\n        https,\r\n      });\r\n      driver.configureHttp({rejectUnauthorized, proxy});\r\n      const handler = createSession(driver, event.sender, windowId);\r\n\r\n\r\n      // If we're just attaching to an existing session, do that and\r\n      // short-circuit the rest of the logic\r\n      if (attachSessId) {\r\n        driver._isAttachedSession = true;\r\n        await driver.attach(attachSessId);\r\n        // get the session capabilities to prove things are working\r\n        await driver.sessionCapabilities();\r\n        event.sender.send('appium-new-session-ready');\r\n        if (host !== '127.0.0.1' && host !== 'localhost') {\r\n          handler.runKeepAliveLoop();\r\n        }\r\n        return;\r\n      }\r\n\r\n      // If a newCommandTimeout wasn't provided, set it to 0 so that sessions don't close on users\r\n      if (!desiredCapabilities.newCommandTimeout) {\r\n        desiredCapabilities.newCommandTimeout = 0;\r\n      }\r\n\r\n      // If someone didn't specify connectHardwareKeyboard, set it to true by\r\n      // default\r\n      if (typeof desiredCapabilities.connectHardwareKeyboard === 'undefined') {\r\n        desiredCapabilities.connectHardwareKeyboard = true;\r\n      }\r\n\r\n      // Prevent wd from injecting default desired capabilities\r\n      if (typeof desiredCapabilities.wdNoDefaults === 'undefined' &&\r\n          typeof desiredCapabilities['wd-no-defaults'] === 'undefined') {\r\n        desiredCapabilities.wdNoDefaults = true;\r\n      }\r\n\r\n      // Try initializing it. If it fails, kill it and send error message to sender\r\n      let p = driver.init(desiredCapabilities);\r\n      event.sender.send('appium-new-session-successful');\r\n      await p;\r\n\r\n      if (host !== '127.0.0.1' && host !== 'localhost') {\r\n        handler.runKeepAliveLoop();\r\n      }\r\n\r\n      // The homepage arg in ChromeDriver is not working with Appium. iOS can have a default url, but\r\n      // we want to keep the process equal to prevent complexity so we launch a default url here to make\r\n      // sure we don't start with an empty page which will not show proper HTML in the inspector\r\n      const {browserName = ''} = desiredCapabilities;\r\n\r\n      if (browserName.toLowerCase() !== '') {\r\n        try {\r\n          await driver.get('http://appium.io/docs/en/about-appium/intro/');\r\n        } catch (ign) {}\r\n      }\r\n\r\n      event.sender.send('appium-new-session-ready');\r\n    } catch (e) {\r\n      // If the session failed, delete it from the cache\r\n      killSession(event.sender.id);\r\n      event.sender.send('appium-new-session-failed', e);\r\n    }\r\n  });\r\n}\r\n\r\nfunction connectRestartRecorder () {\r\n  ipcMain.on('appium-restart-recorder', (evt) => {\r\n    getSessionHandler(evt.sender.id).restart();\r\n  });\r\n}\r\n\r\nfunction connectKeepAlive () {\r\n  ipcMain.on('appium-keep-session-alive', (evt) => {\r\n    getSessionHandler(evt.sender.id).keepSessionAlive();\r\n  });\r\n}\r\n\r\n/**\r\n * When a Session Window makes method request, find it's corresponding driver, execute requested method\r\n * and send back the result\r\n */\r\nfunction connectClientMethodListener () {\r\n  ipcMain.on('appium-client-command-request', async (evt, data) => {\r\n    const {\r\n      uuid, // Transaction ID\r\n      methodName, // Optional. Name of method being provided\r\n      strategy, // Optional. Element locator strategy\r\n      selector, // Optional. Element fetch selector\r\n      fetchArray = false, // Optional. Are we fetching an array of elements or just one?\r\n      elementId, // Optional. Element being operated on\r\n      args = [], // Optional. Arguments passed to method\r\n      skipRefresh = false, // Optional. Do we want the updated source and screenshot?\r\n      ignoreResult = false, // Optional. Do we want to send the result back to the renderer?\r\n    } = data;\r\n\r\n    let renderer = evt.sender;\r\n    let methodHandler = getSessionHandler(renderer.id);\r\n\r\n    try {\r\n      if (methodName === 'quit') {\r\n        killSession(renderer.id, true);\r\n        // when we've quit the session, there's no source/screenshot to send\r\n        // back\r\n        renderer.send('appium-client-command-response', {\r\n          source: null,\r\n          screenshot: null,\r\n          windowSize: null,\r\n          uuid,\r\n          result: null\r\n        });\r\n      } else {\r\n        let res = {};\r\n        if (methodName) {\r\n          if (elementId) {\r\n            console.log(`Handling client method request with method '${methodName}', args ${JSON.stringify(args)} and elementId ${elementId}`);\r\n            res = await methodHandler.executeElementCommand(elementId, methodName, args, skipRefresh);\r\n          } else {\r\n            console.log(`Handling client method request with method '${methodName}' and args ${JSON.stringify(args)}`);\r\n            res = await methodHandler.executeMethod(methodName, args, skipRefresh);\r\n          }\r\n        } else if (strategy && selector) {\r\n          if (fetchArray) {\r\n            console.log(`Fetching elements with selector '${selector}' and strategy ${strategy}`);\r\n            res = await methodHandler.fetchElements(strategy, selector, skipRefresh);\r\n          } else {\r\n            console.log(`Fetching an element with selector '${selector}' and strategy ${strategy}`);\r\n            res = await methodHandler.fetchElement(strategy, selector);\r\n          }\r\n        }\r\n\r\n        renderer.send('appium-client-command-response', {\r\n          ...res,\r\n          methodName,\r\n          ignoreResult,\r\n          uuid,\r\n        });\r\n      }\r\n\r\n    } catch (e) {\r\n      // If the status is '6' that means the session has been terminated\r\n      if (e.status === 6) {\r\n        console.log('Session terminated: e.status === 6');\r\n        renderer.send('appium-session-done', e);\r\n      }\r\n      console.log('Caught an exception: ', e);\r\n      renderer.send('appium-client-command-response-error', {e: JSON.stringify(e), uuid});\r\n    }\r\n  });\r\n}\r\n\r\nconst getCurrentSessions = _.debounce(async (evt, data) => {\r\n  const {host, port, path: appiumPath = '/wd/hub', ssl, username, accessKey} = data;\r\n  try {\r\n    const res = username && accessKey\r\n      ? await request(`http${ssl ? 's' : ''}://${username}:${accessKey}@${host}:${port}${appiumPath}/sessions`)\r\n      : await request(`http${ssl ? 's' : ''}://${host}:${port}${appiumPath}/sessions`);\r\n    evt.sender.send('appium-client-get-sessions-response', {res});\r\n  } catch (e) {\r\n    evt.sender.send('appium-client-get-sessions-fail');\r\n  }\r\n}, 2000);\r\n\r\nfunction connectGetSessionsListener () {\r\n  ipcMain.on('appium-client-get-sessions', getCurrentSessions);\r\n}\r\n\r\nfunction connectMoveToApplicationsFolder () {\r\n  ipcMain.on('appium-move-to-applications-folder', (evt) => {\r\n    app.moveToApplicationsFolder();\r\n    evt.sender.send('appium-done-moving-to-applications-folder');\r\n  });\r\n}\r\n\r\nexport function createNewConfigWindow (win) {\r\n  openBrowserWindow('config', {\r\n    title: 'Config',\r\n    parent: win,\r\n    width: 1080 / 2,\r\n    height: 1080 / 4,\r\n  });\r\n}\r\n\r\nfunction connectOpenConfig (win) {\r\n  ipcMain.on('appium-open-config', () => {\r\n    createNewConfigWindow(win);\r\n  });\r\n}\r\n\r\nfunction connectGetEnv () {\r\n  ipcMain.on('appium-get-env', async (event) => {\r\n    event.sender.send('appium-env', {\r\n      defaultEnvironmentVariables,\r\n      savedEnvironmentVariables: await settings.get('ENV', {}),\r\n    });\r\n  });\r\n}\r\n\r\nfunction connectSaveEnv () {\r\n  ipcMain.on('appium-save-env', async (event, environmentVariables) => {\r\n    // Pluck unset values\r\n    const env = _.pickBy(environmentVariables, _.identity);\r\n\r\n    await settings.set('ENV', env);\r\n    await setSavedEnv();\r\n    event.sender.send('appium-save-env-done');\r\n  });\r\n}\r\n\r\nexport function connectServerErrorBackdoor () {\r\n  ipcMain.on('appium-force-nodejs-error', () => {\r\n    throw new Error('A NodeJS error was intentionally thrown');\r\n  });\r\n}\r\n\r\nexport function initializeIpc (win) {\r\n  // listen for 'start-server' from the renderer\r\n  connectStartServer(win);\r\n  // listen for 'stop-server' from the renderer\r\n  connectStopServer(win);\r\n  // listen for 'create-new-session-window' from the renderer\r\n  connectCreateNewSessionWindow(win);\r\n  connectGetDefaultArgs();\r\n  connectCreateNewSession(win);\r\n  connectClientMethodListener(win);\r\n  connectGetSessionsListener();\r\n  connectRestartRecorder();\r\n  connectMoveToApplicationsFolder();\r\n  connectKeepAlive();\r\n  connectClearLogFile();\r\n  connectOpenConfig(win);\r\n  connectGetEnv();\r\n  connectSaveEnv();\r\n\r\n  setTimeout(checkNewUpdates, 10000);\r\n}\r\n","import { app, shell, dialog, Menu } from 'electron';\r\nimport { createNewSessionWindow, createNewConfigWindow} from './appium';\r\nimport { checkNewUpdates } from './auto-updater';\r\nimport config from '../configs/app.config';\r\nimport i18n from '../configs/i18next.config';\r\n\r\nlet menuTemplates = {mac: {}, other: {}};\r\nlet mainWindow = null;\r\n\r\nfunction languageMenu () {\r\n  return config.languages.map((languageCode) => ({\r\n    label: i18n.t(languageCode),\r\n    type: 'radio',\r\n    checked: i18n.language === languageCode,\r\n    click: () => i18n.changeLanguage(languageCode)\r\n  }));\r\n}\r\n\r\nconst showAppInfoClickAction = () => dialog.showMessageBox({\r\n  title: i18n.t('appiumDesktop'),\r\n  message: i18n.t('showAppInfo', {\r\n    appVersion: app.getVersion(),\r\n    electronVersion: process.versions.electron,\r\n    nodejsVersion: process.versions.node\r\n  }),\r\n});\r\n\r\nfunction macMenuAppium () {\r\n  return {\r\n    label: 'Appium',\r\n    submenu: [{\r\n      label: i18n.t('About Appium'),\r\n      click: showAppInfoClickAction\r\n    }, {\r\n      label: i18n.t('Check for updates'),\r\n      click () {\r\n        checkNewUpdates(true);\r\n      }\r\n    }, {\r\n      type: 'separator'\r\n    }, {\r\n      label: i18n.t('New Session Window…'),\r\n      accelerator: 'Command+N',\r\n      click () {\r\n        createNewSessionWindow(mainWindow);\r\n      }\r\n    }, {\r\n      label: i18n.t('Configurations…'),\r\n      click () {\r\n        createNewConfigWindow(mainWindow);\r\n      }\r\n    }, {\r\n      type: 'separator'\r\n    }, {\r\n      label: i18n.t('Hide Appium'),\r\n      accelerator: 'Command+H',\r\n      selector: 'hide:'\r\n    }, {\r\n      label: i18n.t('Hide Others'),\r\n      accelerator: 'Command+Shift+H',\r\n      selector: 'hideOtherApplications:'\r\n    }, {\r\n      label: i18n.t('Show All'),\r\n      selector: 'unhideAllApplications:'\r\n    }, {\r\n      type: 'separator'\r\n    }, {\r\n      label: i18n.t('Quit'),\r\n      accelerator: 'Command+Q',\r\n      click () {\r\n        app.quit();\r\n      }\r\n    }]\r\n  };\r\n}\r\n\r\nfunction macMenuEdit () {\r\n  return {\r\n    label: i18n.t('Edit'),\r\n    submenu: [{\r\n      label: i18n.t('Undo'),\r\n      accelerator: 'Command+Z',\r\n      selector: 'undo:'\r\n    }, {\r\n      label: i18n.t('Redo'),\r\n      accelerator: 'Shift+Command+Z',\r\n      selector: 'redo:'\r\n    }, {\r\n      type: 'separator'\r\n    }, {\r\n      label: i18n.t('Cut'),\r\n      accelerator: 'Command+X',\r\n      selector: 'cut:'\r\n    }, {\r\n      label: i18n.t('Copy'),\r\n      accelerator: 'Command+C',\r\n      selector: 'copy:'\r\n    }, {\r\n      label: i18n.t('Paste'),\r\n      accelerator: 'Command+V',\r\n      selector: 'paste:'\r\n    }, {\r\n      label: i18n.t('Select All'),\r\n      accelerator: 'Command+A',\r\n      selector: 'selectAll:'\r\n    }]\r\n  };\r\n}\r\n\r\nfunction macMenuView () {\r\n  const submenu = (process.env.NODE_ENV === 'development') ? [{\r\n    label: i18n.t('Reload'),\r\n    accelerator: 'Command+R',\r\n    click () {\r\n      mainWindow.webContents.reload();\r\n    }\r\n  }, {\r\n    label: i18n.t('Toggle Developer Tools'),\r\n    accelerator: 'Alt+Command+I',\r\n    click () {\r\n      mainWindow.toggleDevTools();\r\n    }\r\n  }] : [];\r\n\r\n  submenu.push({\r\n    label: i18n.t('Toggle Full Screen'),\r\n    accelerator: 'Ctrl+Command+F',\r\n    click () {\r\n      mainWindow.setFullScreen(!mainWindow.isFullScreen());\r\n    }\r\n  });\r\n\r\n  submenu.push({\r\n    label: i18n.t('Languages'),\r\n    submenu: languageMenu(),\r\n  });\r\n\r\n  return {\r\n    label: i18n.t('View'),\r\n    submenu,\r\n  };\r\n}\r\n\r\nfunction macMenuWindow () {\r\n  return {\r\n    label: i18n.t('Window'),\r\n    submenu: [{\r\n      label: i18n.t('Minimize'),\r\n      accelerator: 'Command+M',\r\n      selector: 'performMiniaturize:'\r\n    }, {\r\n      label: i18n.t('Close'),\r\n      accelerator: 'Command+W',\r\n      selector: 'performClose:'\r\n    }, {\r\n      type: 'separator'\r\n    }, {\r\n      label: i18n.t('Bring All to Front'),\r\n      selector: 'arrangeInFront:'\r\n    }]\r\n  };\r\n}\r\n\r\nfunction macMenuHelp () {\r\n  return {\r\n    label: i18n.t('Help'),\r\n    submenu: [{\r\n      label: i18n.t('Learn More'),\r\n      click () {\r\n        shell.openExternal('http://appium.io');\r\n      }\r\n    }, {\r\n      label: i18n.t('Documentation'),\r\n      click () {\r\n        shell.openExternal('https://appium.io/documentation.html');\r\n      }\r\n    }, {\r\n      label: i18n.t('Search Issues'),\r\n      click () {\r\n        shell.openExternal('https://github.com/appium/appium-desktop/issues');\r\n      }\r\n    }, {\r\n      label: i18n.t('Add Or Improve Translations'),\r\n      click () {\r\n        shell.openExternal('https://crowdin.com/project/appium-desktop');\r\n      }\r\n    }]\r\n  };\r\n}\r\n\r\nmenuTemplates.mac = async () => [\r\n  macMenuAppium(),\r\n  macMenuEdit(),\r\n  await macMenuView(),\r\n  macMenuWindow(),\r\n  macMenuHelp(),\r\n];\r\n\r\nfunction otherMenuFile () {\r\n  let fileSubmenu = [{\r\n    label: i18n.t('&Open'),\r\n    accelerator: 'Ctrl+O'\r\n  }, {\r\n    label: i18n.t('&About Appium'),\r\n    click: showAppInfoClickAction,\r\n  }, {\r\n    type: 'separator'\r\n  }, {\r\n    label: i18n.t('&New Session Window...'),\r\n    accelerator: 'Ctrl+N',\r\n    click () {\r\n      createNewSessionWindow(mainWindow);\r\n    }\r\n  }, {\r\n    label: i18n.t('&Close'),\r\n    accelerator: 'Ctrl+W',\r\n    click () {\r\n      mainWindow.close();\r\n    }\r\n  }];\r\n\r\n  // If it's Windows, add a 'Check for Updates' menu option\r\n  if (process.platform === 'win32') {\r\n    fileSubmenu.splice(1, 0, {\r\n      label: i18n.t('&Check for updates'),\r\n      click () {\r\n        checkNewUpdates(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  return {\r\n    label: i18n.t('&File'),\r\n    submenu: fileSubmenu,\r\n  };\r\n}\r\n\r\nfunction otherMenuView () {\r\n  const submenu = [];\r\n  submenu.push({\r\n    label: i18n.t('Toggle &Full Screen'),\r\n    accelerator: 'F11',\r\n    click () {\r\n      mainWindow.setFullScreen(!mainWindow.isFullScreen());\r\n    }\r\n  });\r\n\r\n  submenu.push({\r\n    label: i18n.t('Languages'),\r\n    submenu: languageMenu(),\r\n  });\r\n\r\n  if (process.env.NODE_ENV === 'development') {\r\n    submenu.push({\r\n      label: i18n.t('&Reload'),\r\n      accelerator: 'Ctrl+R',\r\n      click () {\r\n        mainWindow.webContents.reload();\r\n      }\r\n    });\r\n    submenu.push({\r\n      label: i18n.t('Toggle &Developer Tools'),\r\n      accelerator: 'Alt+Ctrl+I',\r\n      click () {\r\n        mainWindow.toggleDevTools();\r\n      }\r\n    });\r\n  }\r\n\r\n  return {\r\n    label: i18n.t('&View'),\r\n    submenu,\r\n  };\r\n}\r\n\r\nfunction otherMenuHelp () {\r\n  return {\r\n    label: i18n.t('Help'),\r\n    submenu: [{\r\n      label: i18n.t('Learn More'),\r\n      click () {\r\n        shell.openExternal('http://appium.io');\r\n      }\r\n    }, {\r\n      label: i18n.t('Documentation'),\r\n      click () {\r\n        shell.openExternal('https://appium.io/documentation.html');\r\n      }\r\n    }, {\r\n      label: i18n.t('Search Issues'),\r\n      click () {\r\n        shell.openExternal('https://github.com/appium/appium-desktop/issues');\r\n      }\r\n    }]\r\n  };\r\n}\r\n\r\nmenuTemplates.other = async () => [\r\n  otherMenuFile(mainWindow),\r\n  await otherMenuView(mainWindow),\r\n  otherMenuHelp()\r\n];\r\n\r\nasync function rebuildMenus (mainWin = null) {\r\n  if (mainWin) {\r\n    mainWindow = mainWin;\r\n  }\r\n  if (!mainWindow) {\r\n    return;\r\n  }\r\n\r\n  if (config.platform === 'darwin') {\r\n    const template = await menuTemplates.mac(mainWindow);\r\n    const menu = Menu.buildFromTemplate(template);\r\n    Menu.setApplicationMenu(menu);\r\n  } else {\r\n    const template = await menuTemplates.other(mainWindow);\r\n    const menu = Menu.buildFromTemplate(template);\r\n    mainWindow.setMenu(menu);\r\n  }\r\n}\r\n\r\nexport default rebuildMenus;\r\n","import './override';\r\nimport i18n from './configs/i18next.config';\r\nimport { app, BrowserWindow, Menu, webContents } from 'electron';\r\nimport { initializeIpc } from './main/appium';\r\nimport { setSavedEnv } from './main/helpers';\r\nimport rebuildMenus from './main/menus';\r\nimport shellEnv from 'shell-env';\r\nimport fixPath from 'fix-path';\r\nimport settings from './shared/settings';\r\n\r\nlet mainWindow = null;\r\nconst isDev = process.env.NODE_ENV === 'development';\r\n\r\nif (isDev) {\r\n  require('electron-debug')(); // eslint-disable-line global-require\r\n}\r\n\r\nif (!isDev) {\r\n  // if we're running from the app package, we won't have access to env vars\r\n  // normally loaded in a shell, so work around with the shell-env module\r\n  const decoratedEnv = shellEnv.sync();\r\n  process.env = {...process.env, ...decoratedEnv};\r\n\r\n  // and we need to do the same thing with PATH\r\n  fixPath();\r\n}\r\nsetSavedEnv();\r\n\r\napp.on('window-all-closed', () => {\r\n  app.quit();\r\n});\r\n\r\n\r\nconst installExtensions = async () => {\r\n  if (isDev) {\r\n    const installer = require('electron-devtools-installer'); // eslint-disable-line global-require\r\n    const extensions = [\r\n      'REACT_DEVELOPER_TOOLS',\r\n      'REDUX_DEVTOOLS'\r\n    ];\r\n    const forceDownload = !!process.env.UPGRADE_EXTENSIONS;\r\n    for (const name of extensions) {\r\n      try {\r\n        await installer.default(installer[name], forceDownload);\r\n      } catch (e) {} // eslint-disable-line\r\n    }\r\n  }\r\n};\r\n\r\napp.on('ready', async () => {\r\n  await installExtensions();\r\n\r\n  mainWindow = new BrowserWindow({\r\n    show: false,\r\n    width: isDev ? 1200 : 650,\r\n    height: 600,\r\n    minWidth: 650,\r\n    minHeight: 600,\r\n    webPreferences: {\r\n      nodeIntegration: true\r\n    }\r\n  });\r\n\r\n  mainWindow.loadURL(`file://${__dirname}/index.html`);\r\n\r\n  mainWindow.webContents.on('did-finish-load', () => {\r\n    mainWindow.show();\r\n    mainWindow.focus();\r\n  });\r\n\r\n  mainWindow.on('closed', () => {\r\n    mainWindow = null;\r\n  });\r\n\r\n  if (isDev) {\r\n    mainWindow.openDevTools();\r\n  }\r\n\r\n  mainWindow.webContents.on('context-menu', (e, props) => {\r\n    const {x, y} = props;\r\n\r\n    Menu.buildFromTemplate([{\r\n      label: i18n.t('Inspect element'),\r\n      click () {\r\n        mainWindow.inspectElement(x, y);\r\n      }\r\n    }]).popup(mainWindow);\r\n  });\r\n\r\n  i18n.on('languageChanged', async (languageCode) => {\r\n    rebuildMenus();\r\n    await settings.set('PREFERRED_LANGUAGE', languageCode);\r\n    webContents.getAllWebContents().forEach((wc) => {\r\n      wc.send('appium-language-changed', {\r\n        language: languageCode,\r\n      });\r\n    });\r\n  });\r\n\r\n  rebuildMenus(mainWindow);\r\n\r\n  initializeIpc(mainWindow);\r\n});\r\n"]}