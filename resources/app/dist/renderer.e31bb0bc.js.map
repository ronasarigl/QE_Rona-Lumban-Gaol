{"version":3,"sources":["components/Spinner/Spinner.js","../configs/app.config.js","util.js","containers/App.js","components/Inspector/shared.js","actions/shared.js","lib/client-frameworks/framework.js","lib/client-frameworks/js-wd.js","lib/client-frameworks/js-wdio.js","lib/client-frameworks/js-oxygen.js","lib/client-frameworks/java.js","lib/client-frameworks/python.js","lib/client-frameworks/ruby.js","lib/client-frameworks/robot.js","lib/client-frameworks/index.js","actions/Inspector.js","components/AntdTypes.js","components/Session/ServerTabTestobject.js","components/Session/ServerTabHeadspin.js","components/Session/ServerTabBrowserstack.js","components/Session/ServerTabBitbar.js","components/Session/ServerTabKobiton.js","components/Session/ServerTabPerfecto.js","components/Session/ServerTabPcloudy.js","components/Session/ServerTabSauce.js","components/Session/ServerTabTestingbot.js","components/Session/ServerTabExperitest.js","components/Session/ServerTabRoboticMobi.js","components/Session/CloudProviders.js","actions/Session.js","../shared/settings.js","../configs/i18next.config.renderer.js","actions/ServerMonitor.js","actions/StartServer.js","reducers/StartServer.js","components/StartServer/shared.js","components/StartServer/StartButton.js","components/StartServer/SimpleTab.js","components/StartServer/SavePresetButton.js","components/StartServer/AdvancedTab.js","components/StartServer/DeletePresetButton.js","components/StartServer/PresetsTab.js","components/StartServer/StartServer.js","containers/StartServerPage.js","reducers/ServerMonitor.js","components/ServerMonitor/ServerMonitor.js","containers/ServerMonitorPage.js","components/Session/Layout.js","components/Session/FormattedCaps.js","components/Session/CapabilityControl.js","components/Session/NewSessionForm.js","components/Session/SavedSessions.js","components/Session/AttachToSession.js","components/Session/ServerTabAutomatic.js","components/Session/ServerTabCustom.js","components/Session/AdvancedServerParams.js","components/Session/CloudProviderSelector.js","components/Session/Session.js","containers/SessionPage.js","components/Inspector/HighlighterRect.js","components/Inspector/HighlighterRects.js","components/Inspector/Screenshot.js","components/Inspector/SelectedElement.js","components/Inspector/LocatedElements.js","components/Inspector/ElementLocator.js","components/Inspector/LocatorTestModal.js","components/Inspector/Source.js","components/Inspector/RecordedActions.js","components/Inspector/Actions.js","components/Inspector/Inspector.js","containers/InspectorPage.js","actions/Config.js","components/Config/Config.js","containers/ConfigPage.js","routes.js","components/WrongFolder/WrongFolder.js","containers/Root.js","components/ErrorBoundary/ErrorBoundary.js","actions/Updater.js","actions/index.js","reducers/Session.js","reducers/Inspector.js","reducers/Updater.js","reducers/Config.js","reducers/index.js","store/configureStore.development.js","store/configureStore.production.js","store/configureStore.js","index.js"],"names":["Spinner","styles","container","loader","config","platform","process","languages","namespace","UNIQUE_XPATH_ATTRIBUTES","UNIQUE_CLASS_CHAIN_ATTRIBUTES","UNIQUE_PREDICATE_ATTRIBUTES","xmlToJSON","source","childNodesOf","xmlNode","hasChildNodes","result","childIdx","childNodes","length","childNode","item","nodeType","push","translateRecursively","parentPath","index","attributes","attrIdx","attr","name","value","path","_","isNil","classChainSelector","isIOS","getOptimalClassChain","xmlDoc","predicateStringSelector","getOptimalPredicateString","children","map","childIndex","tagName","xpath","getOptimalXPath","classChain","predicateString","includes","DOMParser","parseFromString","firstChild","documentElement","doc","domNode","uniqueAttributes","attrName","attrValue","getAttribute","othersWithAttr","XPath","select","ign","indexOf","parentNode","Array","prototype","slice","call","filter","error","JSON","stringify","xpathAttributes","isString","join","withTranslation","componentCls","hocs","flow","App","React","Component","render","props","propTypes","PropTypes","element","isRequired","parseCoordinates","bounds","x","y","width","height","boundsArray","split","str","x1","y1","x2","y2","parseInt","isUnique","sourceXML","replace","STRATEGY_MAPPINGS","getLocators","res","strategyAlias","strategy","SCREENSHOT_INTERACTION_MODE","SELECT","SWIPE","TAP","actionArgTypes","STRING","NUMBER","actionDefinitions","methodName","args","refresh","INTERACTION_MODE","SOURCE","ACTIONS","clientMethodPromises","bindClient","removeAllListeners","on","evt","resp","isObject","isEmpty","truncatedResult","truncate","util","hasValue","ignoreResult","success","message","i18n","t","description","duration","elementId","id","promise","uuid","resolve","e","parse","reject","unbindClient","callClientMethod","params","ipcRenderer","Error","Promise","send","Framework","constructor","host","port","https","caps","scheme","actions","localVarCount","localVarCache","lastAssignedVar","serverUrl","language","addAction","action","wrapWithBoilerplate","indent","spaces","lines","spaceStr","i","l","trim","getCodeString","includeBoilerplate","genCodeFn","code","getNewLocalVar","getVarForFind","locator","key","wasNew","getVarName","varName","varIndex","codeFor_findAndAssign","codeFor_findElement","localVar","codeFor_tap","codeFor_swipe","JsWdFramework","isArray","suffixMap","codeFor_click","codeFor_clear","codeFor_sendKeys","text","codeFor_back","varNameIgnore","varIndexIgnore","codeFor_getCurrentActivity","codeFor_getCurrentPackage","codeFor_installAppOnDevice","app","codeFor_isAppInstalledOnDevice","codeFor_launchApp","codeFor_backgroundApp","timeout","codeFor_closeApp","codeFor_resetApp","codeFor_removeAppFromDevice","codeFor_getAppStrings","stringFile","codeFor_getClipboard","codeFor_setClipboard","clipboardText","codeFor_pressKeycode","keyCode","metaState","flags","codeFor_longPressKeycode","codeFor_hideDeviceKeyboard","codeFor_isKeyboardShown","codeFor_pushFileToDevice","pathToInstallTo","fileContentString","codeFor_pullFile","pathToPullFrom","codeFor_pullFolder","folderToPullFrom","codeFor_toggleAirplaneMode","codeFor_toggleData","codeFor_toggleWiFi","codeFor_toggleLocationServices","codeFor_sendSMS","phoneNumber","codeFor_gsmCall","codeFor_gsmSignal","signalStrength","codeFor_gsmVoice","state","codeFor_shake","codeFor_lock","seconds","codeFor_unlock","codeFor_isLocked","codeFor_rotateDevice","radius","rotation","touchCount","codeFor_getPerformanceData","packageName","dataType","dataReadTimeout","codeFor_getSupportedPerformanceDataTypes","codeFor_performTouchId","match","codeFor_toggleTouchIdEnrollment","enroll","codeFor_openNotifications","codeFor_getDeviceTime","codeFor_fingerprint","fingerprintId","codeFor_sessionCapabilities","codeFor_setPageLoadTimeout","ms","codeFor_setAsyncScriptTimeout","codeFor_setImplicitWaitTimeout","codeFor_getOrientation","codeFor_setOrientation","orientation","codeFor_getGeoLocation","codeFor_setGeoLocation","latitude","longitude","altitude","codeFor_logTypes","codeFor_log","logType","codeFor_updateSettings","settingsJson","codeFor_settings","codeFor_get","url","codeFor_url","codeFor_forward","codeFor_refresh","codeFor_currentContext","codeFor_contexts","codeFor_context","readableName","JsWdIoFramework","chainifyCode","proto","codeFor_setCommandTimeout","JsOxygenFramework","JavaFramework","pkg","cls","platformName","toLowerCase","Object","keys","k","codeFor_startActivity","settings","settingName","settingValue","toPairs","PythonFramework","getPythonVal","jsonVal","RubyFramework","RobotFramework","getCapsVariables","getApplicationInitialization","lastID","frameworks","jsWd","jsWdIo","jsOxygen","java","python","ruby","robot","SET_SESSION_DETAILS","SET_SOURCE_AND_SCREENSHOT","SESSION_DONE","SELECT_ELEMENT","UNSELECT_ELEMENT","SET_SELECTED_ELEMENT_ID","SET_INTERACTIONS_NOT_AVAILABLE","METHOD_CALL_REQUESTED","METHOD_CALL_DONE","SET_FIELD_VALUE","SET_EXPANDED_PATHS","SELECT_HOVERED_ELEMENT","UNSELECT_HOVERED_ELEMENT","SHOW_SEND_KEYS_MODAL","HIDE_SEND_KEYS_MODAL","QUIT_SESSION_REQUESTED","QUIT_SESSION_DONE","START_RECORDING","PAUSE_RECORDING","CLEAR_RECORDING","CLOSE_RECORDER","SET_ACTION_FRAMEWORK","SAVED_FRAMEWORK","RECORD_ACTION","SET_SHOW_BOILERPLATE","SHOW_LOCATOR_TEST_MODAL","HIDE_LOCATOR_TEST_MODAL","SET_LOCATOR_TEST_STRATEGY","SET_LOCATOR_TEST_VALUE","SEARCHING_FOR_ELEMENTS","SEARCHING_FOR_ELEMENTS_COMPLETED","GET_FIND_ELEMENTS_TIMES","GET_FIND_ELEMENTS_TIMES_COMPLETED","SET_LOCATOR_TEST_ELEMENT","CLEAR_SEARCH_RESULTS","ADD_ASSIGNED_VAR_CACHE","CLEAR_ASSIGNED_VAR_CACHE","SET_SCREENSHOT_INTERACTION_MODE","SET_SEARCHED_FOR_ELEMENT_BOUNDS","CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS","SET_SWIPE_START","SET_SWIPE_END","CLEAR_SWIPE_ACTION","PROMPT_KEEP_ALIVE","HIDE_PROMPT_KEEP_ALIVE","SELECT_INTERACTION_MODE","SELECT_ACTION_GROUP","SELECT_SUB_ACTION_GROUP","ENTERING_ACTION_ARGS","REMOVE_ACTION","SET_ACTION_ARG","SET_CONTEXT","bindAppium","dispatch","promptKeepAlive","reason","killedByUser","type","findElement","debounce","strategyMap","getState","selector","variableName","variableType","inspector","selectedElementPath","selectElement","selectedElementAttributes","selectedElementXPath","selectedElement","expandedPaths","pathArr","splice","paths","unselectElement","selectHoveredElement","unselectHoveredElement","applyClientMethod","isRecording","contexts","contextsError","currentContext","currentContextError","screenshot","windowSize","sourceError","screenshotError","windowSizeError","variableIndex","findAndAssign","concat","addAssignedVarCache","showSendKeysModal","hideSendKeysModal","setFieldValue","setExpandedPaths","quitSession","startRecording","pauseRecording","clearRecording","getSavedActionFramework","framework","get","setActionFramework","set","recordAction","closeRecorder","toggleShowBoilerplate","show","showBoilerplate","setSessionDetails","sessionDetails","showLocatorTestModal","hideLocatorTestModal","setLocatorTestValue","locatorTestValue","setLocatorTestStrategy","locatorTestStrategy","setContext","context","searchForElement","elements","fetchArray","el","getFindElementsTimes","findDataSource","findElementsExecutionTimes","find","executionTime","time","sortBy","assignedVarCache","setLocatorTestElement","location","size","B","all","skipRefresh","skipRecord","clearSearchResults","selectScreenshotInteractionMode","screenshotInteractionMode","setSwipeStart","swipeStartX","swipeStartY","setSwipeEnd","swipeEndX","swipeEndY","clearSwipeAction","keepSessionAlive","selectActionGroup","group","selectSubActionGroup","selectInteractionMode","interaction","startEnteringActionArgs","actionName","cancelPendingAction","setActionArg","BUTTON","DEFAULT","PRIMARY","DISABLED","DANGER","ALERT","ERROR","WARNING","INFO","INPUT","TEXT","TEXTAREA","PASSWORD","SUBMIT","ROW","FLEX","FormItem","Form","Item","ServerTabTestobject","server","setServerParam","placeholder","env","TESTOBJECT_API_KEY","environmentVariable","testobject","apiKey","target","SessionStyles","addonDataCenter","inputDataCenter","dataCenter","ServerTabHeadspin","customServerInputLeft","headspin","webDriverUrl","localDesc","ServerTabBrowserstack","browserstackUsernamePlaceholder","BROWSERSTACK_USERNAME","browserstackAccessKeyPlaceholder","BROWSERSTACK_ACCESS_KEY","browserstack","username","accessKey","ServerTabBitbar","bitbarApiKeyPlaceholder","BITBAR_API_KEY","bitbar","ServerTabKobiton","kobitonUsernamePlaceholder","KOBITON_USERNAME","kobitonAccessKeyPlaceholder","KOBITON_ACCESS_KEY","kobiton","ServerTabPerfecto","perfectoTokenPlaceholder","PERFECTO_TOKEN","perfecto","hostname","token","ServerTabPcloudy","pcloudy","ServerTabSauce","sauceUsernamePlaceholder","SAUCE_USERNAME","sauceAccessKeyPlaceholder","SAUCE_ACCESS_KEY","sauce","addonDataCenterRadioContainer","useSCProxy","checked","scHost","scPort","ServerTabTestingbot","testingbotKeyPlaceholder","TB_KEY","testingbotSecretPlaceholder","TB_SECRET","testingbot","secret","ServerTabExperitest","experitest","ServerTabRoboticMobi","ROBOTIC_MOBI_TOKEN","roboticmobi","CloudProviders","tabhead","tabText","SauceLogo","tab","logo","TestObjectLogo","HeadSpinLogo","BrowserStackLogo","BitBarLogo","KobitonLogo","PerfectoLogo","PcloudyLogo","TestingBotLogo","ExperitestLogo","RoboticMobiLogo","NEW_SESSION_REQUESTED","NEW_SESSION_BEGAN","NEW_SESSION_DONE","CHANGE_CAPABILITY","SAVE_SESSION_REQUESTED","SAVE_SESSION_DONE","GET_SAVED_SESSIONS_REQUESTED","GET_SAVED_SESSIONS_DONE","SET_CAPABILITY_PARAM","ADD_CAPABILITY","REMOVE_CAPABILITY","SWITCHED_TABS","SET_CAPS","SAVE_AS_MODAL_REQUESTED","HIDE_SAVE_AS_MODAL_REQUESTED","SET_SAVE_AS_TEXT","DELETE_SAVED_SESSION_REQUESTED","DELETE_SAVED_SESSION_DONE","CHANGE_SERVER_TYPE","SET_SERVER_PARAM","SET_SERVER","SESSION_LOADING","SESSION_LOADING_DONE","SAVED_SESSIONS","SESSION_SERVER_PARAMS","SESSION_SERVER_TYPE","SERVER_ARGS","VISIBLE_PROVIDERS","SET_ATTACH_SESS_ID","GET_SESSIONS_REQUESTED","GET_SESSIONS_DONE","ENABLE_DESIRED_CAPS_EDITOR","ABORT_DESIRED_CAPS_EDITOR","SAVE_RAW_DESIRED_CAPS","SET_RAW_DESIRED_CAPS","SHOW_DESIRED_CAPS_JSON_ERROR","IS_ADDING_CLOUD_PROVIDER","SET_PROVIDERS","serverTypes","local","remote","ServerTypes","JSON_TYPES","getCapsObject","assign","cap","obj","showError","secs","errMessage","status","data","setCaps","changeCapability","addCapability","setCapabilityParam","removeCapability","getServerInfo","session","serverType","ssl","TESTOBJECT_HOST","headspinUrl","pathname","protocol","BROWSERSTACK_HOST","BROWSERSTACK_PORT","BITBAR_HOST","KOBITON_HOST","PCLOUDY_USERNAME","PCLOUDY_ACCESS_KEY","TB_HOST","experitestUrl","newSession","attachSessId","desiredCapabilities","addCustomCaps","testobject_api_key","securityToken","testdroid_source","testdroid_apiKey","pCloudy_Username","pCloudy_ApiKey","robotic_mobi_token","rejectUnauthorized","proxy","advanced","allowUnauthorized","useProxy","once","removeNewSessionListeners","saveSession","savedSessions","newSavedSession","date","Date","getSavedSessions","switchTabs","requestSaveAsModal","hideSaveAsModal","setSaveAsText","saveAsText","deleteSavedSession","newSessions","setAttachSessId","changeServerType","getRunningSessions","debounceGetRunningSessions","setLocalServerParams","serverArgs","undefined","setSavedServerParams","currentProviders","visibleProviders","avoidServerTypes","sessions","removeRunningSessionsListeners","startDesiredCapsEditor","abortDesiredCapsEditor","saveRawDesiredCaps","rawDesiredCaps","capsArray","newCaps","newCapsArray","setRawDesiredCaps","isValidCapsJson","invalidCapsJsonReason","isValidatingCapsJson","addCloudProvider","isAddingProvider","stopAddCloudProvider","addVisibleProvider","provider","providers","removeVisibleProvider","setVisibleProviders","browserName","includeSafariInWebviews","nativeWebScreenshot","chromeOptions","ensureWebviewsHavePages","defaults","PRESETS","i18nextOptions","backend","loadPath","__dirname","addPath","jsonIndent","interpolation","escapeValue","lng","getSync","fallbackLng","whitelist","react","wait","isInitialized","use","initReactI18next","i18nextBackend","init","SERVER_STOP_REQ","SERVER_STOP_OK","SERVER_STOP_FAIL","LOGS_RECEIVED","LOGS_CLEARED","MONITOR_CLOSED","START_SESSION_REQUEST","SET_SERVER_ARGS","stopServerReq","stopServerOK","stopServerFailed","startSessionRequest","sessionUUID","serverLogsReceived","logs","setServerArgs","monitorClosed","stopListening","removeStopListeners","stopServer","event","alert","level","msg","setTimeout","closeMonitor","clearLogs","logfilePath","startServer","startSession","getRawLogs","openExternal","SERVER_START_REQ","SERVER_START_OK","SERVER_START_ERR","UPDATE_ARGS","SWITCH_TAB","PRESET_SAVE_REQ","PRESET_SAVE_OK","GET_PRESETS","PRESET_DELETE_REQ","PRESET_DELETE_OK","SET_LOGFILE_PATH","preventDefault","removeStartServerListeners","updateArgs","switchTab","tabId","savePreset","presets","_modified","now","console","getPresets","deletePreset","DEFAULT_ARGS","sendSync","initialState","relaxedSecurityEnabled","serverVersion","SERVER_VERSION","serverStarting","serverFailMsg","presetSaving","presetDeleting","object","bool","func","updateArg","argName","newVal","StartButton","isEnabled","disabledOverride","noop","openConfig","buttonProps","disabled","startButton","configButton","SimpleTab","form","address","bind","SavePresetButton","AdvancedTab","modalOpen","newPresetName","buildInput","label","input","openPresetModal","setState","closePresetModal","updatePresetName","presetName","modal","presetModal","advancedForm","inputSection","secTitle","secBody","DeletePresetButton","PresetsTab","selectedPreset","componentDidMount","hasPresets","presetIsSelected","emptyPresetList","noPresetsContainer","noPresetsMessage","selectedPresetData","preset","selectPreset","window","confirm","presetList","presetsList","p","presetLink","presetItemActive","presetItemTitle","presetItemDesc","when","fromNow","presetDetail","columns","title","dataIndex","arg","val","presetsDetail","advancedStyles","presetsSection","TAB_SIMPLE","TAB_ADVANCED","TAB_PRESETS","StartServer","displayTab","formAndLogo","AppiumLogo","tabs","tabButtons","number","mapStateToProps","mapDispatchToProps","StartServerActions","STATUS_RUNNING","STATUS_STOPPED","STATUS_STOPPING","MAX_LOG_LINES","logLines","serverStatus","serverMonitor","serverStopping","sessionStart","sessionId","timestamp","format","convert","AnsiConverter","fg","bg","MAX_LOGS_RENDERED","leveler","StopButtonComponent","btn","serverButton","string","StopButton","StartSessionButtonComponent","StartSessionButton","GetRawLogsButtonComponent","GetRawLogsButton","ServerMonitor","keydownListener","metaKey","ctrlKey","document","addEventListener","componentWillUnmount","removeEventListener","getSnapshotBeforeUpdate","shouldScroll","n","_term","scrollTop","offsetHeight","scrollHeight","componentDidUpdate","statusIcon","statusMsg","logLineSection","line","icn","logTimestamp","__html","toHtml","termClass","term","lastSection","last","bar","AppiumSmallMagenta","c","array","ServerActions","HEIGHT_OF_SESSION_CONFIG_AREA","NewSessionForm","getFormattedJSON","formatJSON","plain","isEditingDesiredCaps","SessionCSS","formattedCapsCont","formattedCaps","maxHeight","getCurrentWindow","getSize","capsEditorControls","capsEditorButton","capsEditor","dialog","getLocalFilePath","canceled","filePaths","showOpenDialog","properties","onSetCapabilityParam","buttonAfter","currentFilePath","isNaN","fileControlWrapper","Option","Select","handleSetType","translatedValue","showSaveAsModal","capsFormRow","capsFormCol","capsFormDisabled","newSessionForm","btnDeleteCap","capsFormattedCol","SavedSessions","onRow","getRowClassName","record","onClick","sessionFromUUID","capsUUID","selected","handleDelete","dataSource","windowSizeHeight","formatCaps","importantCaps","deviceName","automationName","formatCapsBrowserstack","sessionName","AttachToSession","getSessionInfo","capabilities","runningAppiumSessions","btnReload","ServerTabCustom","Panel","Collapse","AdvancedServerParams","advancedSettingsContainerCol","advancedSettingsContainer","CloudProviderSelector","toggleVisibleProvider","providerName","handleCloseModal","isAddingCloudProvider","providersGrid","chunk","footer","cloudProviderModal","row","providerIsVisible","style","borderColor","TabPane","Tabs","ADD_CLOUD_PROVIDER","Session","handleSelectServerTab","removeCloudProvider","newSessionBegan","tabKey","isCapsDirty","sessionLoading","isAttaching","sessionContainer","serverTab","serverTabs","scrollingTabCont","scrollingTab","savedSessionsCount","sessionFooter","desiredCapsLink","shell","SessionActions","HighlighterRect","hoveredElement","zIndex","scaleRatio","xOffset","elLocation","elSize","hoveredPath","selectedPath","left","top","highlighterClasses","InspectorCSS","HighlighterRects","updateScaleRatio","screenshotEl","containerEl","querySelector","offsetWidth","handleScreenshotClick","swipeStart","swipeEnd","delay","handleDoSwipe","handleMouseMove","offsetX","nativeEvent","offsetY","Math","round","handleMouseOut","searchedForElementBounds","isLocatorTestModalVisible","highlighterRects","highlighterXOffset","getBoundingClientRect","recursive","childEl","screenshotStyle","cursor","Screenshot","methodCallInProgress","swipeInstructions","screenImg","innerScreenshotContainer","screenshotBox","coordinatesContainer","swipeSvg","ButtonGroup","Button","Group","NATIVE_APP","selectedElementTableCell","SelectedElement","handleSendKeys","contextSelect","sendKeys","selectedElementId","isFindingElementsTimes","sendKeysModalVisible","elementInteractionsNotAvailable","isDisabled","attributeColumns","unshift","findColumns","align","getTimeButton","showXpathWarning","classChainText","predicateStringText","elementActions","clipboard","writeText","LocatedElements","onSubmit","locatedElements","onCancel","locatorTestElement","InspectorStyles","elementCount","ElementLocator","strategyValue","strategyName","LocatorTestModal","isSearchingForElements","IMPORTANT_ATTRS","Source","getFormattedTag","attrs","sourceAttrName","sourceAttrValue","sourceTag","handleSelectElement","elemObj","selectedPaths","errorMsg","RecordedActions","raw","recordedActions","actionFramework","rawCode","actionBar","frameworkOpts","f","highlightedCode","Actions","startPerformingAction","executeCommand","pendingAction","appPackage","appActivity","appWaitPackage","intentAction","intentCategory","intentFlags","optionalIntentArguments","dontStopAppOnReset","json","selectedActionGroup","selectedSubActionGroup","actionGroupName","actionGroup","argType","toNumber","MIN_WIDTH","MIN_HEIGHT","MAX_SCREENSHOT_WIDTH","Inspector","didInitialResize","screenAndSourceEl","lastScreenshot","updateSourceTreeWidth","img","imgRect","screenshotRect","flexBasis","maxWidth","attemptedWidth","curHeight","innerHeight","curWidth","innerWidth","needsResize","newWidth","newHeight","resizeTo","screenshotInteractionChange","mode","showRecord","selectedInteractionMode","showKeepAlivePrompt","main","actionControls","controls","InspectorActions","InspectorPage","SET_ENVIRONMENT_VARIABLE","SET_ENVIRONMENT_VARIABLES","GET_ENVIRONMENT_VARIABLES","SAVE_ENVIRONMENT_VARIABLES","setEnvironmentVariable","getEnvironmentVariables","defaultEnvironmentVariables","savedEnvironmentVariables","Config","ENV_VARIABLE_NAMES","saveAndRestart","environmentVariables","dialogOptions","buttons","showMessageBox","response","relaunch","exit","close","ENV_NAME","ConfigActions","ConfigPage","changeLanguage","StartServerPage","ServerMonitorPage","SessionPage","WrongFolder","moveToApplicationsFolder","WrongFolderStyles","electron","isDev","NODE_ENV","shouldShowWrongFolderComponent","WRONG_FOLDER","FORCE_NO_WRONG_FOLDER","isInApplicationsFolder","Root","store","history","CREATE_ISSUE_URL","ErrorBoundary","getDerivedStateFromError","errorBoundary","stack","SET_UPDATE_STATE","setUpdateState","updateState","configActions","inspectorActions","serverMonitorActions","sessionActions","startServerActions","updaterActions","serverName","INITIAL_STATE","gettingSessions","nextState","isAttachSessIdValid","runningSessions","newSessionRequested","saveSessionRequested","getSavedSessionsRequested","deletingSession","currentServerState","newServerState","nextServerState","cloneDeep","reduce","DEFAULT_FRAMEWORK","findElementByPath","isQuittingSession","isSessionDone","selectedElementVariableName","selectedElementVariableType","createRootReducer","router","updater","rootReducer","configureStore","middleware","enhancers","thunk","logger","collapsed","actionCreators","routerActions","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","enhancer","module","hot","accept","replaceReducer","require","default","selectedConfigureStore","configureStoreProd","configureStoreDev","exports","Store","getElementById","NextRoot"],"mappings":"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","file":"renderer.e31bb0bc.js","sourceRoot":"..\\app\\renderer","sourcesContent":["import React from 'react';\r\nimport styles from './Spinner.css';\r\n\r\nconst Spinner = () => (\r\n  <div className={styles.container}>\r\n    <div className={styles.loader}/>\r\n  </div>\r\n);\r\n\r\nexport default Spinner;","const config = {\r\n  platform: process.platform,\r\n  languages: ['en', 'de', 'ru', 'ja', 'zh-CN', 'ko', 'hi', 'kn', 'ml-IN', 'pa-IN', 'te', 'pt-BR'],\r\n  namespace: 'translation',\r\n};\r\n\r\nexport default config;\r\n","import XPath from 'xpath';\r\nimport { withTranslation as wt } from 'react-i18next';\r\nimport _ from 'lodash';\r\nimport log from 'electron-log';\r\nimport config from '../configs/app.config';\r\nimport { DOMParser } from 'xmldom';\r\n\r\n// Attributes on nodes that we know are unique to the node\r\nconst UNIQUE_XPATH_ATTRIBUTES = [\r\n  'name',\r\n  'content-desc',\r\n  'id',\r\n  'accessibility-id',\r\n];\r\nconst UNIQUE_CLASS_CHAIN_ATTRIBUTES = [\r\n  'label',\r\n  'name',\r\n  'value',\r\n];\r\nconst UNIQUE_PREDICATE_ATTRIBUTES = [\r\n  'label',\r\n  'name',\r\n  'value',\r\n  'type',\r\n];\r\n\r\n/**\r\n * Translates sourceXML to JSON\r\n *\r\n * @param {string} source\r\n * @returns {Object}\r\n */\r\nexport function xmlToJSON (source) {\r\n  const childNodesOf = (xmlNode) => {\r\n    if (!xmlNode || !xmlNode.hasChildNodes()) {\r\n      return [];\r\n    }\r\n\r\n    const result = [];\r\n    for (let childIdx = 0; childIdx < xmlNode.childNodes.length; ++childIdx) {\r\n      const childNode = xmlNode.childNodes.item(childIdx);\r\n      if (childNode.nodeType === 1) {\r\n        result.push(childNode);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n  const translateRecursively = (xmlNode, parentPath = '', index = null) => {\r\n    const attributes = {};\r\n    for (let attrIdx = 0; attrIdx < xmlNode.attributes.length; ++attrIdx) {\r\n      const attr = xmlNode.attributes.item(attrIdx);\r\n      attributes[attr.name] = attr.value;\r\n    }\r\n\r\n    // Dot Separated path of indices\r\n    const path = _.isNil(index) ? '' : `${!parentPath ? '' : parentPath + '.'}${index}`;\r\n    const classChainSelector = isIOS ? getOptimalClassChain(xmlDoc, xmlNode, UNIQUE_CLASS_CHAIN_ATTRIBUTES) : '';\r\n    const predicateStringSelector = isIOS ? getOptimalPredicateString(xmlDoc, xmlNode, UNIQUE_PREDICATE_ATTRIBUTES) : '';\r\n\r\n    return {\r\n      children: childNodesOf(xmlNode)\r\n        .map((childNode, childIndex) => translateRecursively(childNode, path, childIndex)),\r\n      tagName: xmlNode.tagName,\r\n      attributes,\r\n      xpath: getOptimalXPath(xmlDoc, xmlNode, UNIQUE_XPATH_ATTRIBUTES),\r\n      ...(isIOS ? {classChain: classChainSelector ? `**${classChainSelector}` : ''} : {}),\r\n      ...(isIOS ? {predicateString: predicateStringSelector ? predicateStringSelector : ''} : {}),\r\n      path,\r\n    };\r\n  };\r\n  const isIOS = source.includes('XCUIElement');\r\n  const xmlDoc = new DOMParser().parseFromString(source);\r\n  const firstChild = childNodesOf(xmlDoc.documentElement)[0];\r\n\r\n  return firstChild ? translateRecursively(firstChild) : {};\r\n}\r\n\r\n/**\r\n * Get an optimal XPath for a DOMNode\r\n *\r\n * @param {DOMDocument} doc\r\n * @param {DOMNode} domNode\r\n * @param {Array<String>} uniqueAttributes Attributes we know are unique (defaults to just 'id')\r\n * @returns {string|null}\r\n */\r\nexport function getOptimalXPath (doc, domNode, uniqueAttributes = ['id']) {\r\n  try {\r\n    // BASE CASE #1: If this isn't an element, we're above the root, return empty string\r\n    if (!domNode.tagName || domNode.nodeType !== 1) {\r\n      return '';\r\n    }\r\n\r\n    // BASE CASE #2: If this node has a unique attribute, return an absolute XPath with that attribute\r\n    for (let attrName of uniqueAttributes) {\r\n      const attrValue = domNode.getAttribute(attrName);\r\n      if (attrValue) {\r\n        let xpath = `//${domNode.tagName || '*'}[@${attrName}=\"${attrValue}\"]`;\r\n        let othersWithAttr;\r\n\r\n        // If the XPath does not parse, move to the next unique attribute\r\n        try {\r\n          othersWithAttr = XPath.select(xpath, doc);\r\n        } catch (ign) {\r\n          continue;\r\n        }\r\n\r\n        // If the attribute isn't actually unique, get it's index too\r\n        if (othersWithAttr.length > 1) {\r\n          let index = othersWithAttr.indexOf(domNode);\r\n          xpath = `(${xpath})[${index + 1}]`;\r\n        }\r\n        return xpath;\r\n      }\r\n    }\r\n\r\n    // Get the relative xpath of this node using tagName\r\n    let xpath = `/${domNode.tagName}`;\r\n\r\n    // If this node has siblings of the same tagName, get the index of this node\r\n    if (domNode.parentNode) {\r\n      // Get the siblings\r\n      const childNodes = Array.prototype.slice.call(domNode.parentNode.childNodes, 0).filter((childNode) => (\r\n        childNode.nodeType === 1 && childNode.tagName === domNode.tagName\r\n      ));\r\n\r\n      // If there's more than one sibling, append the index\r\n      if (childNodes.length > 1) {\r\n        let index = childNodes.indexOf(domNode);\r\n        xpath += `[${index + 1}]`;\r\n      }\r\n    }\r\n\r\n    // Make a recursive call to this nodes parents and prepend it to this xpath\r\n    return getOptimalXPath(doc, domNode.parentNode, uniqueAttributes) + xpath;\r\n  } catch (error) {\r\n    // If there's an unexpected exception, abort and don't get an XPath\r\n    log.error(`The most optimal XPATH could not be determined because an error was thrown: '${JSON.stringify(error, null, 2)}'`);\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Get an optimal Class Chain for a DOMNode based on the getOptimalXPath method\r\n *\r\n * @param {DOMDocument} doc\r\n * @param {DOMNode} domNode\r\n * @param {Array<String>} uniqueAttributes Attributes we know are unique\r\n * @returns {string|null}\r\n */\r\nfunction getOptimalClassChain (doc, domNode, uniqueAttributes) {\r\n  try {\r\n    // BASE CASE #1: If this isn't an element, we're above the root, or this is `XCUIElementTypeApplication`,\r\n    // which is not an official XCUITest element, return empty string\r\n    if (!domNode.tagName || domNode.nodeType !== 1 || domNode.tagName === 'XCUIElementTypeApplication') {\r\n      return '';\r\n    }\r\n\r\n    // BASE CASE #2: If this node has a unique class chain based on attributes then return it\r\n    for (let attrName of uniqueAttributes) {\r\n      const attrValue = domNode.getAttribute(attrName);\r\n      if (attrValue) {\r\n        let xpath = `//${domNode.tagName || '*'}[@${attrName}=\"${attrValue}\"]`;\r\n        let classChain = `/${domNode.tagName || '*'}[\\`${attrName} == \"${attrValue}\"\\`]`;\r\n        let othersWithAttr;\r\n\r\n        // If the XPath does not parse, move to the next unique attribute\r\n        try {\r\n          othersWithAttr = XPath.select(xpath, doc);\r\n        } catch (ign) {\r\n          continue;\r\n        }\r\n\r\n        // If the attribute isn't actually unique, get it's index too\r\n        if (othersWithAttr.length > 1) {\r\n          let index = othersWithAttr.indexOf(domNode);\r\n          classChain = `${classChain}[${index + 1}]`;\r\n        }\r\n        return classChain;\r\n      }\r\n    }\r\n\r\n    // Get the relative xpath of this node using tagName\r\n    let classChain = `/${domNode.tagName}`;\r\n\r\n    // If this node has siblings of the same tagName, get the index of this node\r\n    if (domNode.parentNode) {\r\n      // Get the siblings\r\n      const childNodes = Array.prototype.slice.call(domNode.parentNode.childNodes, 0).filter((childNode) => (\r\n        childNode.nodeType === 1 && childNode.tagName === domNode.tagName\r\n      ));\r\n\r\n      // If there's more than one sibling, append the index\r\n      if (childNodes.length > 1) {\r\n        let index = childNodes.indexOf(domNode);\r\n        classChain += `[${index + 1}]`;\r\n      }\r\n    }\r\n\r\n    // Make a recursive call to this nodes parents and prepend it to this xpath\r\n    return getOptimalClassChain(doc, domNode.parentNode, uniqueAttributes) + classChain;\r\n  } catch (error) {\r\n    // If there's an unexpected exception, abort and don't get an XPath\r\n    log.error(`The most optimal '-ios class chain' could not be determined because an error was thrown: '${JSON.stringify(error, null, 2)}'`);\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Get an optimal Predicate String for a DOMNode based on the getOptimalXPath method\r\n * The `ios predicate string` can only search a single element, no parent child scope\r\n *\r\n * @param {DOMDocument} doc\r\n * @param {DOMNode} domNode\r\n * @param {Array<String>} uniqueAttributes Attributes we know are unique\r\n * @returns {string|null}\r\n */\r\nfunction getOptimalPredicateString (doc, domNode, uniqueAttributes) {\r\n  try {\r\n    // BASE CASE #1: If this isn't an element, we're above the root, or this is `XCUIElementTypeApplication`,\r\n    // which is not an official XCUITest element, return empty string\r\n    if (!domNode.tagName || domNode.nodeType !== 1 || domNode.tagName === 'XCUIElementTypeApplication') {\r\n      return '';\r\n    }\r\n\r\n    // BASE CASE #2: Check all attributes and try to find the best way\r\n    let xpathAttributes = [];\r\n    let predicateString = [];\r\n\r\n    for (let attrName of uniqueAttributes) {\r\n      const attrValue = domNode.getAttribute(attrName);\r\n\r\n      if (_.isNil(attrValue) || _.isString(attrValue) && attrValue.length === 0) {\r\n        continue;\r\n      }\r\n\r\n      xpathAttributes.push(`@${attrName}=\"${attrValue}\"`);\r\n      const xpath = `//*[${xpathAttributes.join(' and ')}]`;\r\n      predicateString.push(`${attrName} == \"${attrValue}\"`);\r\n      let othersWithAttr;\r\n\r\n      // If the XPath does not parse, move to the next unique attribute\r\n      try {\r\n        othersWithAttr = XPath.select(xpath, doc);\r\n      } catch (ign) {\r\n        continue;\r\n      }\r\n\r\n      // If the attribute isn't actually unique, get it's index too\r\n      if (othersWithAttr.length === 1) {\r\n        return predicateString.join(' AND ');\r\n      }\r\n    }\r\n  } catch (error) {\r\n    // If there's an unexpected exception, abort and don't get an XPath\r\n    log.error(`The most optimal '-ios predicate string' could not be determined because an error was thrown: '${JSON.stringify(error, null, 2)}'`);\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function withTranslation (componentCls, ...hocs) {\r\n  return _.flow(\r\n    ...hocs,\r\n    wt(config.namespace),\r\n  )(componentCls);\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from '../util';\r\n\r\nclass App extends React.Component {\r\n  render () {\r\n    const { children } = this.props;\r\n    return (\r\n      <React.Fragment>{children}</React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  children: PropTypes.element.isRequired\r\n};\r\n\r\nexport default withTranslation(App);\r\n","import { DOMParser } from 'xmldom';\r\nimport xpath from 'xpath';\r\n\r\nexport function parseCoordinates (element) {\r\n  let {bounds, x, y, width, height} = element.attributes || {};\r\n\r\n  if (bounds) {\r\n    let boundsArray = bounds.split(/\\[|\\]|,/).filter((str) => str !== '');\r\n    return {x1: boundsArray[0], y1: boundsArray[1], x2: boundsArray[2], y2: boundsArray[3]};\r\n  } else if (x) {\r\n    x = parseInt(x, 10);\r\n    y = parseInt(y, 10);\r\n    width = parseInt(width, 10);\r\n    height = parseInt(height, 10);\r\n    return {x1: x, y1: y, x2: x + width, y2: y + height};\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n\r\nexport function isUnique (attrName, attrValue, sourceXML) {\r\n  // If no sourceXML provided, assume it's unique\r\n  if (!sourceXML) {\r\n    return true;\r\n  }\r\n  const doc = new DOMParser().parseFromString(sourceXML);\r\n  return xpath.select(`//*[@${attrName}=\"${attrValue.replace(/\"/g, '')}\"]`, doc).length < 2;\r\n}\r\n\r\n// Map of the optimal strategies.\r\nconst STRATEGY_MAPPINGS = [\r\n  ['name', 'accessibility id'],\r\n  ['content-desc', 'accessibility id'],\r\n  ['id', 'id'],\r\n  ['rntestid', 'id'],\r\n  ['resource-id', 'id'],\r\n];\r\n\r\nexport function getLocators (attributes, sourceXML) {\r\n  const res = {};\r\n  for (let [strategyAlias, strategy] of STRATEGY_MAPPINGS) {\r\n    const value = attributes[strategyAlias];\r\n    if (value && isUnique(strategyAlias, value, sourceXML)) {\r\n      res[strategy] = attributes[strategyAlias];\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\nexport const SCREENSHOT_INTERACTION_MODE = {\r\n  SELECT: 'select',\r\n  SWIPE: 'swipe',\r\n  TAP: 'tap',\r\n};\r\n\r\nexport const actionArgTypes = {\r\n  STRING: 'string',\r\n  NUMBER: 'number',\r\n};\r\n\r\nconst { STRING, NUMBER } = actionArgTypes;\r\n\r\n// Note: When adding or removing actionDefinitions, update `en/translation.json`\r\nexport const actionDefinitions = {\r\n  'Device': {\r\n    'Execute Mobile': {\r\n      'Execute': {methodName: 'execute', args: [['command', STRING], ['jsonArgument', STRING]]}\r\n    },\r\n    'Android Activity': {\r\n      'Start Activity': {methodName: 'startActivity', args: [\r\n        ['appPackage', STRING], ['appActivity', STRING], ['appWaitPackage', STRING],\r\n        ['intentAction', STRING], ['intentCategory', STRING], ['intentFlags', STRING],\r\n        ['optionalIntentArguments', STRING], ['dontStopAppOnReset', STRING],\r\n      ], refresh: true},\r\n      'Current Activity': {methodName: 'getCurrentActivity'},\r\n      'Current Package': {methodName: 'getCurrentPackage'},\r\n    },\r\n    'App': {\r\n      'Install App': {methodName: 'installAppOnDevice', args: [['appPathOrUrl', STRING]]},\r\n      'Is App Installed': {methodName: 'isAppInstalledOnDevice', args: [['appId', STRING]]},\r\n      'Launch App': {methodName: 'launchApp', refresh: true},\r\n      'Background App': {methodName: 'backgroundApp', args: [['timeout', NUMBER]], refresh: true},\r\n      'Close App': {methodName: 'closeApp', refresh: true},\r\n      'Reset App': {methodName: 'resetApp', refresh: true},\r\n      'Remove App': {methodName: 'removeAppFromDevice', args: [['bundleId', STRING]]},\r\n      'Get App Strings': {methodName: 'getAppStrings', args: [['language', STRING], ['stringFile', STRING]], refresh: true},\r\n    },\r\n    'Clipboard': {\r\n      'Get Clipboard': {methodName: 'getClipboard'},\r\n      'Set Clipboard': {methodName: 'setClipboard', args: [['clipboardText', STRING]]},\r\n    },\r\n    'File': {\r\n      'Push File': {methodName: 'pushFileToDevice', args: [['pathToInstallTo', STRING], ['fileContentString', STRING]]},\r\n      'Pull File': {methodName: 'pullFile', args: [['pathToPullFrom', STRING]]},\r\n      'Pull Folder': {methodName: 'pullFolder', args: [['folderToPullFrom', STRING]]},\r\n    },\r\n    'Interaction': {\r\n      'Shake': {methodName: 'shake'},\r\n      'Lock': {methodName: 'lock', args: [['seconds', NUMBER]], refresh: true},\r\n      'Unlock': {methodName: 'unlock', refresh: true},\r\n      'Is Device Locked': {methodName: 'isLocked'},\r\n      'Rotate Device': {methodName: 'rotateDevice', args: [\r\n        ['x', NUMBER], ['y', NUMBER], ['radius', NUMBER], ['rotatation', NUMBER], ['touchCount', NUMBER], ['duration', NUMBER]\r\n      ], refresh: true},\r\n    },\r\n    'Keys': {\r\n      'Press Key': {methodName: 'pressKeycode', args: [['keyCode', NUMBER], ['metaState', NUMBER], ['flags', NUMBER]], refresh: true},\r\n      'Long Press Key': {methodName: 'longPressKeycode', args: [['keyCode', NUMBER], ['metaState', NUMBER], ['flags', NUMBER]], refresh: true},\r\n      'Hide Keyboard': {methodName: 'hideDeviceKeyboard', refresh: true},\r\n      'Is Keyboard Shown': {methodName: 'isKeyboardShown'},\r\n    },\r\n    'Network': {\r\n      'Toggle Airplane Mode': {methodName: 'toggleAirplaneMode'},\r\n      'Toggle Data': {methodName: 'toggleData'},\r\n      'Toggle WiFi': {methodName: 'toggleWiFi'},\r\n      'Toggle Location Services': {methodName: 'toggleLocationServices'},\r\n      'Send SMS': {methodName: 'sendSMS', args: [['phoneNumber', STRING], ['text', STRING]]},\r\n      'GSM Call': {methodName: 'gsmCall', args: [['phoneNumber', STRING], ['action', STRING]]},\r\n      'GSM Signal': {methodName: 'gsmSignal', args: [['signalStrengh', NUMBER]]},\r\n      'GSM Voice': {methodName: 'gsmVoice', args: [['state', STRING]]},\r\n    },\r\n    'Performance Data': {\r\n      'Get Data': {methodName: 'getPerformanceData', args: [['packageName', STRING], ['dataType', STRING], ['dataReadTimeout', NUMBER]]},\r\n      'Get Data Types': {methodName: 'getSupportedPerformanceDataTypes'},\r\n    },\r\n    'iOS Simulator': {\r\n      'Perform Touch Id': {methodName: 'performTouchId', args: [['match', STRING]], refresh: true},\r\n      'Toggle Touch Id Enrollment': {methodName: 'toggleTouchIdEnrollment', args: [['enroll', STRING]]},\r\n    },\r\n    'System': {\r\n      'Open Notifications': {methodName: 'openNotifications', refresh: true},\r\n      'Get System Time': {methodName: 'getDeviceTime'},\r\n      'Fingerprint (Android)': {methodName: 'fingerprint', args: [['fingerPrintId', NUMBER]], refresh: true}\r\n    },\r\n  },\r\n  'Session': {\r\n    'Session Capabilities': {\r\n      'Get Session Capabilities': {methodName: 'sessionCapabilities'}\r\n    },\r\n    'Timeouts': {\r\n      'Set Pageload Timeout': {methodName: 'setPageLoadTimeout', args: [['timeout', NUMBER]]},\r\n      'Set Script Timeout': {methodName: 'setAsyncScriptTimeout', args: [['timeout', NUMBER]]},\r\n      'Set Implicit Timeout': {methodName: 'setImplicitWaitTimeout', args: [['timeout', NUMBER]]},\r\n    },\r\n    'Orientation': {\r\n      'Get Orientation': {methodName: 'getOrientation'},\r\n      'Set Orientation': {methodName: 'setOrientation', args: [['orientation', STRING]], refresh: true},\r\n    },\r\n    'Geolocation': {\r\n      'Get Geolocation': {methodName: 'getGeoLocation'},\r\n      'Set Geolocation': {methodName: 'setGeoLocation', args: [['latitude', NUMBER], ['longitude', NUMBER], ['altitude', NUMBER]]},\r\n    },\r\n    'Logs': {\r\n      'Get Log Types': {methodName: 'logTypes'},\r\n      'Get Logs': {methodName: 'log', args: [['logType', STRING]]},\r\n    },\r\n    'Settings': {\r\n      'Update Settings': {methodName: 'updateSettings', args: [['settingsJson', STRING]]},\r\n      'Get Device Settings': {methodName: 'settings'},\r\n    },\r\n  },\r\n  'Web': {\r\n    'Navigation': {\r\n      'Go to URL': {methodName: 'get', args: [['url', STRING]], refresh: true},\r\n      'Get URL': {methodName: 'url'},\r\n      'Back': {methodName: 'back', refresh: true},\r\n      'Forward': {methodName: 'forward', refresh: true},\r\n      'Refresh': {methodName: 'refresh', refresh: true}\r\n    }\r\n  },\r\n  'Context': {\r\n    'Context': {\r\n      'Get Context': {methodName: 'currentContext'},\r\n      'Get All Context': {methodName: 'contexts'},\r\n      'Set Context': {methodName: 'context', args: [['contextRef', STRING]], refresh: true}\r\n    }\r\n  }\r\n};\r\n\r\nexport const INTERACTION_MODE = {\r\n  SOURCE: 'source',\r\n  ACTIONS: 'actions',\r\n};\r\n","import { ipcRenderer } from 'electron';\r\nimport { notification } from 'antd';\r\nimport { util } from 'appium-support';\r\nimport i18n from '../../configs/i18next.config.renderer';\r\nimport _ from 'lodash';\r\nimport { v4 as UUID } from 'uuid';\r\nimport Promise from 'bluebird';\r\n\r\nconst clientMethodPromises = {};\r\n\r\nexport function bindClient () {\r\n  /**\r\n   * When we hear back from the main process, resolve the promise\r\n   */\r\n  ipcRenderer.removeAllListeners('appium-client-command-response');\r\n  ipcRenderer.on('appium-client-command-response', (evt, resp) => {\r\n    // Rename 'id' to 'elementId'\r\n    let {res, methodName} = resp;\r\n\r\n    // Ignore empty objects\r\n    if (_.isObject(res) && _.isEmpty(res)) {\r\n      res = null;\r\n    }\r\n\r\n    const truncatedResult = _.truncate(JSON.stringify(res), {length: 2000});\r\n\r\n    if (util.hasValue(res) && !resp.ignoreResult) {\r\n      notification.success({\r\n        message: i18n.t('methodCallResult', {methodName}),\r\n        description: i18n.t('commandWasReturnedWithResult', {result: truncatedResult}),\r\n        duration: 15,\r\n      });\r\n    }\r\n    resp.elementId = resp.id;\r\n    let promise = clientMethodPromises[resp.uuid];\r\n    if (promise) {\r\n      promise.resolve(resp);\r\n      delete clientMethodPromises[resp.uuid];\r\n    }\r\n  });\r\n\r\n  /**\r\n   * If we hear back with an error, reject the promise\r\n   */\r\n  ipcRenderer.on('appium-client-command-response-error', (evt, resp) => {\r\n    let {e, uuid} = resp;\r\n    e = JSON.parse(e);\r\n    let promise = clientMethodPromises[uuid];\r\n    if (promise) {\r\n      promise.reject(e);\r\n      delete clientMethodPromises[uuid];\r\n    }\r\n  });\r\n}\r\n\r\nexport function unbindClient () {\r\n  ipcRenderer.removeAllListeners('appium-client-command-response');\r\n  ipcRenderer.removeAllListeners('appium-client-command-response-error');\r\n}\r\n\r\nexport function callClientMethod (params) {\r\n  if (!ipcRenderer) {\r\n    throw new Error('Cannot call ipcRenderer from main context');\r\n  }\r\n  let uuid = UUID();\r\n  let promise = new Promise((resolve, reject) => clientMethodPromises[uuid] = {resolve, reject});\r\n  ipcRenderer.send('appium-client-command-request', {\r\n    ...params,\r\n    uuid,\r\n  });\r\n  return promise;\r\n}","export default class Framework {\r\n\r\n  constructor (host, port, path, https, caps) {\r\n    this.host = host || 'localhost';\r\n    this.port = port || 4723;\r\n    this.path = path || '/wd/hub';\r\n    this.caps = caps || {};\r\n    this.https = !!https;\r\n    this.scheme = https ? 'https' : 'http';\r\n    this.actions = [];\r\n    this.localVarCount = 0;\r\n    this.localVarCache = {};\r\n    this.lastAssignedVar = null;\r\n  }\r\n\r\n  get serverUrl () {\r\n    return `${this.scheme}://${this.host}:${this.port}${this.path}`;\r\n  }\r\n\r\n  get name () {\r\n    throw new Error('Must implement name getter');\r\n  }\r\n\r\n  get language () {\r\n    throw new Error('Must implement language getter');\r\n  }\r\n\r\n  addAction (action, params) {\r\n    this.actions.push({action, params});\r\n  }\r\n\r\n  wrapWithBoilerplate () {\r\n    throw new Error('Must implement wrapWithBoilerplate');\r\n  }\r\n\r\n  indent (str, spaces) {\r\n    let lines = str.split('\\n');\r\n    let spaceStr = '';\r\n    for (let i = 0; i < spaces; i++) {\r\n      spaceStr += ' ';\r\n    }\r\n    return lines\r\n      .filter((l) => !!l.trim())\r\n      .map((l) => `${spaceStr}${l}`)\r\n      .join('\\n');\r\n  }\r\n\r\n  getCodeString (includeBoilerplate = false) {\r\n    let str = '';\r\n    for (let {action, params} of this.actions) {\r\n      let genCodeFn = `codeFor_${action}`;\r\n      if (!this[genCodeFn]) {\r\n        throw new Error(`Need to implement 'codeFor_${action}()'`);\r\n      }\r\n      let code = this[genCodeFn](...params);\r\n      if (code) {\r\n        str += `${code}\\n`;\r\n      }\r\n    }\r\n    if (includeBoilerplate) {\r\n      return this.wrapWithBoilerplate(str);\r\n    }\r\n    return str;\r\n  }\r\n\r\n  getNewLocalVar () {\r\n    this.localVarCount++;\r\n    return `el${this.localVarCount}`;\r\n  }\r\n\r\n  getVarForFind (strategy, locator) {\r\n    const key = `${strategy}-${locator}`;\r\n    let wasNew = false;\r\n    if (!this.localVarCache[key]) {\r\n      this.localVarCache[key] = this.getNewLocalVar();\r\n      wasNew = true;\r\n    }\r\n    this.lastAssignedVar = this.localVarCache[key];\r\n    return [this.localVarCache[key], wasNew];\r\n  }\r\n\r\n  getVarName (varName, varIndex) {\r\n    if (varIndex || varIndex === 0) {\r\n      return `${varName}[${varIndex}]`;\r\n    }\r\n    return varName;\r\n  }\r\n\r\n  codeFor_findAndAssign () {\r\n    throw new Error('Need to implement codeFor_findAndAssign');\r\n  }\r\n\r\n  codeFor_findElement (strategy, locator) {\r\n    let [localVar, wasNew] = this.getVarForFind(strategy, locator);\r\n    if (!wasNew) {\r\n      // if we've already found this element, don't print out\r\n      // finding it again\r\n      return '';\r\n    }\r\n\r\n    return this.codeFor_findAndAssign(strategy, locator, localVar);\r\n\r\n  }\r\n\r\n  codeFor_tap () {\r\n    throw new Error('Need to implement codeFor_tap');\r\n  }\r\n\r\n  codeFor_swipe () {\r\n    throw new Error('Need to implement codeFor_tap');\r\n  }\r\n}\r\n","import Framework from './framework';\r\n\r\nclass JsWdFramework extends Framework {\r\n\r\n  get language () {\r\n    return 'js';\r\n  }\r\n\r\n  wrapWithBoilerplate (code) {\r\n    let caps = JSON.stringify(this.caps);\r\n    return `// Requires the admc/wd client library\r\n// (npm install wd)\r\n// Then paste this into a .js file and run with Node 7.6+\r\n\r\nconst wd = require('wd');\r\nconst driver = wd.promiseChainRemote(\"${this.serverUrl}\");\r\nconst caps = ${caps};\r\n\r\nasync function main () {\r\n  await driver.init(caps);\r\n${this.indent(code, 2)}\r\n  await driver.quit();\r\n}\r\n\r\nmain().catch(console.log);\r\n`;\r\n  }\r\n\r\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\r\n    let suffixMap = {\r\n      xpath: 'XPath',\r\n      'accessibility id': 'AccessibilityId',\r\n      'id': 'Id',\r\n      'name': 'Name',\r\n      'class name': 'ClassName',\r\n      '-android uiautomator': 'AndroidUIAutomator',\r\n      '-android datamatcher': 'AndroidDataMatcher',\r\n      '-android viewtag': 'unsupported',\r\n      '-ios predicate string': 'IosUIAutomation',\r\n      '-ios class chain': 'IosClassChain',\r\n    };\r\n    if (!suffixMap[strategy]) {\r\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\r\n    }\r\n    if (isArray) {\r\n      return `let ${localVar} = await driver.elementsBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\r\n    } else {\r\n      return `let ${localVar} = await driver.elementBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\r\n    }\r\n  }\r\n\r\n  codeFor_click (varName, varIndex) {\r\n    return `await ${this.getVarName(varName, varIndex)}.click();`;\r\n  }\r\n\r\n  codeFor_clear (varName, varIndex) {\r\n    return `await ${this.getVarName(varName, varIndex)}.clear();`;\r\n  }\r\n\r\n  codeFor_sendKeys (varName, varIndex, text) {\r\n    return `await ${this.getVarName(varName, varIndex)}.sendKeys(${JSON.stringify(text)});`;\r\n  }\r\n\r\n  codeFor_back () {\r\n    return `await driver.back();`;\r\n  }\r\n\r\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\r\n    return `await (new wd.TouchAction(driver))\r\n  .tap({x: ${x}, y: ${y}})\r\n  .perform()\r\n    `;\r\n  }\r\n\r\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\r\n    return `await (new wd.TouchAction(driver))\r\n  .press({x: ${x1}, y: ${y1}})\r\n  .moveTo({x: ${x2}, y: ${y2}})\r\n  .release()\r\n  .perform()\r\n    `;\r\n  }\r\n\r\n  codeFor_getCurrentActivity () {\r\n    return `let activityName = await driver.getCurrentActivity()`;\r\n  }\r\n\r\n  codeFor_getCurrentPackage () {\r\n    return `let packageName = await driver.getCurrentPackage()`;\r\n  }\r\n\r\n\r\n  codeFor_installAppOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `let isAppInstalled = await driver.installAppOnDevice('${app}');`;\r\n  }\r\n\r\n  codeFor_isAppInstalledOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `driver.isAppInstalled(\"${app}\");`;\r\n  }\r\n\r\n  codeFor_launchApp () {\r\n    return `await driver.launchApp();`;\r\n  }\r\n\r\n  codeFor_backgroundApp (varNameIgnore, varIndexIgnore, timeout) {\r\n    return `await driver.backgroundApp(${timeout});`;\r\n  }\r\n\r\n  codeFor_closeApp () {\r\n    return `await driver.closeApp();`;\r\n  }\r\n\r\n  codeFor_resetApp () {\r\n    return `await driver.resetApp();`;\r\n  }\r\n\r\n  codeFor_removeAppFromDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `await driver.removeAppFromDevice('${app}');`;\r\n  }\r\n\r\n  codeFor_getAppStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\r\n    return `let appStrings = await driver.getAppStrings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\r\n  }\r\n\r\n  codeFor_getClipboard () {\r\n    return `let clipboardText = await driver.getClipboard();`;\r\n  }\r\n\r\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\r\n    return `await driver.setClipboard('${clipboardText}')`;\r\n  }\r\n\r\n  codeFor_pressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_longPressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_hideDeviceKeyboard () {\r\n    return `await driver.hideDeviceKeyboard();`;\r\n  }\r\n\r\n  codeFor_isKeyboardShown () {\r\n    return `await driver.isKeyboardShown();`;\r\n  }\r\n\r\n  codeFor_pushFileToDevice (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\r\n    return `await driver.pushFileToDevice('${pathToInstallTo}', '${fileContentString}');`;\r\n  }\r\n\r\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\r\n    return `let fileBase64 = await driver.pullFile('${pathToPullFrom}');`;\r\n  }\r\n\r\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\r\n    return `let fileBase64 = await driver.pullFolder('${folderToPullFrom}');`;\r\n  }\r\n\r\n  codeFor_toggleAirplaneMode () {\r\n    return `await driver.toggleAirplaneMode();`;\r\n  }\r\n\r\n  codeFor_toggleData () {\r\n    return `await driver.toggleData();`;\r\n  }\r\n\r\n  codeFor_toggleWiFi () {\r\n    return `await driver.toggleWiFi();`;\r\n  }\r\n\r\n  codeFor_toggleLocationServices () {\r\n    return `await driver.toggleLocationServices();`;\r\n  }\r\n\r\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\r\n    return `await driver.sendSms('${phoneNumber}', '${text}');`;\r\n  }\r\n\r\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\r\n    return `await driver.gsmCall('${phoneNumber}', '${action}');`;\r\n  }\r\n\r\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\r\n    return `await driver.gsmSignal(${signalStrength});`;\r\n  }\r\n\r\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\r\n    return `await driver.gsmVoice('${state}');`;\r\n  }\r\n\r\n  codeFor_shake () {\r\n    return `await driver.shake();`;\r\n  }\r\n\r\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\r\n    return `await driver.lock(${seconds})`;\r\n  }\r\n\r\n  codeFor_unlock () {\r\n    return `await driver.unlock()`;\r\n  }\r\n\r\n  codeFor_isLocked () {\r\n    return `let isLocked = await driver.isLocked();`;\r\n  }\r\n\r\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\r\n    return `driver.rotateDevice({x: ${x}, y: ${y}, duration: ${duration}, radius: ${radius}, rotation: ${rotation}, touchCount: ${touchCount}});`;\r\n  }\r\n\r\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\r\n    return `let performanceData = await driver.getPerformanceData('${packageName}', '${dataType}', ${dataReadTimeout});`;\r\n  }\r\n\r\n  codeFor_getSupportedPerformanceDataTypes () {\r\n    return `let supportedPerformanceDataTypes = await driver.getSupportedPerformanceDataTypes();`;\r\n  }\r\n\r\n  codeFor_performTouchId (varNameIgnore, varIndexIgnore, match) {\r\n    return `await driver.touchId(${match});`;\r\n  }\r\n\r\n  codeFor_toggleTouchIdEnrollment (varNameIgnore, varIndexIgnore, enroll) {\r\n    return `await driver.toggleTouchIdEnrollment(${enroll});`;\r\n  }\r\n\r\n  codeFor_openNotifications () {\r\n    return `await driver.openNotifications();`;\r\n  }\r\n\r\n  codeFor_getDeviceTime () {\r\n    return `let time = await driver.getDeviceTime();`;\r\n  }\r\n\r\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\r\n    return `await driver.fingerprint(${fingerprintId});`;\r\n  }\r\n\r\n  codeFor_sessionCapabilities () {\r\n    return `let caps = await driver.sessionCapabilities();`;\r\n  }\r\n\r\n  codeFor_setPageLoadTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `await setPageLoadTimeout(${ms})`;\r\n  }\r\n\r\n  codeFor_setAsyncScriptTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `await setAsyncScriptTimeout(${ms})`;\r\n  }\r\n\r\n  codeFor_setImplicitWaitTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `await setImplicitWaitTimeout(${ms})`;\r\n  }\r\n\r\n  codeFor_getOrientation () {\r\n    return `let orientation = await driver.getOrientation();`;\r\n  }\r\n\r\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\r\n    return `await driver.setOrientation('${orientation}');`;\r\n  }\r\n\r\n  codeFor_getGeoLocation () {\r\n    return `let location = await driver.getGeoLocation();`;\r\n  }\r\n\r\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\r\n    return `await driver.setGeoLocation(${latitude}, ${longitude}, ${altitude});`;\r\n  }\r\n\r\n  codeFor_logTypes () {\r\n    return `let logTypes = await driver.logTypes();`;\r\n  }\r\n\r\n  codeFor_log (varNameIgnore, varIndexIgnore, logType) {\r\n    return `let logs = await driver.log('${logType}');`;\r\n  }\r\n\r\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\r\n    return `await driver.updateSettings(${settingsJson});`;\r\n  }\r\n\r\n  codeFor_settings () {\r\n    return `let settings = await driver.settings();`;\r\n  }\r\n\r\n  // Web\r\n\r\n  codeFor_get (url) {\r\n    return `driver.get('${url}');`;\r\n  }\r\n\r\n  codeFor_url () {\r\n    return `let current_url = driver.url();`;\r\n  }\r\n\r\n  codeFor_forward () {\r\n    return `driver.forward();`;\r\n  }\r\n\r\n  codeFor_refresh () {\r\n    return `driver.refresh();`;\r\n  }\r\n\r\n  // Context\r\n\r\n  codeFor_currentContext () {\r\n    return `driver.currentContext();`;\r\n  }\r\n\r\n  codeFor_contexts () {\r\n    return `driver.contexts();`;\r\n  }\r\n\r\n  codeFor_context (name) {\r\n    return `driver.context('${name}');`;\r\n  }\r\n}\r\n\r\nJsWdFramework.readableName = 'JS - WD (Promise)';\r\n\r\nexport default JsWdFramework;\r\n","import Framework from './framework';\r\n\r\nclass JsWdIoFramework extends Framework {\r\n\r\n  get language () {\r\n    return 'js';\r\n  }\r\n\r\n  chainifyCode (code) {\r\n    return code\r\n      .replace(/let .+ = /g, '')\r\n      .replace(/(\\n|^)(driver|el[0-9]+)\\./g, '\\n.')\r\n      .replace(/;\\n/g, '\\n');\r\n  }\r\n\r\n  wrapWithBoilerplate (code) {\r\n    let host = JSON.stringify(this.host);\r\n    let caps = JSON.stringify(this.caps);\r\n    let proto = JSON.stringify(this.scheme);\r\n    let path = JSON.stringify(this.path);\r\n    return `// Requires the webdriverio client library\r\n// (npm install webdriverio)\r\n// Then paste this into a .js file and run with Node:\r\n// node <file>.js\r\n\r\nconst wdio = require('webdriverio');\r\nconst caps = ${caps};\r\nconst driver = wdio.remote({\r\n  protocol: ${proto},\r\n  host: ${host},\r\n  port: ${this.port},\r\n  path: ${path},\r\n  desiredCapabilities: caps\r\n});\r\n\r\ndriver.init()\r\n${this.indent(this.chainifyCode(code), 2)}\r\n  .end();\r\n`;\r\n  }\r\n\r\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\r\n    // wdio has its own way of indicating the strategy in the locator string\r\n    switch (strategy) {\r\n      case 'xpath': break; // xpath does not need to be updated\r\n      case 'accessibility id': locator = `~${locator}`; break;\r\n      case 'id': locator = `${locator}`; break;\r\n      case 'name': locator = `name=${locator}`; break;\r\n      case 'class name': locator = `${locator}`; break;\r\n      case '-android uiautomator': locator = `android=${locator}`; break;\r\n      case '-android datamatcher': locator = `android=${locator}`; break;\r\n      case '-android viewtag': locator = `android=unsupported`; break;\r\n      case '-ios predicate string': locator = `ios=${locator}`; break;\r\n      case '-ios class chain': locator = `ios=${locator}`; break; // TODO: Handle IOS class chain properly. Not all libs support it. Or take it out\r\n      default: throw new Error(`Can't handle strategy ${strategy}`);\r\n    }\r\n    if (isArray) {\r\n      return `let ${localVar} = driver.elements(${JSON.stringify(locator)});`;\r\n    } else {\r\n      return `let ${localVar} = driver.element(${JSON.stringify(locator)});`;\r\n    }\r\n  }\r\n\r\n  codeFor_click (varName, varIndex) {\r\n    return `${this.getVarName(varName, varIndex)}.click();`;\r\n  }\r\n\r\n  codeFor_clear (varName, varIndex) {\r\n    return `${this.getVarName(varName, varIndex)}.clearElement();`;\r\n  }\r\n\r\n  codeFor_sendKeys (varName, varIndex, text) {\r\n    return `${this.getVarName(varName, varIndex)}.setValue(${JSON.stringify(text)});`;\r\n  }\r\n\r\n  codeFor_back () {\r\n    return `driver.back();`;\r\n  }\r\n\r\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\r\n    return `driver.touchAction({actions: 'tap', x: ${x}, y: ${y}})`;\r\n  }\r\n\r\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\r\n    return `driver.touchAction([\r\n  {action: 'press', x: ${x1}, y: ${y1}},\r\n  {action: 'moveTo', x: ${x2}, y: ${y2}},\r\n  'release'\r\n]);`;\r\n  }\r\n\r\n  codeFor_getCurrentActivity () {\r\n    return `let activityName = await driver.currentActivity();`;\r\n  }\r\n\r\n  codeFor_getCurrentPackage () {\r\n    return `let packageName = await driver.currentPackage();`;\r\n  }\r\n\r\n\r\n  codeFor_installAppOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `await driver.installApp('${app}');`;\r\n  }\r\n\r\n  codeFor_isAppInstalledOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `let isAppInstalled = await driver.isAppInstalled(\"${app}\");`;\r\n  }\r\n\r\n  codeFor_launchApp () {\r\n    return `await driver.launch();`;\r\n  }\r\n\r\n  codeFor_backgroundApp (varNameIgnore, varIndexIgnore, timeout) {\r\n    return `await driver.background(${timeout});`;\r\n  }\r\n\r\n  codeFor_closeApp () {\r\n    return `await driver.close_app();`;\r\n  }\r\n\r\n  codeFor_resetApp () {\r\n    return `await driver.reset();`;\r\n  }\r\n\r\n  codeFor_removeAppFromDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `await driver.removeApp('${app}')`;\r\n  }\r\n\r\n  codeFor_getAppStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\r\n    return `let appStrings = await driver.getAppStrings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\r\n  }\r\n\r\n  codeFor_getClipboard () {\r\n    return `let clipboardText = await driver.getClipboard();`;\r\n  }\r\n\r\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\r\n    return `await driver.setClipboard('${clipboardText}')`;\r\n  }\r\n\r\n  codeFor_pressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_longPressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `await driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_hideDeviceKeyboard () {\r\n    return `await driver.hideDeviceKeyboard();`;\r\n  }\r\n\r\n  codeFor_isKeyboardShown () {\r\n    return `await driver.isKeyboardShown();`;\r\n  }\r\n\r\n  codeFor_pushFileToDevice (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\r\n    return `await driver.pushFile('${pathToInstallTo}', '${fileContentString}');`;\r\n  }\r\n\r\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\r\n    return `let data = await driver.pullFile('${pathToPullFrom}');`;\r\n  }\r\n\r\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\r\n    return `let data = await driver.pullFolder('${folderToPullFrom}');`;\r\n  }\r\n\r\n  codeFor_toggleAirplaneMode () {\r\n    return `await driver.toggleAirplaneMode();`;\r\n  }\r\n\r\n  codeFor_toggleData () {\r\n    return `await driver.toggleData();`;\r\n  }\r\n\r\n  codeFor_toggleWiFi () {\r\n    return `await driver.toggleWiFi();`;\r\n  }\r\n\r\n  codeFor_toggleLocationServices () {\r\n    return `await driver.toggleLocationServices();`;\r\n  }\r\n\r\n  codeFor_sendSMS () {\r\n    return `// Not supported: sendSms;`;\r\n  }\r\n\r\n  codeFor_gsmCall () {\r\n    return `// Not supported: gsmCall`;\r\n  }\r\n\r\n  codeFor_gsmSignal () {\r\n    return `// Not supported: gsmSignal`;\r\n  }\r\n\r\n  codeFor_gsmVoice () {\r\n    return `// Not supported: gsmVoice`;\r\n  }\r\n\r\n  codeFor_shake () {\r\n    return `await driver.shake();`;\r\n  }\r\n\r\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\r\n    return `await driver.lock(${seconds});`;\r\n  }\r\n\r\n  codeFor_unlock () {\r\n    return `await driver.unlock();`;\r\n  }\r\n\r\n  codeFor_isLocked () {\r\n    return `let isLocked = await driver.isLocked();`;\r\n  }\r\n\r\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\r\n    return `driver.rotate(${x}, ${y}, ${radius}, ${rotation}, ${touchCount}, ${duration});`;\r\n  }\r\n\r\n  codeFor_getPerformanceData () {\r\n    return `// Not supported: getPerformanceData`;\r\n  }\r\n\r\n  codeFor_getSupportedPerformanceDataTypes () {\r\n    return `// Not supported: getSupportedPerformanceDataTypes`;\r\n  }\r\n\r\n  codeFor_performTouchId (varNameIgnore, varIndexIgnore, match) {\r\n    return `await driver.touchId(${match});`;\r\n  }\r\n\r\n  codeFor_toggleTouchIdEnrollment (varNameIgnore, varIndexIgnore, enroll) {\r\n    return `await driver.toggleTouchIdEnrollment(${enroll});`;\r\n  }\r\n\r\n  codeFor_openNotifications () {\r\n    return `await driver.openNotifications();`;\r\n  }\r\n\r\n  codeFor_getDeviceTime () {\r\n    return `let time = await driver.getDeviceTime();`;\r\n  }\r\n\r\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\r\n    return `await driver.fingerprint(${fingerprintId});`;\r\n  }\r\n\r\n  codeFor_sessionCapabilities () {\r\n    return `let caps = await driver.session('c8db88a0-47a6-47a1-802d-164d746c06aa');`;\r\n  }\r\n\r\n  codeFor_setPageLoadTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `await driver.timeouts('page load', ${ms})`;\r\n  }\r\n\r\n  codeFor_setAsyncScriptTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `await driver.timeouts('script', ${ms})`;\r\n  }\r\n\r\n  codeFor_setImplicitWaitTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `await driver.timeouts('implicit', ${ms})`;\r\n  }\r\n\r\n  codeFor_setCommandTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `await driver.timeouts('command', ${ms})`;\r\n  }\r\n\r\n  codeFor_getOrientation () {\r\n    return `let orientation = await driver.orientation();`;\r\n  }\r\n\r\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\r\n    return `driver.orientation(\"${orientation}\");`;\r\n  }\r\n\r\n  codeFor_getGeoLocation () {\r\n    return `let location = await driver.location();`;\r\n  }\r\n\r\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\r\n    return `await driver.location({latitude: ${latitude}, longitude: ${longitude}, altitude: ${altitude}});`;\r\n  }\r\n\r\n  codeFor_logTypes () {\r\n    return `let logTypes = await driver.log();`;\r\n  }\r\n\r\n  codeFor_log (varNameIgnore, varIndexIgnore, logType) {\r\n    return `let logs = await driver.log('${logType}');`;\r\n  }\r\n\r\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\r\n    return `await driver.settings(${settingsJson});`;\r\n  }\r\n\r\n  codeFor_settings () {\r\n    return `let settings = await driver.settings();`;\r\n  }\r\n\r\n  // Web\r\n\r\n  codeFor_get (url) {\r\n    return `driver.navigateTo('${url}');`;\r\n  }\r\n\r\n  codeFor_url () {\r\n    return `let current_url = driver.getUrl();`;\r\n  }\r\n\r\n  codeFor_forward () {\r\n    return `driver.forward();`;\r\n  }\r\n\r\n  codeFor_refresh () {\r\n    return `driver.refresh();`;\r\n  }\r\n\r\n  // Context\r\n\r\n  codeFor_currentContext () {\r\n    return `let context = driver.getContext();`;\r\n  }\r\n\r\n  codeFor_contexts () {\r\n    return `driver.getContexts();`;\r\n  }\r\n\r\n  codeFor_context (name) {\r\n    return `driver.switchContext('${name}');`;\r\n  }\r\n}\r\n\r\nJsWdIoFramework.readableName = 'JS - Webdriver.io';\r\n\r\nexport default JsWdIoFramework;\r\n","import Framework from './framework';\r\n\r\nclass JsOxygenFramework extends Framework {\r\n\r\n  get language () {\r\n    return 'js';\r\n  }\r\n\r\n  wrapWithBoilerplate (code) {\r\n    let caps = JSON.stringify(this.caps);\r\n    let url = JSON.stringify(`${this.scheme}://${this.host}:${this.port}${this.path}`);\r\n    return `// Requires the Oxygen HQ client library\r\n// (npm install oxygen-cli -g)\r\n// Then paste this into a .js file and run with:\r\n// oxygen <file>.js\r\n\r\nmob.init(${caps}, ${url});\r\n\r\n${code}\r\n\r\n`;\r\n  }\r\n\r\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\r\n    // wdio has its own way of indicating the strategy in the locator string\r\n    switch (strategy) {\r\n      case 'xpath': break; // xpath does not need to be updated\r\n      case 'accessibility id': locator = `~${locator}`; break;\r\n      case 'id': locator = `id=${locator}`; break;\r\n      case 'name': locator = `name=${locator}`; break;\r\n      case 'class name': locator = `css=${locator}`; break;\r\n      case '-android uiautomator': locator = `android=${locator}`; break;\r\n      case '-android datamatcher': locator = `android=${locator}`; break;\r\n      case '-ios predicate string': locator = `ios=${locator}`; break;\r\n      case '-ios class chain': locator = `ios=${locator}`; break; // TODO: Handle IOS class chain properly. Not all libs support it. Or take it out\r\n      default: throw new Error(`Can't handle strategy ${strategy}`);\r\n    }\r\n    if (isArray) {\r\n      return `let ${localVar} = mob.findElements(${JSON.stringify(locator)});`;\r\n    } else {\r\n      return `let ${localVar} = mob.findElement(${JSON.stringify(locator)});`;\r\n    }\r\n  }\r\n\r\n  codeFor_click (varName, varIndex) {\r\n    return `mob.click(${this.getVarName(varName, varIndex)});`;\r\n  }\r\n\r\n  codeFor_clear (varName, varIndex) {\r\n    return `mob.clear(${this.getVarName(varName, varIndex)});`;\r\n  }\r\n\r\n  codeFor_sendKeys (varName, varIndex, text) {\r\n    return `mob.type(${this.getVarName(varName, varIndex)}, ${JSON.stringify(text)});`;\r\n  }\r\n\r\n  codeFor_back () {\r\n    return `mob.back();`;\r\n  }\r\n\r\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\r\n    return `mob.tap(${x}, ${y});`;\r\n  }\r\n\r\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\r\n    return `mob.swipeScreen(${x1}, ${y1}, ${x2}, ${y2});`;\r\n  }\r\n\r\n  codeFor_getCurrentActivity () {\r\n    return `let activityName = mob.getCurrentActivity();`;\r\n  }\r\n\r\n  codeFor_getCurrentPackage () {\r\n    return `let packageName = mob.getCurrentPackage();`;\r\n  }\r\n\r\n  codeFor_installAppOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `mob.installApp('${app}');`;\r\n  }\r\n\r\n  codeFor_isAppInstalledOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `let isAppInstalled = mob.isAppInstalled(\"${app}\");`;\r\n  }\r\n\r\n  codeFor_launchApp () {\r\n    return `mob.launchApp();`;\r\n  }\r\n\r\n  codeFor_backgroundApp (varNameIgnore, varIndexIgnore, timeout) {\r\n    return `mob.driver().background(${timeout});`;\r\n  }\r\n\r\n  codeFor_closeApp () {\r\n    return `mob.closeApp();`;\r\n  }\r\n\r\n  codeFor_resetApp () {\r\n    return `mob.resetApp();`;\r\n  }\r\n\r\n  codeFor_removeAppFromDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `mob.removeApp('${app}')`;\r\n  }\r\n\r\n  codeFor_getAppStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\r\n    return `let appStrings = mob.driver().getAppStrings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\r\n  }\r\n\r\n  codeFor_getClipboard () {\r\n    return `let clipboardText = mob.driver().getClipboard();`;\r\n  }\r\n\r\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\r\n    return `mob.driver().setClipboard('${clipboardText}')`;\r\n  }\r\n\r\n  codeFor_pressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `mob.driver().longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_longPressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `mob.driver().longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_hideDeviceKeyboard () {\r\n    return `mob.driver().hideKeyboard();`;\r\n  }\r\n\r\n  codeFor_isKeyboardShown () {\r\n    return `//isKeyboardShown not supported`;\r\n  }\r\n\r\n  codeFor_pushFileToDevice (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\r\n    return `mob.driver().pushFile('${pathToInstallTo}', '${fileContentString}');`;\r\n  }\r\n\r\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\r\n    return `let data = mob.driver().pullFile('${pathToPullFrom}');`;\r\n  }\r\n\r\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\r\n    return `let data = mob.driver().pullFolder('${folderToPullFrom}');`;\r\n  }\r\n\r\n  codeFor_toggleAirplaneMode () {\r\n    return `mob.driver().toggleAirplaneMode();`;\r\n  }\r\n\r\n  codeFor_toggleData () {\r\n    return `mob.driver().toggleData();`;\r\n  }\r\n\r\n  codeFor_toggleWiFi () {\r\n    return `mob.driver().toggleWiFi();`;\r\n  }\r\n\r\n  codeFor_toggleLocationServices () {\r\n    return `mob.driver().toggleLocationServices();`;\r\n  }\r\n\r\n  codeFor_sendSMS () {\r\n    return `// Not supported: sendSms;`;\r\n  }\r\n\r\n  codeFor_gsmCall () {\r\n    return `// Not supported: gsmCall`;\r\n  }\r\n\r\n  codeFor_gsmSignal () {\r\n    return `// Not supported: gsmSignal`;\r\n  }\r\n\r\n  codeFor_gsmVoice () {\r\n    return `// Not supported: gsmVoice`;\r\n  }\r\n\r\n  codeFor_shake () {\r\n    return `mob.shake();`;\r\n  }\r\n\r\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\r\n    return `mob.driver().lock(${seconds});`;\r\n  }\r\n\r\n  codeFor_unlock () {\r\n    return `mob.driver().unlock();`;\r\n  }\r\n\r\n  codeFor_isLocked () {\r\n    return `let isLocked = mob.driver().isLocked();`;\r\n  }\r\n\r\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\r\n    return `mob.driver().rotateDevice(${x}, ${y}, ${radius}, ${rotation}, ${touchCount}, ${duration});`;\r\n  }\r\n\r\n  codeFor_getPerformanceData () {\r\n    return `// Not supported: getPerformanceData`;\r\n  }\r\n\r\n  codeFor_getSupportedPerformanceDataTypes () {\r\n    return `// Not supported: getSupportedPerformanceDataTypes`;\r\n  }\r\n\r\n  codeFor_performTouchId (varNameIgnore, varIndexIgnore, match) {\r\n    return `mob.driver().touchId(${match});`;\r\n  }\r\n\r\n  codeFor_toggleTouchIdEnrollment (varNameIgnore, varIndexIgnore, enroll) {\r\n    return `mob.driver().toggleEnrollTouchId(${enroll});`;\r\n  }\r\n\r\n  codeFor_openNotifications () {\r\n    return `mob.driver().openNotifications();`;\r\n  }\r\n\r\n  codeFor_getDeviceTime () {\r\n    return `let time = mob.getDeviceTime();`;\r\n  }\r\n\r\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\r\n    return `mob.driver().fingerPrint(${fingerprintId});`;\r\n  }\r\n\r\n  codeFor_sessionCapabilities () {\r\n    return `let caps = mob.driver().capabilities;`;\r\n  }\r\n\r\n  codeFor_setPageLoadTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `mob.driver().setTimeout({'pageLoad': ${ms}});`;\r\n  }\r\n\r\n  codeFor_setAsyncScriptTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `mob.driver().setTimeout({'script': ${ms}});`;\r\n  }\r\n\r\n  codeFor_setImplicitWaitTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `mob.driver().setTimeout({'implicit': ${ms}});`;\r\n  }\r\n\r\n  codeFor_setCommandTimeout () {\r\n    return `// Not supported: setCommandTimeout`;\r\n  }\r\n\r\n  codeFor_getOrientation () {\r\n    return `let orientation = mob.driver().getOrientation();`;\r\n  }\r\n\r\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\r\n    return `mob.driver().setOrientation(\"${orientation}\");`;\r\n  }\r\n\r\n  codeFor_getGeoLocation () {\r\n    return `let location = mob.driver().getGeoLocation();`;\r\n  }\r\n\r\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\r\n    return `mob.driver().setGeoLocation({latitude: ${latitude}, longitude: ${longitude}, altitude: ${altitude}});`;\r\n  }\r\n\r\n  codeFor_logTypes () {\r\n    return `let logTypes = mob.driver().getLogTypes();`;\r\n  }\r\n\r\n  codeFor_log (varNameIgnore, varIndexIgnore, logType) {\r\n    return `let logs = mob.driver().getLogs('${logType}');`;\r\n  }\r\n\r\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\r\n    return `mob.driver().updateSettings(${settingsJson});`;\r\n  }\r\n\r\n  codeFor_settings () {\r\n    return `let settings = mob.driver().getSettings();`;\r\n  }\r\n}\r\n\r\nJsOxygenFramework.readableName = 'JS - Oxygen HQ';\r\n\r\nexport default JsOxygenFramework;\r\n","import Framework from './framework';\r\nimport _ from 'lodash';\r\n\r\nclass JavaFramework extends Framework {\r\n\r\n  get language () {\r\n    return 'java';\r\n  }\r\n\r\n  wrapWithBoilerplate (code) {\r\n    let [pkg, cls] = (() => {\r\n      if (this.caps.platformName) {\r\n        switch (this.caps.platformName.toLowerCase()) {\r\n          case 'ios': return ['ios', 'IOSDriver'];\r\n          case 'android': return ['android', 'AndroidDriver'];\r\n          default: return ['unknownPlatform', 'UnknownDriver'];\r\n        }\r\n      } else {\r\n        return ['unknownPlatform', 'UnknownDriver'];\r\n      }\r\n    })();\r\n    let capStr = this.indent(Object.keys(this.caps).map((k) => `desiredCapabilities.setCapability(${JSON.stringify(k)}, ${JSON.stringify(this.caps[k])});`).join('\\n'), 4);\r\n    return `import io.appium.java_client.MobileElement;\r\nimport io.appium.java_client.${pkg}.${cls};\r\nimport junit.framework.TestCase;\r\nimport org.junit.After;\r\nimport org.junit.Before;\r\nimport org.junit.Test;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\n\r\npublic class SampleTest {\r\n\r\n  private ${cls} driver;\r\n\r\n  @Before\r\n  public void setUp() throws MalformedURLException {\r\n    DesiredCapabilities desiredCapabilities = new DesiredCapabilities();\r\n${capStr}\r\n\r\n    URL remoteUrl = new URL(\"${this.serverUrl}\");\r\n\r\n    driver = new ${cls}(remoteUrl, desiredCapabilities);\r\n  }\r\n\r\n  @Test\r\n  public void sampleTest() {\r\n${this.indent(code, 4)}\r\n  }\r\n\r\n  @After\r\n  public void tearDown() {\r\n    driver.quit();\r\n  }\r\n}\r\n`;\r\n  }\r\n\r\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\r\n    let suffixMap = {\r\n      xpath: 'XPath',\r\n      'accessibility id': 'AccessibilityId',\r\n      'id': 'Id',\r\n      'class name': 'ClassName',\r\n      'name': 'Name',\r\n      '-android uiautomator': 'AndroidUIAutomator',\r\n      '-android datamatcher': 'AndroidDataMatcher',\r\n      '-android viewtag': 'AndroidViewTag',\r\n      '-ios predicate string': 'IosNsPredicate',\r\n      '-ios class chain': 'IosClassChain',\r\n    };\r\n    if (!suffixMap[strategy]) {\r\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\r\n    }\r\n    if (isArray) {\r\n      return `List<MobileElement> ${localVar} = (MobileElement) driver.findElementsBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\r\n    } else {\r\n      return `MobileElement ${localVar} = (MobileElement) driver.findElementBy${suffixMap[strategy]}(${JSON.stringify(locator)});`;\r\n    }\r\n  }\r\n\r\n  getVarName (varName, varIndex) {\r\n    if (varIndex || varIndex === 0) {\r\n      return `${varName}.get(${varIndex})`;\r\n    }\r\n    return varName;\r\n  }\r\n\r\n  codeFor_click (varName, varIndex) {\r\n    return `${this.getVarName(varName, varIndex)}.click();`;\r\n  }\r\n\r\n  codeFor_clear (varName, varIndex) {\r\n    return `${this.getVarName(varName, varIndex)}.clear();`;\r\n  }\r\n\r\n  codeFor_sendKeys (varName, varIndex, text) {\r\n    return `${this.getVarName(varName, varIndex)}.sendKeys(${JSON.stringify(text)});`;\r\n  }\r\n\r\n  codeFor_back () {\r\n    return `driver.navigate().back();`;\r\n  }\r\n\r\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\r\n    return `(new TouchAction(driver)).tap(${x}, ${y}).perform()`;\r\n  }\r\n\r\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\r\n    return `(new TouchAction(driver))\r\n  .press({x: ${x1}, y: ${y1}})\r\n  .moveTo({x: ${x2}: y: ${y2}})\r\n  .release()\r\n  .perform()\r\n  `;\r\n  }\r\n\r\n  codeFor_getCurrentActivity () {\r\n    return `String activityName = driver.currentActivity()`;\r\n  }\r\n\r\n  codeFor_getCurrentPackage () {\r\n    return `String packageName = driver.currentPackage()`;\r\n  }\r\n\r\n  codeFor_startActivity () {\r\n    return `driver.`;\r\n  }\r\n\r\n  codeFor_installAppOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `driver.installApp(\"${app}\");`;\r\n  }\r\n\r\n  codeFor_isAppInstalledOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `boolean isAppInstalled = driver.isAppInstalled(\"${app}\");`;\r\n  }\r\n\r\n  codeFor_launchApp () {\r\n    return `driver.launchApp();`;\r\n  }\r\n\r\n  codeFor_backgroundApp (varNameIgnore, varIndexIgnore, timeout) {\r\n    return `driver.runAppInBackground(Duration.ofSeconds(${timeout}));`;\r\n  }\r\n\r\n  codeFor_closeApp () {\r\n    return `driver.closeApp();`;\r\n  }\r\n\r\n  codeFor_resetApp () {\r\n    return `driver.resetApp();`;\r\n  }\r\n\r\n  codeFor_removeAppFromDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `driver.removeApp(\"${app}\");`;\r\n  }\r\n\r\n  codeFor_getAppStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\r\n    return `Map<String, String> appStrings = driver.getAppStringMap(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''});`;\r\n  }\r\n\r\n  codeFor_getClipboard () {\r\n    return `String clipboardText = driver.getClipboardText();`;\r\n  }\r\n\r\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\r\n    return `driver.setClipboardText(\"${clipboardText}\");`;\r\n  }\r\n\r\n  codeFor_pressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `driver.pressKeyCode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_longPressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `driver.longPressKeyCode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_hideDeviceKeyboard () {\r\n    return `driver.hideKeyboard();`;\r\n  }\r\n\r\n  codeFor_isKeyboardShown () {\r\n    return `boolean isKeyboardShown = driver.isKeyboardShown();`;\r\n  }\r\n\r\n  codeFor_pushFileToDevice (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\r\n    return `driver.pushFile(\"${pathToInstallTo}\", ${fileContentString})`;\r\n  }\r\n\r\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\r\n    return `byte[] fileBase64 = driver.pullFile(\"${pathToPullFrom}\");`;\r\n  }\r\n\r\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\r\n    return `byte[] fileBase64 = driver.pullFolder(\"${folderToPullFrom}\");`;\r\n  }\r\n\r\n  codeFor_toggleAirplaneMode () {\r\n    return `driver.toggleAirplaneMode();`;\r\n  }\r\n\r\n  codeFor_toggleData () {\r\n    return `driver.toggleData();`;\r\n  }\r\n\r\n  codeFor_toggleWiFi () {\r\n    return `driver.toggleWifi();`;\r\n  }\r\n\r\n  codeFor_toggleLocationServices () {\r\n    return `driver.toggleLocationServices();`;\r\n  }\r\n\r\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\r\n    return `driver.sendSMS(\"${phoneNumber}\", \"${text}\");`;\r\n  }\r\n\r\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\r\n    return `driver.makeGsmCall(\"${phoneNumber}\", \"${action}\");`;\r\n  }\r\n\r\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\r\n    return `driver.setGsmSignalStrength(\"${signalStrength}\");`;\r\n  }\r\n\r\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\r\n    return `driver.setGsmVoice(\"${state}\");`;\r\n  }\r\n\r\n  codeFor_shake () {\r\n    return `driver.shake();`;\r\n  }\r\n\r\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\r\n    return `driver.lockDevice(${seconds});`;\r\n  }\r\n\r\n  codeFor_unlock () {\r\n    return `driver.unlockDevice()`;\r\n  }\r\n\r\n  codeFor_isLocked () {\r\n    return `boolean isLocked = driver.isDeviceLocked();`;\r\n  }\r\n\r\n  codeFor_rotateDevice (varNameIgnore, varIndexIgnore, x, y, radius, rotation, touchCount, duration) {\r\n    return `driver.rotate(new DeviceRotation(${x}, ${y}, ${radius}, ${rotation}, ${touchCount}, ${duration}));`;\r\n  }\r\n\r\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\r\n    return `List<List<Object>> performanceData = driver.getPerformanceData(\"${packageName}\", \"${dataType}\", ${dataReadTimeout});`;\r\n  }\r\n\r\n  codeFor_getSupportedPerformanceDataTypes () {\r\n    return `List<String> performanceTypes = driver.getSupportedPerformanceDataTypes();`;\r\n  }\r\n\r\n  codeFor_performTouchId (varNameIgnore, varIndexIgnore, match) {\r\n    return `driver.performTouchID(${match});`;\r\n  }\r\n\r\n  codeFor_toggleTouchIdEnrollment (varNameIgnore, varIndexIgnore, enroll) {\r\n    return `driver.toggleTouchIDEnrollment(${enroll});`;\r\n  }\r\n\r\n  codeFor_openNotifications () {\r\n    return `driver.openNotifications();`;\r\n  }\r\n\r\n  codeFor_getDeviceTime () {\r\n    return `String time = driver.getDeviceTime();`;\r\n  }\r\n\r\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\r\n    return `driver.fingerPrint(${fingerprintId});`;\r\n  }\r\n\r\n  codeFor_sessionCapabilities () {\r\n    return `Map<String, Object> caps = driver.getSessionDetails();`;\r\n  }\r\n\r\n  codeFor_setPageLoadTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.manage().timeouts().pageLoadTimeout(${ms / 1000}, TimeUnit.SECONDS);`;\r\n  }\r\n\r\n  codeFor_setAsyncScriptTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.manage().timeouts().setScriptTimeout(${ms / 1000}, TimeUnit.SECONDS);`;\r\n  }\r\n\r\n  codeFor_setImplicitWaitTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.manage().timeouts().implicitlyWait(${ms / 1000}, TimeUnit.SECONDS);`;\r\n  }\r\n\r\n  codeFor_getOrientation () {\r\n    return `ScreenOrientation orientation = driver.getOrientation();`;\r\n  }\r\n\r\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\r\n    return `driver.rotate(\"${orientation}\");`;\r\n  }\r\n\r\n  codeFor_getGeoLocation () {\r\n    return `Location location = driver.location();`;\r\n  }\r\n\r\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\r\n    return `driver.setLocation(new Location(${latitude}, ${longitude}, ${altitude}));`;\r\n  }\r\n\r\n  codeFor_logTypes () {\r\n    return `Set<String> logTypes = driver.manage().logs().getAvailableLogTypes();`;\r\n  }\r\n\r\n  codeFor_log (varNameIgnore, varIndexIgnore, logType) {\r\n    return `LogEntries logEntries = driver.manage().logs().get(\"${logType}\");`;\r\n  }\r\n\r\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\r\n    try {\r\n      let settings = '';\r\n      for (let [settingName, settingValue] of _.toPairs(JSON.parse(settingsJson))) {\r\n        settings += `driver.setSetting(\"${settingName}\", \"${settingValue}\");\\n`;\r\n      }\r\n      return settings;\r\n    } catch (e) {\r\n      return `// Could not parse: ${settingsJson}`;\r\n    }\r\n  }\r\n\r\n  codeFor_settings () {\r\n    return `Map<String, Object> settings = driver.getSettings();`;\r\n  }\r\n\r\n  /*\r\n\r\n  codeFor_ REPLACE_ME (varNameIgnore, varIndexIgnore) {\r\n    return `REPLACE_ME`;\r\n  }\r\n\r\n  */\r\n\r\n  // Web\r\n\r\n  codeFor_get (url) {\r\n    return `driver.get(\"${url}\");`;\r\n  }\r\n\r\n  codeFor_url () {\r\n    return `String current_url = driver.getCurrentUrl();`;\r\n  }\r\n\r\n  codeFor_forward () {\r\n    return `driver.navigate().forward();`;\r\n  }\r\n\r\n  codeFor_refresh () {\r\n    return `driver.navigate().refresh();`;\r\n  }\r\n\r\n  // Context\r\n\r\n  codeFor_currentContext () {\r\n    return `driver.getContext()`;\r\n  }\r\n\r\n  codeFor_contexts () {\r\n    return `driver.getContextHandles();`;\r\n  }\r\n\r\n  codeFor_context (name) {\r\n    return `driver.context(\"${name}\");`;\r\n  }\r\n}\r\n\r\nJavaFramework.readableName = 'Java - JUnit';\r\n\r\nexport default JavaFramework;\r\n","import Framework from './framework';\r\n\r\nclass PythonFramework extends Framework {\r\n\r\n  get language () {\r\n    return 'python';\r\n  }\r\n\r\n  getPythonVal (jsonVal) {\r\n    if (typeof jsonVal === 'boolean') {\r\n      return jsonVal ? 'True' : 'False';\r\n    }\r\n    return JSON.stringify(jsonVal);\r\n  }\r\n\r\n  wrapWithBoilerplate (code) {\r\n    let capStr = Object.keys(this.caps).map((k) => `caps[${JSON.stringify(k)}] = ${this.getPythonVal(this.caps[k])}`).join('\\n');\r\n    return `# This sample code uses the Appium python client\r\n# pip install Appium-Python-Client\r\n# Then you can paste this into a file and simply run with Python\r\n\r\nfrom appium import webdriver\r\n\r\ncaps = {}\r\n${capStr}\r\n\r\ndriver = webdriver.Remote(\"${this.serverUrl}\", caps)\r\n\r\n${code}\r\ndriver.quit()`;\r\n  }\r\n\r\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\r\n    let suffixMap = {\r\n      xpath: 'xpath',\r\n      'accessibility id': 'accessibility_id',\r\n      'id': 'id',\r\n      'name': 'name', // TODO: How does Python use name selector\r\n      'class name': 'class_name',\r\n      '-android uiautomator': 'android_uiautomator',\r\n      '-android datamatcher': 'android_datamatcher',\r\n      '-android viewtag': 'android_viewtag',\r\n      '-ios predicate string': 'ios_predicate',\r\n      '-ios class chain': 'ios_uiautomation', // TODO: Could not find iOS UIAutomation\r\n    };\r\n    if (!suffixMap[strategy]) {\r\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\r\n    }\r\n    if (isArray) {\r\n      return `${localVar} = driver.find_elements_by_${suffixMap[strategy]}(${JSON.stringify(locator)})`;\r\n    } else {\r\n      return `${localVar} = driver.find_element_by_${suffixMap[strategy]}(${JSON.stringify(locator)})`;\r\n    }\r\n  }\r\n\r\n  codeFor_click (varName, varIndex) {\r\n    return `${this.getVarName(varName, varIndex)}.click()`;\r\n  }\r\n\r\n  codeFor_clear (varName, varIndex) {\r\n    return `${this.getVarName(varName, varIndex)}.clear()`;\r\n  }\r\n\r\n  codeFor_sendKeys (varName, varIndex, text) {\r\n    return `${this.getVarName(varName, varIndex)}.send_keys(${JSON.stringify(text)})`;\r\n  }\r\n\r\n  codeFor_back () {\r\n    return `driver.back()`;\r\n  }\r\n\r\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\r\n    return `TouchAction(driver).tap(x=${x}, y=${y}).perform()`;\r\n  }\r\n\r\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\r\n    return `TouchAction(driver) \\\r\n  .press(x=${x1}, y=${y1}) \\\r\n  .move_to(x=${x2}, y=${y2}) \\\r\n  .release() \\\r\n  .perform()\r\n    `;\r\n  }\r\n\r\n  codeFor_getCurrentActivity () {\r\n    return `activity_name = driver.current_activity`;\r\n  }\r\n\r\n  codeFor_getCurrentPackage () {\r\n    return `package_name = driver.current_package`;\r\n  }\r\n\r\n  codeFor_installAppOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `driver.install_app('${app}');`;\r\n  }\r\n\r\n  codeFor_isAppInstalledOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `is_app_installed = driver.isAppInstalled(\"${app}\");`;\r\n  }\r\n\r\n  codeFor_launchApp () {\r\n    return `driver.launch_app()`;\r\n  }\r\n\r\n  codeFor_backgroundApp (varNameIgnore, varIndexIgnore, timeout) {\r\n    return `driver.background_app(${timeout})`;\r\n  }\r\n\r\n  codeFor_closeApp () {\r\n    return `driver.close_app()`;\r\n  }\r\n\r\n  codeFor_resetApp () {\r\n    return `driver.reset()`;\r\n  }\r\n\r\n  codeFor_removeAppFromDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `driver.remove_app('${app}');`;\r\n  }\r\n\r\n  codeFor_getAppStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\r\n    return `appStrings = driver.app_strings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''})`;\r\n  }\r\n\r\n  codeFor_getClipboard () {\r\n    return `clipboard_text = driver.get_clipboard_text()`;\r\n  }\r\n\r\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\r\n    return `driver.set_clipboard_text('${clipboardText}')`;\r\n  }\r\n\r\n  codeFor_pressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `driver.press_keycode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_longPressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `driver.long_press_keycode(${keyCode}, ${metaState}, ${flags});`;\r\n  }\r\n\r\n  codeFor_hideDeviceKeyboard () {\r\n    return `driver.hide_keyboard()`;\r\n  }\r\n\r\n  codeFor_isKeyboardShown () {\r\n    return `# isKeyboardShown not supported`;\r\n  }\r\n\r\n  codeFor_pushFileToDevice (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\r\n    return `driver.push_file('${pathToInstallTo}', '${fileContentString}');`;\r\n  }\r\n\r\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\r\n    return `file_base64 = self.driver.pull_file('${pathToPullFrom}');`;\r\n  }\r\n\r\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\r\n    return `file_base64 = self.driver.pull_folder('${folderToPullFrom}');`;\r\n  }\r\n\r\n  codeFor_toggleAirplaneMode () {\r\n    return `# Not supported: toggleAirplaneMode`;\r\n  }\r\n\r\n  codeFor_toggleData () {\r\n    return `# Not supported: toggleData`;\r\n  }\r\n\r\n  codeFor_toggleWiFi () {\r\n    return `# Not supported: toggleWifi`;\r\n  }\r\n\r\n  codeFor_toggleLocationServices () {\r\n    return `driver.toggle_location_services();`;\r\n  }\r\n\r\n  codeFor_sendSMS () {\r\n    return `# Not supported: sendSMS`;\r\n  }\r\n\r\n  codeFor_gsmCall () {\r\n    return `# Not supported: gsmCall`;\r\n  }\r\n\r\n  codeFor_gsmSignal () {\r\n    return `# Not supported: gsmSignal`;\r\n  }\r\n\r\n  codeFor_gsmVoice () {\r\n    return `# Not supported: gsmVoice`;\r\n  }\r\n\r\n  codeFor_shake () {\r\n    return `driver.shake();`;\r\n  }\r\n\r\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\r\n    return `driver.lock(${seconds});`;\r\n  }\r\n\r\n  codeFor_unlock () {\r\n    return `driver.unlock();`;\r\n  }\r\n\r\n  codeFor_isLocked () {\r\n    return `# Not supported: is device locked`;\r\n  }\r\n\r\n  codeFor_rotateDevice () {\r\n    return `# Not supported: rotate device`;\r\n  }\r\n\r\n  codeFor_getPerformanceData () {\r\n    return `# Not supported: getPerformanceData`;\r\n  }\r\n\r\n  codeFor_getSupportedPerformanceDataTypes () {\r\n    return `# Not supported: getSupportedPerformanceDataTypes`;\r\n  }\r\n\r\n  codeFor_performTouchId (varNameIgnore, varIndexIgnore, match) {\r\n    return `driver.touch_id(${match})`;\r\n  }\r\n\r\n  codeFor_toggleTouchIdEnrollment (varNameIgnore, varIndexIgnore, enroll) {\r\n    return `driver.toggle_touch_id_enrollment(${enroll})`;\r\n  }\r\n\r\n  codeFor_openNotifications () {\r\n    return `driver.open_notifications();`;\r\n  }\r\n\r\n  codeFor_getDeviceTime () {\r\n    return `time = self.driver.device_time()`;\r\n  }\r\n\r\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\r\n    return `driver.finger_print(${fingerprintId})`;\r\n  }\r\n\r\n  codeFor_sessionCapabilities () {\r\n    return `desired_caps = self.driver.desired_capabilities()`;\r\n  }\r\n\r\n  codeFor_setPageLoadTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.set_page_load_timeout(${ms})`;\r\n  }\r\n\r\n  codeFor_setAsyncScriptTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.timeouts('script', ${ms})`;\r\n  }\r\n\r\n  codeFor_setImplicitWaitTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.timeouts('implicit', ${ms})`;\r\n  }\r\n\r\n  codeFor_getOrientation () {\r\n    return `orientation = self.driver.orientation()`;\r\n  }\r\n\r\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\r\n    return `driver.orientation = \"${orientation}\"`;\r\n  }\r\n\r\n  codeFor_getGeoLocation () {\r\n    return `location = self.driver.location()`;\r\n  }\r\n\r\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\r\n    return `driver.set_location(${latitude}, ${longitude}, ${altitude})`;\r\n  }\r\n\r\n  codeFor_logTypes () {\r\n    return `log_types = driver.log_types();`;\r\n  }\r\n\r\n  codeFor_log (varNameIgnore, varIndexIgnore, logType) {\r\n    return `logs = driver.get_log('${logType}');`;\r\n  }\r\n\r\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\r\n    return `driver.update_settings(${settingsJson}))`;\r\n  }\r\n\r\n  codeFor_settings () {\r\n    return `settings = driver.get_settings`;\r\n  }\r\n\r\n  // Web\r\n\r\n  codeFor_get (url) {\r\n    return `driver.get('${url}')`;\r\n  }\r\n\r\n  codeFor_url () {\r\n    return `current_url = driver.current_url`;\r\n  }\r\n\r\n  codeFor_forward () {\r\n    return `driver.forward()`;\r\n  }\r\n\r\n  codeFor_refresh () {\r\n    return `driver.refresh()`;\r\n  }\r\n\r\n  // Context\r\n\r\n  codeFor_currentContext () {\r\n    return `driver.current_context`;\r\n  }\r\n\r\n  codeFor_contexts () {\r\n    return `driver.contexts()`;\r\n  }\r\n\r\n  codeFor_context (name) {\r\n    return `driver.switch_to.context('${name}')`;\r\n  }\r\n}\r\n\r\nPythonFramework.readableName = 'Python';\r\n\r\nexport default PythonFramework;\r\n","import Framework from './framework';\r\nimport _ from 'lodash';\r\n\r\nclass RubyFramework extends Framework {\r\n\r\n  get language () {\r\n    return 'ruby';\r\n  }\r\n\r\n  wrapWithBoilerplate (code) {\r\n    let capStr = Object.keys(this.caps).map((k) => `caps[${JSON.stringify(k)}] = ${JSON.stringify(this.caps[k])}`).join('\\n');\r\n    return `# This sample code uses the Appium ruby client\r\n# gem install appium_lib\r\n# Then you can paste this into a file and simply run with Ruby\r\n\r\nrequire 'rubygems'\r\nrequire 'appium_lib'\r\n\r\ncaps = {}\r\n${capStr}\r\nopts = {\r\n    sauce_username: nil,\r\n    server_url: \"${this.serverUrl}\"\r\n}\r\ndriver = Appium::Driver.new({caps: caps, appium_lib: opts}).start_driver\r\n\r\n${code}\r\ndriver.quit`;\r\n  }\r\n\r\n  codeFor_findAndAssign (strategy, locator, localVar, isArray) {\r\n    let suffixMap = {\r\n      xpath: ':xpath',\r\n      'accessibility id': ':accessibility_id',\r\n      'id': ':id',\r\n      'name': ':name',\r\n      'class name': ':class_name',\r\n      '-android uiautomator': ':uiautomation',\r\n      '-android datamatcher': ':datamatcher',\r\n      '-android viewtag': ':viewtag',\r\n      '-ios predicate string': ':predicate',\r\n      '-ios class chain': ':class_chain',\r\n    };\r\n    if (!suffixMap[strategy]) {\r\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\r\n    }\r\n    if (isArray) {\r\n      return `${localVar} = driver.find_element(${suffixMap[strategy]}, ${JSON.stringify(locator)})`;\r\n    } else {\r\n      return `${localVar} = driver.find_elements(${suffixMap[strategy]}, ${JSON.stringify(locator)})`;\r\n    }\r\n  }\r\n\r\n  codeFor_click (varName, varIndex) {\r\n    return `${this.getVarName(varName, varIndex)}.click`;\r\n  }\r\n\r\n  codeFor_clear (varName, varIndex) {\r\n    return `${this.getVarName(varName, varIndex)}.clear`;\r\n  }\r\n\r\n  codeFor_sendKeys (varName, varIndex, text) {\r\n    return `${this.getVarName(varName, varIndex)}.send_keys ${JSON.stringify(text)}`;\r\n  }\r\n\r\n  codeFor_back () {\r\n    return `driver.back`;\r\n  }\r\n\r\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\r\n    return `TouchAction\r\n  .new\r\n  .tap(x: ${x}, y: ${y})\r\n  .perform\r\n    `;\r\n  }\r\n\r\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\r\n    return `TouchAction\r\n  .new\r\n  .press({x: ${x1}, y: ${y1}})\r\n  .move_to({x: ${x2}, y: ${y2}})\r\n  .release\r\n  .perform\r\n    `;\r\n  }\r\n\r\n  codeFor_getCurrentActivity () {\r\n    return `current_activity = driver.current_activity`;\r\n  }\r\n\r\n  codeFor_getCurrentPackage () {\r\n    return `current_package = driver.current_package`;\r\n  }\r\n\r\n\r\n  codeFor_installAppOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `driver.app_installed?('${app}')`;\r\n  }\r\n\r\n  codeFor_isAppInstalledOnDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `is_app_installed = driver.isAppInstalled(\"${app}\");`;\r\n  }\r\n\r\n  codeFor_launchApp () {\r\n    return `driver.launch_app`;\r\n  }\r\n\r\n  codeFor_backgroundApp (varNameIgnore, varIndexIgnore, timeout) {\r\n    return `driver.background_app(${timeout})`;\r\n  }\r\n\r\n  codeFor_closeApp () {\r\n    return `driver.close_app`;\r\n  }\r\n\r\n  codeFor_resetApp () {\r\n    return `driver.reset`;\r\n  }\r\n\r\n  codeFor_removeAppFromDevice (varNameIgnore, varIndexIgnore, app) {\r\n    return `driver.remove_app('${app}')`;\r\n  }\r\n\r\n  codeFor_getAppStrings (varNameIgnore, varIndexIgnore, language, stringFile) {\r\n    return `driver.app_strings(${language ? `${language}, ` : ''}${stringFile ? `\"${stringFile}` : ''})`;\r\n  }\r\n\r\n  codeFor_getClipboard () {\r\n    return `clipboard_text = driver.get_clipboard`;\r\n  }\r\n\r\n  codeFor_setClipboard (varNameIgnore, varIndexIgnore, clipboardText) {\r\n    return `driver.set_clipboard content: '${clipboardText}'`;\r\n  }\r\n\r\n  codeFor_pressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `driver.press_keycode(${keyCode}, ${metaState}, ${flags})`;\r\n  }\r\n\r\n  codeFor_longPressKeycode (varNameIgnore, varIndexIgnore, keyCode, metaState, flags) {\r\n    return `driver.long_press_keycode(${keyCode}, ${metaState}, ${flags})`;\r\n  }\r\n\r\n  codeFor_hideDeviceKeyboard () {\r\n    return `driver.hide_keyboard`;\r\n  }\r\n\r\n  codeFor_isKeyboardShown () {\r\n    return `is_keyboard_shown = driver.is_keyboard_shown`;\r\n  }\r\n\r\n  codeFor_pushFileToDevice (varNameIgnore, varIndexIgnore, pathToInstallTo, fileContentString) {\r\n    return `driver.push_file('${pathToInstallTo}', '${fileContentString}')`;\r\n  }\r\n\r\n  codeFor_pullFile (varNameIgnore, varIndexIgnore, pathToPullFrom) {\r\n    return `driver.pull_file('${pathToPullFrom}')`;\r\n  }\r\n\r\n  codeFor_pullFolder (varNameIgnore, varIndexIgnore, folderToPullFrom) {\r\n    return `driver.pull_folder('${folderToPullFrom}')`;\r\n  }\r\n\r\n  codeFor_toggleAirplaneMode () {\r\n    return `driver.toggle_flight_mode`;\r\n  }\r\n\r\n  codeFor_toggleData () {\r\n    return `driver.toggle_data`;\r\n  }\r\n\r\n  codeFor_toggleWiFi () {\r\n    return `driver.toggle_wifi`;\r\n  }\r\n\r\n  codeFor_toggleLocationServices () {\r\n    return `driver.toggle_location_services`;\r\n  }\r\n\r\n  codeFor_sendSMS (varNameIgnore, varIndexIgnore, phoneNumber, text) {\r\n    return `driver.send_sms(phone_number: '${phoneNumber}', message: '${text}')`;\r\n  }\r\n\r\n  codeFor_gsmCall (varNameIgnore, varIndexIgnore, phoneNumber, action) {\r\n    return `driver.gsm_call(phone_number: '${phoneNumber}', action: :${action})`;\r\n  }\r\n\r\n  codeFor_gsmSignal (varNameIgnore, varIndexIgnore, signalStrength) {\r\n    return `driver.gsm_signal :${signalStrength}`;\r\n  }\r\n\r\n  codeFor_gsmVoice (varNameIgnore, varIndexIgnore, state) {\r\n    return `driver.gsm_voice :${state}`;\r\n  }\r\n\r\n  codeFor_shake () {\r\n    return `driver.shake`;\r\n  }\r\n\r\n  codeFor_lock (varNameIgnore, varIndexIgnore, seconds) {\r\n    return `driver.lock(${seconds})`;\r\n  }\r\n\r\n  codeFor_unlock () {\r\n    return `driver.unlock`;\r\n  }\r\n\r\n  codeFor_isLocked () {\r\n    return `is_device_locked = driver.device_locked?`;\r\n  }\r\n\r\n  codeFor_rotateDevice () {\r\n    return `# Not supported: rotateDevice`;\r\n  }\r\n\r\n  codeFor_getPerformanceData (varNameIgnore, varIndexIgnore, packageName, dataType, dataReadTimeout) {\r\n    return `performance_data = driver.get_performance_data package_name: '${packageName}', data_type: '${dataType}', data_read_timeout: ${dataReadTimeout}`;\r\n  }\r\n\r\n  codeFor_getSupportedPerformanceDataTypes () {\r\n    return `performance_data = driver.get_performance_data_types`;\r\n  }\r\n\r\n  codeFor_performTouchId (varNameIgnore, varIndexIgnore, match) {\r\n    return `driver.touch_id ${match}`;\r\n  }\r\n\r\n  codeFor_toggleTouchIdEnrollment (varNameIgnore, varIndexIgnore, enroll) {\r\n    return `driver.toggle_touch_id_enrollment ${enroll}`;\r\n  }\r\n\r\n  codeFor_openNotifications () {\r\n    return `driver.open_notifications`;\r\n  }\r\n\r\n  codeFor_getDeviceTime () {\r\n    return `device_time = driver.device_time`;\r\n  }\r\n\r\n  codeFor_fingerprint (varNameIgnore, varIndexIgnore, fingerprintId) {\r\n    return `driver.finger_print ${fingerprintId}`;\r\n  }\r\n\r\n  codeFor_sessionCapabilities () {\r\n    return `session_capabilities = driver.session_capabilities`;\r\n  }\r\n\r\n  codeFor_setPageLoadTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.timeout('pageLoad', ${ms})`;\r\n  }\r\n\r\n  codeFor_setAsyncScriptTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.timeout('script', ${ms})`;\r\n  }\r\n\r\n  codeFor_setImplicitWaitTimeout (varNameIgnore, varIndexIgnore, ms) {\r\n    return `driver.timeout('implicit', ${ms})`;\r\n  }\r\n\r\n  codeFor_getOrientation () {\r\n    return `orientation = driver.orientation`;\r\n  }\r\n\r\n  codeFor_setOrientation (varNameIgnore, varIndexIgnore, orientation) {\r\n    return `driver.rotation = :${orientation}`;\r\n  }\r\n\r\n  codeFor_getGeoLocation () {\r\n    return `geo_location = driver.location`;\r\n  }\r\n\r\n  codeFor_setGeoLocation (varNameIgnore, varIndexIgnore, latitude, longitude, altitude) {\r\n    return `driver.set_location(${latitude}, ${longitude}, ${altitude})`;\r\n  }\r\n\r\n  codeFor_logTypes () {\r\n    return `log_types = driver.logs.available_types`;\r\n  }\r\n\r\n  codeFor_log (varNameIgnore, varIndexIgnore, logType) {\r\n    return `driver.logs.get '${logType}'`;\r\n  }\r\n\r\n  codeFor_updateSettings (varNameIgnore, varIndexIgnore, settingsJson) {\r\n    try {\r\n      let settings = '';\r\n      for (let [settingName, settingValue] of _.toPairs(JSON.parse(settingsJson))) {\r\n        settings += `driver.update_settings(${settingName}: '${settingValue}')\\n`;\r\n      }\r\n      return settings;\r\n    } catch (e) {\r\n      return `// Could not parse: ${settingsJson}`;\r\n    }\r\n  }\r\n\r\n  codeFor_settings () {\r\n    return `settings = driver.get_settings`;\r\n  }\r\n\r\n  // Web\r\n\r\n  codeFor_get (url) {\r\n    return `driver.get '${url}'`;\r\n  }\r\n\r\n  codeFor_url () {\r\n    return `current_url = driver.current_url`;\r\n  }\r\n\r\n  codeFor_forward () {\r\n    return `driver.navigate().forward`;\r\n  }\r\n\r\n  codeFor_refresh () {\r\n    return `driver.navigate().refresh`;\r\n  }\r\n\r\n  // Context\r\n\r\n  codeFor_currentContext () {\r\n    return `driver.current_context`;\r\n  }\r\n\r\n  codeFor_contexts () {\r\n    return `driver.available_contexts`;\r\n  }\r\n\r\n  codeFor_context (name) {\r\n    return `set_context '${name}'`;\r\n  }\r\n}\r\n\r\nRubyFramework.readableName = 'Ruby';\r\n\r\nexport default RubyFramework;\r\n","/* eslint no-useless-escape: 0 */\r\n\r\nimport Framework from './framework';\r\n\r\nclass RobotFramework extends Framework {\r\n\r\n  get language () {\r\n    //TODO: Make https://highlightjs.org/ use robot syntax\r\n    return 'python';\r\n  }\r\n\r\n  get getCapsVariables () {\r\n    return Object.keys(this.caps).map((k) => `\\$\\{${k}\\}    ${this.getPythonVal(this.caps[k])}`).join('\\n');\r\n  }\r\n\r\n  getPythonVal (jsonVal) {\r\n    if (typeof jsonVal === 'boolean') {\r\n      return jsonVal ? 'True' : 'False';\r\n    }\r\n    return jsonVal;\r\n  }\r\n\r\n  wrapWithBoilerplate (code) {\r\n    return `# This sample code uses the Appium robot client\r\n# pip install robotframework-appiumlibrary\r\n# Then you can paste this into a file and simply run with robot\r\n#\r\n#  more keywords on: http://serhatbolsu.github.io/robotframework-appiumlibrary/AppiumLibrary.html\r\n\r\n*** Settings ***\r\nLibrary           AppiumLibrary\r\n\r\n*** Variables ***\r\n$\\{REMOTE_URL\\}   ${this.serverUrl}\r\n${this.getCapsVariables}\r\n\r\n*** Test Cases ***\r\nTest case name\r\n${this.indent(this.getApplicationInitialization(), 4)}\r\n${this.indent(code, 4)}\r\n\r\n*** Test Teardown ***\r\n    Quit Application\r\n\r\n*** Suite Teardown ***\r\n    Close Application`;\r\n  }\r\n\r\n  codeFor_findAndAssign (strategy, locator/*, localVar, isArray*/) {\r\n    let suffixMap = {\r\n      xpath: 'xpath',\r\n      'accessibility id': 'accessibility_id',\r\n      'id': 'id',\r\n      'name': 'name', // TODO: How does Python use name selector\r\n      'class name': 'class_name',\r\n      '-android uiautomator': 'unsupported',\r\n      '-android datamatcher': 'unsupported',\r\n      '-android viewtag': 'unsupported',\r\n      '-ios predicate string': 'ios_predicate',\r\n      '-ios class chain': 'ios_uiautomation', // TODO: Could not find iOS UIAutomation\r\n    };\r\n    if (!suffixMap[strategy]) {\r\n      throw new Error(`Strategy ${strategy} can't be code-gened`);\r\n    }\r\n    //TODO: in the robot case, we need the ID on the codeFor_ for execution\r\n    this.lastID = `${strategy}=${locator}`;\r\n    return `# ${this.lastID}`;\r\n  }\r\n\r\n  getApplicationInitialization () {\r\n    let varString = Object.keys(this.caps).map((k) => `${k}=\\$\\{${k}\\}`).join('  ');\r\n    return `Open Application    \\$\\{REMOTE_URL\\}   ${varString}`;\r\n  }\r\n\r\n  codeFor_click (/*varName, varIndex*/) {\r\n    return `Click Element    ${this.lastID}`;\r\n  }\r\n\r\n  codeFor_clear (/*varName, varIndex*/) {\r\n    return `Clear Text    ${this.lastID}`;\r\n  }\r\n\r\n  codeFor_sendKeys (varName, varIndex, text) {\r\n    return `Input Text    ${this.lastID}    ${text}`;\r\n  }\r\n\r\n  codeFor_back () {\r\n    return `Go Back`;\r\n  }\r\n\r\n  codeFor_tap (varNameIgnore, varIndexIgnore, x, y) {\r\n    return `Tap    ${this.lastID}    ${x}    ${y}`;\r\n  }\r\n\r\n  codeFor_swipe (varNameIgnore, varIndexIgnore, x1, y1, x2, y2) {\r\n    return `Swipe    ${x1}    ${y1}    ${x2}    ${y2}`;\r\n  }\r\n\r\n  // TODO: Add these robot framework commands\r\n  codeFor_getCurrentActivity () {\r\n    return '';\r\n  }\r\n\r\n  codeFor_getCurrentPackage () {\r\n    return '';\r\n  }\r\n\r\n  codeFor_installAppOnDevice () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_isAppInstalledOnDevice () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_launchApp () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_backgroundApp () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_closeApp () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_resetApp () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_removeAppFromDevice () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_getAppStrings () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_getClipboard () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_setClipboard () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_pressKeycode () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_longPressKeycode () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_hideDeviceKeyboard () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_isKeyboardShown () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_pushFileToDevice () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_pullFile () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_pullFolder () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_toggleAirplaneMode () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_toggleData () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_toggleWiFi () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_toggleLocationServices () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_sendSMS () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_gsmCall () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_gsmSignal () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_gsmVoice () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_shake () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_lock () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_unlock () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_isLocked () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_rotateDevice () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_getPerformanceData () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_getSupportedPerformanceDataTypes () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_performTouchId () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_toggleTouchIdEnrollment () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_openNotifications () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_getDeviceTime () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_fingerprint () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_sessionCapabilities () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_setPageLoadTimeout () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_setAsyncScriptTimeout () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_setImplicitWaitTimeout () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_setCommandTimeout () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_getOrientation () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_setOrientation () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_getGeoLocation () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_setGeoLocation () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_logTypes () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_log () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_updateSettings () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_settings () {\r\n    return ``;\r\n  }\r\n\r\n  // Web\r\n\r\n  codeFor_get () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_url () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_forward () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_refresh () {\r\n    return ``;\r\n  }\r\n\r\n  // Context\r\n\r\n  codeFor_currentContext () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_contexts () {\r\n    return ``;\r\n  }\r\n\r\n  codeFor_context () {\r\n    return ``;\r\n  }\r\n}\r\n\r\nRobotFramework.readableName = 'Robot Framework';\r\n\r\nexport default RobotFramework;\r\n","import JsWdFramework from './js-wd';\r\nimport JsWdIoFramework from './js-wdio';\r\nimport JsOxygenFramework from './js-oxygen';\r\nimport JavaFramework from './java';\r\nimport PythonFramework from './python';\r\nimport RubyFramework from './ruby';\r\nimport RobotFramework from './robot';\r\n\r\nconst frameworks = {\r\n  jsWd: JsWdFramework,\r\n  jsWdIo: JsWdIoFramework,\r\n  jsOxygen: JsOxygenFramework,\r\n  java: JavaFramework,\r\n  python: PythonFramework,\r\n  ruby: RubyFramework,\r\n  robot: RobotFramework,\r\n};\r\n\r\nexport default frameworks;\r\n","import { ipcRenderer } from 'electron';\r\nimport { notification } from 'antd';\r\nimport { push } from 'connected-react-router';\r\nimport _ from 'lodash';\r\nimport B from 'bluebird';\r\nimport { getLocators } from '../components/Inspector/shared';\r\nimport { showError } from './Session';\r\nimport { bindClient, unbindClient, callClientMethod } from './shared';\r\nimport { xmlToJSON } from '../util';\r\nimport frameworks from '../lib/client-frameworks';\r\nimport settings from '../../shared/settings';\r\nimport i18n from '../../configs/i18next.config.renderer';\r\n\r\nexport const SET_SESSION_DETAILS = 'SET_SESSION_DETAILS';\r\nexport const SET_SOURCE_AND_SCREENSHOT = 'SET_SOURCE_AND_SCREENSHOT';\r\nexport const SESSION_DONE = 'SESSION_DONE';\r\nexport const SELECT_ELEMENT = 'SELECT_ELEMENT';\r\nexport const UNSELECT_ELEMENT = 'UNSELECT_ELEMENT';\r\nexport const SET_SELECTED_ELEMENT_ID = 'SET_SELECTED_ELEMENT_ID';\r\nexport const SET_INTERACTIONS_NOT_AVAILABLE = 'SET_INTERACTIONS_NOT_AVAILABLE';\r\nexport const METHOD_CALL_REQUESTED = 'METHOD_CALL_REQUESTED';\r\nexport const METHOD_CALL_DONE = 'METHOD_CALL_DONE';\r\nexport const SET_FIELD_VALUE = 'SET_FIELD_VALUE';\r\nexport const SET_EXPANDED_PATHS = 'SET_EXPANDED_PATHS';\r\nexport const SELECT_HOVERED_ELEMENT = 'SELECT_HOVERED_ELEMENT';\r\nexport const UNSELECT_HOVERED_ELEMENT = 'UNSELECT_HOVERED_ELEMENT';\r\nexport const SHOW_SEND_KEYS_MODAL = 'SHOW_SEND_KEYS_MODAL';\r\nexport const HIDE_SEND_KEYS_MODAL = 'HIDE_SEND_KEYS_MODAL';\r\nexport const QUIT_SESSION_REQUESTED = 'QUIT_SESSION_REQUESTED';\r\nexport const QUIT_SESSION_DONE = 'QUIT_SESSION_DONE';\r\n\r\nexport const START_RECORDING = 'START_RECORDING';\r\nexport const PAUSE_RECORDING = 'PAUSE_RECORDING';\r\nexport const CLEAR_RECORDING = 'CLEAR_RECORDING';\r\nexport const CLOSE_RECORDER = 'CLOSE_RECORDER';\r\nexport const SET_ACTION_FRAMEWORK = 'SET_ACTION_FRAMEWORK';\r\nexport const SAVED_FRAMEWORK = 'SAVED_FRAMEWORK';\r\nexport const RECORD_ACTION = 'RECORD_ACTION';\r\nexport const SET_SHOW_BOILERPLATE = 'SET_SHOW_BOILERPLATE';\r\n\r\nexport const SHOW_LOCATOR_TEST_MODAL = 'SHOW_LOCATOR_TEST_MODAL';\r\nexport const HIDE_LOCATOR_TEST_MODAL = 'HIDE_LOCATOR_TEST_MODAL';\r\nexport const SET_LOCATOR_TEST_STRATEGY = 'SET_LOCATOR_TEST_STRATEGY';\r\nexport const SET_LOCATOR_TEST_VALUE = 'SET_LOCATOR_TEST_VALUE';\r\nexport const SEARCHING_FOR_ELEMENTS = 'SEARCHING_FOR_ELEMENTS';\r\nexport const SEARCHING_FOR_ELEMENTS_COMPLETED = 'SEARCHING_FOR_ELEMENTS_COMPLETED';\r\nexport const GET_FIND_ELEMENTS_TIMES = 'GET_FIND_ELEMENTS_TIMES';\r\nexport const GET_FIND_ELEMENTS_TIMES_COMPLETED = 'GET_FIND_ELEMENTS_TIMES_COMPLETED';\r\nexport const SET_LOCATOR_TEST_ELEMENT = 'SET_LOCATOR_TEST_ELEMENT';\r\nexport const CLEAR_SEARCH_RESULTS = 'CLEAR_SEARCH_RESULTS';\r\nexport const ADD_ASSIGNED_VAR_CACHE = 'ADD_ASSIGNED_VAR_CACHE';\r\nexport const CLEAR_ASSIGNED_VAR_CACHE = 'CLEAR_ASSIGNED_VAR_CACHE';\r\nexport const SET_SCREENSHOT_INTERACTION_MODE = 'SET_SCREENSHOT_INTERACTION_MODE';\r\nexport const SET_SEARCHED_FOR_ELEMENT_BOUNDS = 'SET_SEARCHED_FOR_ELEMENT_BOUNDS';\r\nexport const CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS = 'CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS';\r\n\r\nexport const SET_SWIPE_START = 'SET_SWIPE_START';\r\nexport const SET_SWIPE_END = 'SET_SWIPE_END';\r\nexport const CLEAR_SWIPE_ACTION = 'CLEAR_SWIPE_ACTION';\r\nexport const PROMPT_KEEP_ALIVE = 'PROMPT_KEEP_ALIVE';\r\nexport const HIDE_PROMPT_KEEP_ALIVE = 'HIDE_PROMPT_KEEP_ALIVE';\r\n\r\nexport const SELECT_INTERACTION_MODE = 'SELECT_INTERACTION_MODE';\r\n\r\nexport const SELECT_ACTION_GROUP = 'SELECT_ACTION_GROUP';\r\nexport const SELECT_SUB_ACTION_GROUP = 'SELECT_SUB_ACTION_GROUP';\r\n\r\nexport const ENTERING_ACTION_ARGS = 'ENTERING_ACTION_ARGS';\r\nexport const REMOVE_ACTION = 'REMOVE_ACTION';\r\nexport const SET_ACTION_ARG = 'SET_ACTION_ARG';\r\n\r\nexport const SET_CONTEXT = 'SET_CONTEXT';\r\n\r\nexport function bindAppium () {\r\n  return (dispatch) => {\r\n    // Listen for session response messages from 'main'\r\n    bindClient();\r\n\r\n    // If user is inactive ask if they wish to keep session alive\r\n    ipcRenderer.on('appium-prompt-keep-alive', () => {\r\n      promptKeepAlive()(dispatch);\r\n    });\r\n\r\n    // When session is done, unbind them all\r\n    ipcRenderer.on('appium-session-done', (evt, {reason, killedByUser}) => {\r\n      ipcRenderer.removeAllListeners('appium-session-done');\r\n      ipcRenderer.removeAllListeners('appium-prompt-keep-alive');\r\n      unbindClient();\r\n      dispatch({type: QUIT_SESSION_DONE});\r\n      dispatch(push('/session'));\r\n      if (!killedByUser) {\r\n        notification.error({\r\n          message: 'Error',\r\n          description: reason || i18n.t('Session has been terminated'),\r\n          duration: 0\r\n        });\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\n// A debounced function that calls findElement and gets info about the element\r\nconst findElement = _.debounce(async function (strategyMap, dispatch, getState, path) {\r\n  for (let [strategy, selector] of strategyMap) {\r\n    // Get the information about the element\r\n    let {elementId, variableName, variableType} = await callClientMethod({\r\n      strategy,\r\n      selector,\r\n    });\r\n\r\n    // Set the elementId, variableName and variableType for the selected element\r\n    // (check first that the selectedElementPath didn't change, to avoid race conditions)\r\n    if (elementId && getState().inspector.selectedElementPath === path) {\r\n      return dispatch({type: SET_SELECTED_ELEMENT_ID, elementId, variableName, variableType});\r\n    }\r\n  }\r\n\r\n  return dispatch({type: SET_INTERACTIONS_NOT_AVAILABLE});\r\n}, 1000);\r\n\r\nexport function selectElement (path) {\r\n  return async (dispatch, getState) => {\r\n    // Set the selected element in the source tree\r\n    dispatch({type: SELECT_ELEMENT, path});\r\n    const state = getState().inspector;\r\n    const {attributes: selectedElementAttributes, xpath: selectedElementXPath} = state.selectedElement;\r\n    const {sourceXML} = state;\r\n\r\n    // Expand all of this element's ancestors so that it's visible in the source tree\r\n    let {expandedPaths} = getState().inspector;\r\n    let pathArr = path.split('.').slice(0, path.length - 1);\r\n    while (pathArr.length > 1) {\r\n      pathArr.splice(pathArr.length - 1);\r\n      let path = pathArr.join('.');\r\n      if (expandedPaths.indexOf(path) < 0) {\r\n        expandedPaths.push(path);\r\n      }\r\n    }\r\n    dispatch({type: SET_EXPANDED_PATHS, paths: expandedPaths});\r\n\r\n\r\n    // Find the optimal selection strategy. If none found, fall back to XPath.\r\n    const strategyMap = _.toPairs(getLocators(selectedElementAttributes, sourceXML));\r\n    strategyMap.push(['xpath', selectedElementXPath]);\r\n\r\n    // Debounce find element so that if another element is selected shortly after, cancel the previous search\r\n    await findElement(strategyMap, dispatch, getState, path);\r\n  };\r\n}\r\n\r\nexport function unselectElement () {\r\n  return (dispatch) => {\r\n    dispatch({type: UNSELECT_ELEMENT});\r\n  };\r\n}\r\n\r\nexport function selectHoveredElement (path) {\r\n  return (dispatch) => {\r\n    dispatch({type: SELECT_HOVERED_ELEMENT, path});\r\n  };\r\n}\r\n\r\nexport function unselectHoveredElement (path) {\r\n  return (dispatch) => {\r\n    dispatch({type: UNSELECT_HOVERED_ELEMENT, path});\r\n  };\r\n}\r\n\r\n/**\r\n * Requests a method call on appium\r\n */\r\nexport function applyClientMethod (params) {\r\n  return async (dispatch, getState) => {\r\n    const isRecording = params.methodName !== 'quit' &&\r\n                      params.methodName !== 'source' &&\r\n                      getState().inspector.isRecording;\r\n    try {\r\n      dispatch({type: METHOD_CALL_REQUESTED});\r\n      const {contexts, contextsError, currentContext, currentContextError,\r\n             source, screenshot, windowSize, result, sourceError,\r\n             screenshotError, windowSizeError, variableName,\r\n             variableIndex, strategy, selector} = await callClientMethod(params);\r\n\r\n      if (isRecording) {\r\n        // Add 'findAndAssign' line of code. Don't do it for arrays though. Arrays already have 'find' expression\r\n        if (strategy && selector && !variableIndex && variableIndex !== 0) {\r\n          findAndAssign(strategy, selector, variableName, false)(dispatch, getState);\r\n        }\r\n\r\n        // now record the actual action\r\n        let args = [variableName, variableIndex];\r\n        args = args.concat(params.args || []);\r\n        dispatch({type: RECORD_ACTION, action: params.methodName, params: args });\r\n      }\r\n      dispatch({type: METHOD_CALL_DONE});\r\n\r\n      if (source && screenshot) {\r\n        dispatch({\r\n          type: SET_SOURCE_AND_SCREENSHOT,\r\n          contexts,\r\n          currentContext,\r\n          source: source && xmlToJSON(source),\r\n          sourceXML: source,\r\n          screenshot,\r\n          windowSize,\r\n          contextsError,\r\n          currentContextError,\r\n          sourceError,\r\n          screenshotError,\r\n          windowSizeError,\r\n        });\r\n      }\r\n      return result;\r\n    } catch (error) {\r\n      let methodName = params.methodName === 'click' ? 'tap' : params.methodName;\r\n      showError(error, methodName, 10);\r\n      dispatch({type: METHOD_CALL_DONE});\r\n    }\r\n  };\r\n}\r\n\r\nexport function addAssignedVarCache (varName) {\r\n  return (dispatch) => {\r\n    dispatch({type: ADD_ASSIGNED_VAR_CACHE, varName});\r\n  };\r\n}\r\n\r\nexport function showSendKeysModal () {\r\n  return (dispatch) => {\r\n    dispatch({type: SHOW_SEND_KEYS_MODAL});\r\n  };\r\n}\r\n\r\nexport function hideSendKeysModal () {\r\n  return (dispatch) => {\r\n    dispatch({type: HIDE_SEND_KEYS_MODAL});\r\n  };\r\n}\r\n\r\n/**\r\n * Set a value of an arbitrarily named field\r\n */\r\nexport function setFieldValue (name, value) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_FIELD_VALUE, name, value});\r\n  };\r\n}\r\n\r\nexport function setExpandedPaths (paths) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_EXPANDED_PATHS, paths});\r\n  };\r\n}\r\n\r\n/**\r\n * Quit the session and go back to the new session window\r\n */\r\nexport function quitSession () {\r\n  return async (dispatch) => {\r\n    await applyClientMethod({methodName: 'quit'})(dispatch);\r\n  };\r\n}\r\n\r\nexport function startRecording () {\r\n  return (dispatch) => {\r\n    dispatch({type: START_RECORDING});\r\n  };\r\n}\r\n\r\nexport function pauseRecording () {\r\n  return (dispatch) => {\r\n    dispatch({type: PAUSE_RECORDING});\r\n  };\r\n}\r\n\r\nexport function clearRecording () {\r\n  return (dispatch) => {\r\n    dispatch({type: CLEAR_RECORDING});\r\n    ipcRenderer.send('appium-restart-recorder'); // Tell the main thread to start the variable count from 1\r\n    dispatch({type: CLEAR_ASSIGNED_VAR_CACHE}); // Get rid of the variable cache\r\n  };\r\n}\r\n\r\nexport function getSavedActionFramework () {\r\n  return async (dispatch) => {\r\n    let framework = await settings.get(SAVED_FRAMEWORK);\r\n    dispatch({type: SET_ACTION_FRAMEWORK, framework});\r\n  };\r\n}\r\n\r\nexport function setActionFramework (framework) {\r\n  return async (dispatch) => {\r\n    if (!frameworks[framework]) {\r\n      throw new Error(i18n.t('frameworkNotSupported', {framework}));\r\n    }\r\n    await settings.set(SAVED_FRAMEWORK, framework);\r\n    dispatch({type: SET_ACTION_FRAMEWORK, framework});\r\n  };\r\n}\r\n\r\nexport function recordAction (action, params) {\r\n  return (dispatch) => {\r\n    dispatch({type: RECORD_ACTION, action, params});\r\n  };\r\n}\r\n\r\nexport function closeRecorder () {\r\n  return (dispatch) => {\r\n    dispatch({type: CLOSE_RECORDER});\r\n  };\r\n}\r\n\r\nexport function toggleShowBoilerplate () {\r\n  return (dispatch, getState) => {\r\n    const show = !getState().inspector.showBoilerplate;\r\n    dispatch({type: SET_SHOW_BOILERPLATE, show});\r\n  };\r\n}\r\n\r\nexport function setSessionDetails (sessionDetails) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_SESSION_DETAILS, sessionDetails});\r\n  };\r\n}\r\n\r\nexport function showLocatorTestModal () {\r\n  return (dispatch) => {\r\n    dispatch({type: SHOW_LOCATOR_TEST_MODAL});\r\n  };\r\n}\r\n\r\nexport function hideLocatorTestModal () {\r\n  return (dispatch) => {\r\n    dispatch({type: HIDE_LOCATOR_TEST_MODAL});\r\n    dispatch({type: CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS});\r\n  };\r\n}\r\n\r\nexport function setLocatorTestValue (locatorTestValue) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_LOCATOR_TEST_VALUE, locatorTestValue});\r\n  };\r\n}\r\n\r\nexport function setLocatorTestStrategy (locatorTestStrategy) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_LOCATOR_TEST_STRATEGY, locatorTestStrategy});\r\n  };\r\n}\r\n\r\nexport function setContext (context) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_CONTEXT, context});\r\n  };\r\n}\r\n\r\nexport function searchForElement (strategy, selector) {\r\n  return async (dispatch, getState) => {\r\n    dispatch({type: SEARCHING_FOR_ELEMENTS});\r\n    try {\r\n      let {elements, variableName} = await callClientMethod({strategy, selector, fetchArray: true});\r\n      findAndAssign(strategy, selector, variableName, true)(dispatch, getState);\r\n      elements = elements.map((el) => el.id);\r\n      dispatch({type: SEARCHING_FOR_ELEMENTS_COMPLETED, elements});\r\n    } catch (error) {\r\n      dispatch({type: SEARCHING_FOR_ELEMENTS_COMPLETED});\r\n      showError(error, 10);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Get all the find element times based on the find data source\r\n */\r\nexport function getFindElementsTimes (findDataSource) {\r\n  return async (dispatch) => {\r\n    dispatch({type: GET_FIND_ELEMENTS_TIMES});\r\n    try {\r\n      const findElementsExecutionTimes = [];\r\n      for (const element of findDataSource) {\r\n        const {find, key, selector} = element;\r\n        const {executionTime} = await callClientMethod({strategy: key, selector});\r\n        findElementsExecutionTimes.push({find, key, selector, time: executionTime});\r\n      }\r\n\r\n      dispatch({\r\n        type: GET_FIND_ELEMENTS_TIMES_COMPLETED,\r\n        findElementsExecutionTimes: _.sortBy(findElementsExecutionTimes, ['time']),\r\n      });\r\n    } catch (error) {\r\n      dispatch({type: GET_FIND_ELEMENTS_TIMES_COMPLETED});\r\n      showError(error, 10);\r\n    }\r\n  };\r\n}\r\n\r\nexport function findAndAssign (strategy, selector, variableName, isArray) {\r\n  return (dispatch, getState) => {\r\n    const {assignedVarCache} = getState().inspector;\r\n\r\n    // If this call to 'findAndAssign' for this variable wasn't done already, do it now\r\n    if (!assignedVarCache[variableName]) {\r\n      dispatch({type: RECORD_ACTION, action: 'findAndAssign', params: [strategy, selector, variableName, isArray]});\r\n      dispatch({type: ADD_ASSIGNED_VAR_CACHE, varName: variableName});\r\n    }\r\n  };\r\n}\r\n\r\nexport function setLocatorTestElement (elementId) {\r\n  return async (dispatch) => {\r\n    dispatch({type: SET_LOCATOR_TEST_ELEMENT, elementId});\r\n    dispatch({type: CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS});\r\n    if (elementId) {\r\n      try {\r\n        const [location, size] = await (B.all([\r\n          callClientMethod({methodName: 'getLocation', args: [elementId], skipRefresh: true, skipRecord: true, ignoreResult: true}),\r\n          callClientMethod({methodName: 'getSize', args: [elementId], skipRefresh: true, skipRecord: true, ignoreResult: true}),\r\n        ]));\r\n        dispatch({type: SET_SEARCHED_FOR_ELEMENT_BOUNDS, location: location.res, size: size.res});\r\n      } catch (ign) { }\r\n    }\r\n  };\r\n}\r\n\r\nexport function clearSearchResults () {\r\n  return (dispatch) => {\r\n    dispatch({type: CLEAR_SEARCH_RESULTS});\r\n  };\r\n}\r\n\r\nexport function selectScreenshotInteractionMode (screenshotInteractionMode) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_SCREENSHOT_INTERACTION_MODE, screenshotInteractionMode });\r\n  };\r\n}\r\n\r\nexport function setSwipeStart (swipeStartX, swipeStartY) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_SWIPE_START, swipeStartX, swipeStartY});\r\n  };\r\n}\r\n\r\nexport function setSwipeEnd (swipeEndX, swipeEndY) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_SWIPE_END, swipeEndX, swipeEndY});\r\n  };\r\n}\r\n\r\nexport function clearSwipeAction () {\r\n  return (dispatch) => {\r\n    dispatch({type: CLEAR_SWIPE_ACTION});\r\n  };\r\n}\r\n\r\nexport function promptKeepAlive () {\r\n  return (dispatch) => {\r\n    dispatch({type: PROMPT_KEEP_ALIVE});\r\n  };\r\n}\r\n\r\nexport function keepSessionAlive () {\r\n  return (dispatch) => {\r\n    dispatch({type: HIDE_PROMPT_KEEP_ALIVE});\r\n    ipcRenderer.send('appium-keep-session-alive');\r\n  };\r\n}\r\n\r\nexport function selectActionGroup (group) {\r\n  return (dispatch) => {\r\n    dispatch({type: SELECT_ACTION_GROUP, group});\r\n  };\r\n}\r\n\r\nexport function selectSubActionGroup (group) {\r\n  return (dispatch) => {\r\n    dispatch({type: SELECT_SUB_ACTION_GROUP, group});\r\n  };\r\n}\r\n\r\nexport function selectInteractionMode (interaction) {\r\n  return (dispatch) => {\r\n    dispatch({type: SELECT_INTERACTION_MODE, interaction});\r\n  };\r\n}\r\n\r\nexport function startEnteringActionArgs (actionName, action) {\r\n  return (dispatch) => {\r\n    dispatch({type: ENTERING_ACTION_ARGS, actionName, action});\r\n  };\r\n}\r\n\r\nexport function cancelPendingAction () {\r\n  return (dispatch) => {\r\n    dispatch({type: REMOVE_ACTION});\r\n  };\r\n}\r\n\r\nexport function setActionArg (index, value) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_ACTION_ARG, index, value});\r\n  };\r\n}\r\n","const BUTTON = {\r\n  DEFAULT: 'default',\r\n  PRIMARY: 'primary',\r\n  DISABLED: 'disabled',\r\n  DANGER: 'danger'\r\n};\r\n\r\nconst ALERT = {\r\n  ERROR: 'error',\r\n  WARNING: 'warning',\r\n  INFO: 'info'\r\n};\r\n\r\nconst INPUT = {\r\n  NUMBER: 'number',\r\n  TEXT: 'text',\r\n  TEXTAREA: 'textarea',\r\n  PASSWORD: 'password',\r\n  SUBMIT: 'submit'\r\n};\r\n\r\nconst ROW = {\r\n  FLEX: 'flex'\r\n};\r\n\r\n\r\nexport {\r\n  BUTTON,\r\n  ALERT,\r\n  INPUT,\r\n  ROW\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Form, Input, Radio, Row, Col } from 'antd';\r\nimport SessionStyles from './Session.css';\r\nimport { INPUT } from '../AntdTypes';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabTestobject extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, setServerParam, t} = this.props;\r\n\r\n    const placeholder = process.env.TESTOBJECT_API_KEY ?\r\n      t('usingDataFoundIn', {environmentVariable: 'TESTOBJECT_API_KEY'}) : t('testobjectApiKey');\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={24}>\r\n          <FormItem>\r\n            <Input id='testObjectPassword' type={INPUT.PASSWORD} placeholder={placeholder} addonBefore={t('TestObject API Key')} value={server.testobject.apiKey} onChange={(e) => setServerParam('apiKey', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={24}>\r\n          <FormItem>\r\n            <div className={['ant-input-group-addon', SessionStyles.addonDataCenter].join(' ') }>{t('TestObject Data Center')}</div>\r\n            <Radio.Group className={SessionStyles.inputDataCenter} buttonStyle=\"solid\" defaultValue='us1' id='testObjectDataCenter' value={server.testobject.dataCenter} onChange={(e) => setServerParam('dataCenter', e.target.value)}>\r\n              <Radio value='us1'>{t('US')}</Radio>\r\n              <Radio value='eu1'>{t('EU')}</Radio>\r\n            </Radio.Group>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Row, Col, Input } from 'antd';\r\nimport SessionStyles from './Session.css';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabHeadspin extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, setServerParam, t} = this.props;\r\n\r\n    const headspinUrl = 'https://xxxx.headspin.io:4723/v0/your-api-token/wd/hub';\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={24}>\r\n          <FormItem>\r\n            <Input className={SessionStyles.customServerInputLeft} id='headspinServerHost' placeholder={headspinUrl} addonBefore={t('serverTabHeasdpinWebDriverURL')}\r\n              value={server.headspin.webDriverUrl} onChange={(e) => setServerParam('webDriverUrl', e.target.value)} />\r\n            <p className={SessionStyles.localDesc}>{t('sessionHeadspinWebDriverURLDescription')}</p>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Input, Row, Col } from 'antd';\r\nimport { INPUT } from '../AntdTypes';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabBrowserstack extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, setServerParam, t} = this.props;\r\n\r\n    const browserstackUsernamePlaceholder = process.env.BROWSERSTACK_USERNAME ?\r\n      t('usingDataFoundIn', {environmentVariable: 'BROWSERSTACK_USERNAME'}) : t('yourUsername');\r\n\r\n    const browserstackAccessKeyPlaceholder = process.env.BROWSERSTACK_ACCESS_KEY ?\r\n      t('usingDataFoundIn', {environmentVariable: 'BROWSERSTACK_ACCESS_KEY'}) : t('yourAccessKey');\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='browserstackUsername' placeholder={browserstackUsernamePlaceholder} addonBefore={t('BrowserStack Username')} value={server.browserstack.username}\r\n              onChange={(e) => setServerParam('username', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='browserstackPassword' type={INPUT.PASSWORD} placeholder={browserstackAccessKeyPlaceholder} addonBefore={t('BrowserStack Access Key')}\r\n              value={server.browserstack.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Input, Row, Col } from 'antd';\r\nimport { INPUT } from '../AntdTypes';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabBitbar extends Component {\r\n\r\n  render () {\r\n    const { server, setServerParam, t } = this.props;\r\n\r\n    const bitbarApiKeyPlaceholder = process.env.BITBAR_API_KEY ?\r\n      t('usingDataFoundIn', {environmentVariable: 'BITBAR_API_KEY'}) : t('yourApiKey');\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='bitbarApiKey' type={INPUT.PASSWORD} placeholder={bitbarApiKeyPlaceholder} addonBefore={t('Bitbar API Key')}\r\n              value={server.bitbar.apiKey} onChange={(e) => setServerParam('apiKey', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Input, Row, Col } from 'antd';\r\nimport { INPUT } from '../AntdTypes';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabKobiton extends Component {\r\n\r\n  render () {\r\n    const {server, setServerParam, t} = this.props;\r\n    const kobitonUsernamePlaceholder = process.env.KOBITON_USERNAME ?\r\n      t('usingDataFoundIn', {environmentVariable: 'KOBITON_USERNAME'}) : t('yourUsername');\r\n\r\n    const kobitonAccessKeyPlaceholder = process.env.KOBITON_ACCESS_KEY ?\r\n      t('usingDataFoundIn', {environmentVariable: 'KOBITON_ACCESS_KEY'}) : t('yourAccessKey');\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='kobitonUsername' placeholder={kobitonUsernamePlaceholder} addonBefore={t('Kobiton Username')} value={server.kobiton.username}\r\n              onChange={(e) => setServerParam('username', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='kobitonAccessKey' type={INPUT.PASSWORD} placeholder={kobitonAccessKeyPlaceholder} addonBefore={t('Kobiton Access Key')} value={server.kobiton.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Row, Col, Input } from 'antd';\r\nimport SessionStyles from './Session.css';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabPerfecto extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, setServerParam, t} = this.props;\r\n\r\n    const cloudPerfectoUrl = 'cloud.Perfectomobile.com';\r\n\r\n    const perfectoTokenPlaceholder = process.env.PERFECTO_TOKEN ?\r\n      t('usingDataFoundIn', {environmentVariable: 'PERFECTO_TOKEN'}) : t('Add your token');\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input className={SessionStyles.customServerInputLeft} id='PerfectoServerHost' placeholder={cloudPerfectoUrl} addonBefore={t('Perfecto Host')}\r\n              value={server.perfecto.hostname} onChange={(e) => setServerParam('hostname', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='PerfectoPort' placeholder={80} addonBefore={t('Perfecto Port')} value={server.perfecto.port}\r\n              onChange={(e) => setServerParam('port', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n        <Col span={24}>\r\n          <FormItem>\r\n            <Input id='token' placeholder={perfectoTokenPlaceholder} addonBefore={t('Perfecto Token')} value={server.perfecto.token} onChange={(e) => setServerParam('token', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Row, Col, Input } from 'antd';\r\nimport SessionStyles from './Session.css';\r\nimport { INPUT } from '../AntdTypes';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabPcloudy extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, setServerParam, t} = this.props;\r\n\r\n    const pcloudyUsernamePlaceholder = 'username@pcloudy.com';\r\n    const pcloudyHostPlaceholder = 'cloud.pcloudy.com';\r\n    const pcloudyAccessKeyExample = 'kjdgtdwn65fdasd78uy6y';\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input className={SessionStyles.customServerInputLeft} id='PcloudyServerHost' placeholder={pcloudyHostPlaceholder} addonBefore={t('Pcloudy Host')}\r\n              value={server.pcloudy.hostname} onChange={(e) => setServerParam('hostname', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='username' type={INPUT.TEXT} placeholder={pcloudyUsernamePlaceholder} addonBefore={t('Pcloudy User Name')} value={server.pcloudy.username} onChange={(e) => setServerParam('username', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='accessKey' type={INPUT.PASSWORD} placeholder={pcloudyAccessKeyExample} addonBefore={t('Pcloudy API Key')}\r\n              value={server.pcloudy.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Row, Col, Input, Checkbox, Radio, Tooltip } from 'antd';\r\nimport SessionStyles from './Session.css';\r\nimport { INPUT } from '../AntdTypes';\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabSauce extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, setServerParam, t} = this.props;\r\n\r\n    const sauceUsernamePlaceholder = process.env.SAUCE_USERNAME ?\r\n      t('usingDataFoundIn', {environmentVariable: 'SAUCE_USERNAME'}) : t('yourUsername');\r\n\r\n    const sauceAccessKeyPlaceholder = process.env.SAUCE_ACCESS_KEY ?\r\n      t('usingDataFoundIn', {environmentVariable: 'SAUCE_ACCESS_KEY'}) : t('yourAccessKey');\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='sauceUsername' placeholder={sauceUsernamePlaceholder} addonBefore={t('Sauce Username')} value={server.sauce.username} onChange={(e) => setServerParam('username', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='saucePassword' type={INPUT.PASSWORD} placeholder={sauceAccessKeyPlaceholder}\r\n              addonBefore={t('Sauce Access Key')} value={server.sauce.accessKey} onChange={(e) => setServerParam('accessKey', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={24}>\r\n          <FormItem>\r\n            <div className={['ant-input-group-addon', SessionStyles.addonDataCenter].join(' ') }>{t('SauceLabs Data Center')}</div>\r\n            <Radio.Group className={[SessionStyles.inputDataCenter, SessionStyles.addonDataCenterRadioContainer].join(' ')} buttonStyle=\"solid\" defaultValue='us-west-1' id='sauceObjectDataCenter' value={server.sauce.dataCenter} onChange={(e) => setServerParam('dataCenter', e.target.value)}>\r\n              <Tooltip placement=\"top\" title={t('UP')}>\r\n                <Radio value='us-west-1'>{t('US')}</Radio>\r\n              </Tooltip>\r\n              <Radio value='eu-central-1'>{t('EU')}</Radio>\r\n            </Radio.Group>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={10}>\r\n          <FormItem>\r\n            <Checkbox checked={!!server.sauce.useSCProxy} onChange={(e) => setServerParam('useSCProxy', e.target.checked)}> {t('proxyThroughSC')}</Checkbox>\r\n          </FormItem>\r\n        </Col>\r\n        <Col span={6}>\r\n          <FormItem>\r\n            <Input addonBefore={t('Host')} placeholder={t('localhost')} disabled={!server.sauce.useSCProxy} value={server.sauce.scHost} onChange={(e) => setServerParam('scHost', e.target.value)}/>\r\n          </FormItem>\r\n        </Col>\r\n        <Col span={6}>\r\n          <FormItem>\r\n            <Input addonBefore={t('Port')} placeholder={4445} disabled={!server.sauce.useSCProxy} value={server.sauce.scPort} onChange={(e) => setServerParam('scPort', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Input, Row, Col } from 'antd';\r\nimport { INPUT } from '../AntdTypes';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabTestingbot extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, setServerParam, t} = this.props;\r\n\r\n    const testingbotKeyPlaceholder = process.env.TB_KEY ?\r\n      t('usingDataFoundIn', {environmentVariable: 'TB_KEY'}) : t('yourUsername');\r\n\r\n    const testingbotSecretPlaceholder = process.env.TB_SECRET ?\r\n      t('usingDataFoundIn', {environmentVariable: 'TB_SECRET'}) : t('yourAccessKey');\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='testingbotKey' placeholder={testingbotKeyPlaceholder} addonBefore={t('TestingBot Key')} value={server.testingbot.key} onChange={(e) => setServerParam('key', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='testingbotSecret' type={INPUT.PASSWORD} placeholder={testingbotSecretPlaceholder} addonBefore={t('TestingBot Secret')} value={server.testingbot.secret} onChange={(e) => setServerParam('secret', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Row, Col, Input } from 'antd';\r\nimport SessionStyles from './Session.css';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabExperitest extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, setServerParam, t} = this.props;\r\n    const accessKeyPlaceholder = 'accessKey';\r\n    const placeholderUrl = 'https://example.experitest.com';\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={24}>\r\n          <FormItem>\r\n            <Input className={SessionStyles.customServerInputLeft} id='ExperitestServerUrl' placeholder={placeholderUrl}\r\n              addonBefore={t('experitestUrl')} value={server.experitest.url}\r\n              onChange={(evt) => setServerParam('url', evt.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={24}>\r\n          <FormItem>\r\n            <Input className={SessionStyles.customServerInputLeft} id='ExperitestServerAccessKey' placeholder={accessKeyPlaceholder}\r\n              addonBefore={t('experitestAccessKey')} value={server.experitest.accessKey}\r\n              onChange={(evt) => setServerParam('accessKey', evt.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Input, Row, Col } from 'antd';\r\n\r\nconst FormItem = Form.Item;\r\nexport default class ServerTabRoboticMobi extends Component {\r\n  render () {\r\n\r\n    const { server, setServerParam, t } = this.props;\r\n\r\n    const placeholder = process.env.ROBOTIC_MOBI_TOKEN ?\r\n      t('usingDataFoundIn', { environmentVariable: 'ROBOTIC_MOBI_TOKEN' }) : t('roboticMobiToken');\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={24}>\r\n          <FormItem>\r\n            <Input id='roboticMobiToken' placeholder={placeholder} addonBefore={t('Robotic.Mobi Token')} value={server.roboticmobi.token} onChange={(e) => setServerParam('token', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ServerTabTestobject from './ServerTabTestobject';\r\nimport ServerTabHeadspin from './ServerTabHeadspin';\r\nimport ServerTabBrowserstack from './ServerTabBrowserstack';\r\nimport ServerTabBitbar from './ServerTabBitbar';\r\nimport ServerTabKobiton from './ServerTabKobiton';\r\nimport ServerTabPerfecto from './ServerTabPerfecto';\r\nimport ServerTabPcloudy from './ServerTabPcloudy';\r\nimport ServerTabSauce from './ServerTabSauce';\r\nimport ServerTabTestingbot from './ServerTabTestingbot';\r\nimport ServerTabExperitest from './ServerTabExperitest';\r\nimport ServerTabRoboticMobi from './ServerTabRoboticMobi';\r\n\r\nimport SessionStyles from './Session.css';\r\n\r\n// ParcelJS handles image loading by exporting a path to the image\r\nimport SauceLogo from '../../images/sauce_logo.svg';\r\nimport TestObjectLogo from '../../images/testobject_logo.svg';\r\nimport HeadSpinLogo from '../../images/headspin_logo.svg';\r\nimport BrowserStackLogo from '../../images/browserstack_logo.svg';\r\nimport BitBarLogo from '../../images/bitbar_logo.svg';\r\nimport KobitonLogo from '../../images/kobiton_logo.svg';\r\nimport PerfectoLogo from '../../images/perfecto_logo.png';\r\nimport PcloudyLogo from '../../images/pcloudy_logo.svg';\r\nimport TestingBotLogo from '../../images/testingbot_logo.svg';\r\nimport ExperitestLogo from '../../images/experitest_logo.svg';\r\nimport RoboticMobiLogo from '../../images/roboticmobi_logo.svg';\r\n\r\nconst CloudProviders = {\r\n  sauce: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={SauceLogo} /></span>,\r\n    tab: (props) => <ServerTabSauce {...props} />,\r\n    logo: SauceLogo,\r\n  },\r\n  testobject: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={TestObjectLogo} /></span>,\r\n    tab: (props) => <ServerTabTestobject {...props} />,\r\n    logo: TestObjectLogo,\r\n  },\r\n  headspin: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={HeadSpinLogo} /></span>,\r\n    tab: (props) => <ServerTabHeadspin {...props} />,\r\n    logo: HeadSpinLogo,\r\n  },\r\n  browserstack: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={BrowserStackLogo} /></span>,\r\n    tab: (props) => <ServerTabBrowserstack {...props} />,\r\n    logo: BrowserStackLogo,\r\n  },\r\n  bitbar: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={BitBarLogo} /></span>,\r\n    tab: (props) => <ServerTabBitbar {...props} />,\r\n    logo: BitBarLogo,\r\n  },\r\n  kobiton: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={KobitonLogo} /></span>,\r\n    tab: (props) => <ServerTabKobiton {...props} />,\r\n    logo: KobitonLogo,\r\n  },\r\n  perfecto: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={PerfectoLogo} /></span>,\r\n    tab: (props) => <ServerTabPerfecto {...props} />,\r\n    logo: PerfectoLogo,\r\n  },\r\n  pcloudy: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={PcloudyLogo} /></span>,\r\n    tab: (props) => <ServerTabPcloudy {...props} />,\r\n    logo: PcloudyLogo,\r\n  },\r\n  testingbot: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={TestingBotLogo} /></span>,\r\n    tab: (props) => <ServerTabTestingbot {...props} />,\r\n    logo: TestingBotLogo,\r\n  },\r\n  experitest: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={ExperitestLogo} /></span>,\r\n    tab: (props) => <ServerTabExperitest {...props} />,\r\n    logo: ExperitestLogo,\r\n  },\r\n  roboticmobi: {\r\n    tabhead: () => <span className={SessionStyles.tabText}><img src={RoboticMobiLogo} /></span>,\r\n    tab: (props) => <ServerTabRoboticMobi {...props} />,\r\n    logo: RoboticMobiLogo,\r\n  }\r\n};\r\n\r\nexport default CloudProviders;\r\n","import { ipcRenderer } from 'electron';\r\nimport settings from '../../shared/settings';\r\nimport { v4 as UUID } from 'uuid';\r\nimport url from 'url';\r\nimport { push } from 'connected-react-router';\r\nimport { notification } from 'antd';\r\nimport { debounce, toPairs, union, without, keys } from 'lodash';\r\nimport { setSessionDetails } from './Inspector';\r\nimport i18n from '../../configs/i18next.config.renderer';\r\nimport CloudProviders from '../components/Session/CloudProviders';\r\n\r\nexport const NEW_SESSION_REQUESTED = 'NEW_SESSION_REQUESTED';\r\nexport const NEW_SESSION_BEGAN = 'NEW_SESSION_BEGAN';\r\nexport const NEW_SESSION_DONE = 'NEW_SESSION_DONE';\r\nexport const CHANGE_CAPABILITY = 'CHANGE_CAPABILITY';\r\nexport const SAVE_SESSION_REQUESTED = 'SAVE_SESSION_REQUESTED';\r\nexport const SAVE_SESSION_DONE = 'SAVE_SESSION_DONE';\r\nexport const GET_SAVED_SESSIONS_REQUESTED = 'GET_SAVED_SESSIONS_REQUESTED';\r\nexport const GET_SAVED_SESSIONS_DONE = 'GET_SAVED_SESSIONS_DONE';\r\nexport const SET_CAPABILITY_PARAM = 'SET_CAPABILITY_PARAM';\r\nexport const ADD_CAPABILITY = 'ADD_CAPABILITY';\r\nexport const REMOVE_CAPABILITY = 'REMOVE_CAPABILITY';\r\nexport const SWITCHED_TABS = 'SWITCHED_TABS';\r\nexport const SET_CAPS = 'SET_CAPS';\r\nexport const SAVE_AS_MODAL_REQUESTED = 'SAVE_AS_MODAL_REQUESTED';\r\nexport const HIDE_SAVE_AS_MODAL_REQUESTED = 'HIDE_SAVE_AS_MODAL_REQUESTED';\r\nexport const SET_SAVE_AS_TEXT = 'SET_SAVE_AS_TEXT';\r\nexport const DELETE_SAVED_SESSION_REQUESTED = 'DELETE_SAVED_SESSION_REQUESTED';\r\nexport const DELETE_SAVED_SESSION_DONE = 'DELETE_SAVED_SESSION_DONE';\r\nexport const CHANGE_SERVER_TYPE = 'CHANGE_SERVER_TYPE';\r\nexport const SET_SERVER_PARAM = 'SET_SERVER_PARAM';\r\nexport const SET_SERVER = 'SET_SERVER';\r\nexport const SESSION_LOADING = 'SESSION_LOADING';\r\nexport const SESSION_LOADING_DONE = 'SESSION_LOADING_DONE';\r\n\r\nexport const SAVED_SESSIONS = 'SAVED_SESSIONS';\r\nexport const SESSION_SERVER_PARAMS = 'SESSION_SERVER_PARAMS';\r\nexport const SESSION_SERVER_TYPE = 'SESSION_SERVER_TYPE';\r\nexport const SERVER_ARGS = 'SERVER_ARGS';\r\nexport const VISIBLE_PROVIDERS = 'VISIBLE_PROVIDERS';\r\n\r\nexport const SET_ATTACH_SESS_ID = 'SET_ATTACH_SESS_ID';\r\n\r\nexport const GET_SESSIONS_REQUESTED = 'GET_SESSIONS_REQUESTED';\r\nexport const GET_SESSIONS_DONE = 'GET_SESSIONS_DONE';\r\n\r\n\r\nexport const ENABLE_DESIRED_CAPS_EDITOR = 'ENABLE_DESIRED_CAPS_EDITOR';\r\nexport const ABORT_DESIRED_CAPS_EDITOR = 'ABORT_DESIRED_CAPS_EDITOR';\r\nexport const SAVE_RAW_DESIRED_CAPS = 'SAVE_RAW_DESIRED_CAPS';\r\nexport const SET_RAW_DESIRED_CAPS = 'SET_RAW_DESIRED_CAPS';\r\nexport const SHOW_DESIRED_CAPS_JSON_ERROR = 'SHOW_DESIRED_CAPS_JSON_ERROR';\r\n\r\nexport const IS_ADDING_CLOUD_PROVIDER = 'IS_ADDING_CLOUD_PROVIDER';\r\n\r\nexport const SET_PROVIDERS = 'SET_PROVIDERS';\r\n\r\nconst serverTypes = {};\r\nfor (const key of keys(CloudProviders)) {\r\n  serverTypes[key] = key;\r\n}\r\nserverTypes.local = 'local';\r\nserverTypes.remote = 'remote';\r\n\r\nexport const ServerTypes = serverTypes;\r\n\r\nconst JSON_TYPES = ['object', 'number', 'boolean'];\r\n\r\nexport function getCapsObject (caps) {\r\n  return Object.assign({}, ...(caps.map((cap) => {\r\n    if (JSON_TYPES.indexOf(cap.type) !== -1) {\r\n      try {\r\n        let obj = JSON.parse(cap.value);\r\n        return {[cap.name]: obj};\r\n      } catch (ign) {}\r\n    }\r\n    return {[cap.name]: cap.value};\r\n  })));\r\n}\r\n\r\nexport function showError (e, methodName, secs = 5) {\r\n  let errMessage;\r\n  if (e['jsonwire-error'] && e['jsonwire-error'].status === 7) {\r\n    // FIXME: we probably should set 'findElement' as the method name\r\n    // if it is also number.\r\n    if (methodName === 10) {\r\n      methodName = 'findElements';\r\n    }\r\n    errMessage = i18n.t('findElementFailure', {methodName});\r\n    if (e.message) {\r\n      errMessage += ` Original error: '${e.message}'`;\r\n    }\r\n  } else if (e.data) {\r\n    try {\r\n      e.data = JSON.parse(e.data);\r\n    } catch (ign) {}\r\n    if (e.data.value && e.data.value.message) {\r\n      errMessage = e.data.value.message;\r\n    } else {\r\n      errMessage = e.data;\r\n    }\r\n  } else if (e.message) {\r\n    errMessage = e.message;\r\n  } else if (e.code) {\r\n    errMessage = e.code;\r\n  } else {\r\n    errMessage = i18n.t('Could not start session');\r\n  }\r\n  if (errMessage === 'ECONNREFUSED') {\r\n    errMessage = i18n.t('couldNotConnect');\r\n  }\r\n\r\n  notification.error({\r\n    message: methodName ? i18n.t('callToMethodFailed', {methodName}) : i18n.t('Error'),\r\n    description: errMessage,\r\n    duration: secs\r\n  });\r\n\r\n}\r\n\r\n/**\r\n * Change the caps object and then go back to the new session tab\r\n */\r\nexport function setCaps (caps, uuid) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_CAPS, caps, uuid});\r\n  };\r\n}\r\n\r\n/**\r\n * Change a single desired capability\r\n */\r\nexport function changeCapability (key, value) {\r\n  return (dispatch) => {\r\n    dispatch({type: CHANGE_CAPABILITY, key, value});\r\n  };\r\n}\r\n\r\n/**\r\n * Push a capability to the list\r\n */\r\nexport function addCapability () {\r\n  return (dispatch) => {\r\n    dispatch({type: ADD_CAPABILITY});\r\n  };\r\n}\r\n\r\n/**\r\n * Update value of a capability parameter\r\n */\r\nexport function setCapabilityParam (index, name, value) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_CAPABILITY_PARAM, index, name, value});\r\n  };\r\n}\r\n\r\n/**\r\n * Delete a capability from the list\r\n */\r\nexport function removeCapability (index) {\r\n  return (dispatch) => {\r\n    dispatch({type: REMOVE_CAPABILITY, index});\r\n  };\r\n}\r\n\r\n/**\r\n * Get the server info for the current serverType\r\n */\r\nexport function getServerInfo (session) {\r\n  let host, port, username, accessKey, https, path, token;\r\n  switch (session.serverType) {\r\n    case ServerTypes.local:\r\n      host = session.server.local.hostname;\r\n      if (host === '0.0.0.0') {\r\n        // if we're on windows, we won't be able to connect directly to '0.0.0.0'\r\n        // so just connect to localhost; if we're listening on all interfaces,\r\n        // that will of course include 127.0.0.1 on all platforms\r\n        host = 'localhost';\r\n      }\r\n      port = session.server.local.port;\r\n      break;\r\n    case ServerTypes.remote:\r\n      host = session.server.remote.hostname || '127.0.0.1';\r\n      port = session.server.remote.port || 4723;\r\n      path = session.server.remote.path;\r\n      https = session.server.remote.ssl;\r\n      break;\r\n    case ServerTypes.sauce:\r\n      host = `ondemand.${session.server.sauce.dataCenter}.saucelabs.com`;\r\n      port = 80;\r\n      if (session.server.sauce.useSCProxy) {\r\n        host = session.server.sauce.scHost || 'localhost';\r\n        port = parseInt(session.server.sauce.scPort, 10) || 4445;\r\n      }\r\n      username = session.server.sauce.username || process.env.SAUCE_USERNAME;\r\n      accessKey = session.server.sauce.accessKey || process.env.SAUCE_ACCESS_KEY;\r\n      if (!username || !accessKey) {\r\n        return;\r\n      }\r\n      https = false;\r\n      break;\r\n    case ServerTypes.testobject:\r\n      host = process.env.TESTOBJECT_HOST || `${session.server.testobject.dataCenter || 'us1'}.appium.testobject.com`;\r\n      port = 443;\r\n      https = true;\r\n      break;\r\n    case ServerTypes.headspin: {\r\n      const headspinUrl = url.parse(session.server.headspin.webDriverUrl);\r\n      host = session.server.headspin.hostname = headspinUrl.hostname;\r\n      port = session.server.headspin.port = headspinUrl.port;\r\n      path = session.server.headspin.path = headspinUrl.pathname;\r\n      https = session.server.headspin.ssl = headspinUrl.protocol === 'https:';\r\n      break;\r\n    }\r\n    case ServerTypes.perfecto:\r\n      host = session.server.perfecto.hostname;\r\n      port = session.server.perfecto.port || 80;\r\n      token = session.server.perfecto.token || process.env.PERFECTO_TOKEN;\r\n      path = session.server.perfecto.path = '/nexperience/perfectomobile/wd/hub';\r\n      if (!token) {\r\n        return;\r\n      }\r\n      https = session.server.perfecto.ssl = false;\r\n      break;\r\n    case ServerTypes.browserstack:\r\n      host = session.server.browserstack.hostname = process.env.BROWSERSTACK_HOST || 'hub-cloud.browserstack.com';\r\n      port = session.server.browserstack.port = process.env.BROWSERSTACK_PORT || 443;\r\n      path = session.server.browserstack.path = '/wd/hub';\r\n      username = session.server.browserstack.username || process.env.BROWSERSTACK_USERNAME;\r\n      accessKey = session.server.browserstack.accessKey || process.env.BROWSERSTACK_ACCESS_KEY;\r\n      if (!username || !accessKey) {\r\n        return;\r\n      }\r\n      https = session.server.browserstack.ssl = (parseInt(port, 10) === 443);\r\n      break;\r\n    case ServerTypes.bitbar:\r\n      host = process.env.BITBAR_HOST || 'appium.bitbar.com';\r\n      port = session.server.bitbar.port = 443;\r\n      path = session.server.bitbar.path = '/wd/hub';\r\n      accessKey = session.server.bitbar.apiKey || process.env.BITBAR_API_KEY;\r\n      if (!accessKey) {\r\n        return;\r\n      }\r\n      https = session.server.bitbar.ssl = true;\r\n      break;\r\n    case ServerTypes.kobiton:\r\n      host = process.env.KOBITON_HOST || 'api.kobiton.com';\r\n      port = session.server.kobiton.port = 443;\r\n      path = session.server.kobiton.path = '/wd/hub';\r\n      username = session.server.kobiton.username || process.env.KOBITON_USERNAME;\r\n      accessKey = session.server.kobiton.accessKey || process.env.KOBITON_ACCESS_KEY;\r\n      if (!username || !accessKey) {\r\n        return;\r\n      }\r\n      https = session.server.kobiton.ssl = true;\r\n      break;\r\n    case ServerTypes.pcloudy:\r\n      host = session.server.pcloudy.hostname;\r\n      port = session.server.pcloudy.port = 443;\r\n      path = session.server.pcloudy.path = '/objectspy/wd/hub';\r\n      username = session.server.pcloudy.username || process.env.PCLOUDY_USERNAME;\r\n      accessKey = session.server.pcloudy.accessKey || process.env.PCLOUDY_ACCESS_KEY;\r\n      if (!username || !accessKey) {\r\n        return;\r\n      }\r\n      https = session.server.pcloudy.ssl = true;\r\n      break;\r\n    case ServerTypes.testingbot:\r\n      host = session.server.testingbot.hostname = process.env.TB_HOST || 'hub.testingbot.com';\r\n      port = session.server.testingbot.port = 443;\r\n      username = session.server.testingbot.key || process.env.TB_KEY;\r\n      accessKey = session.server.testingbot.secret || process.env.TB_SECRET;\r\n      if (!username || !accessKey) {\r\n        return;\r\n      }\r\n      https = session.server.testingbot.ssl = true;\r\n      break;\r\n    case ServerTypes.experitest: {\r\n      if (!session.server.experitest.url || !session.server.experitest.accessKey) {\r\n        return;\r\n      }\r\n      let experitestUrl = url.parse(session.server.experitest.url);\r\n      host = session.server.experitest.hostname = experitestUrl.hostname;\r\n      path = session.server.experitest.path = '/wd/hub';\r\n      port = session.server.experitest.port = experitestUrl.port;\r\n      https = session.server.experitest.ssl = experitestUrl.protocol === 'https:';\r\n      break;\r\n    }\r\n    case ServerTypes.roboticmobi: {\r\n      host = 'api.robotic.mobi';\r\n      path = '/wd/hub';\r\n      port = 443;\r\n      https = 'https:';\r\n      break;\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n  return {host, port, username, accessKey, https, path, token};\r\n}\r\n\r\n/**\r\n * Start a new appium session with the given caps\r\n */\r\nexport function newSession (caps, attachSessId = null) {\r\n  return async (dispatch, getState) => {\r\n\r\n    dispatch({type: NEW_SESSION_REQUESTED, caps});\r\n\r\n    let desiredCapabilities = caps ? getCapsObject(caps) : {};\r\n    let session = getState().session;\r\n    let {host, port, username, accessKey, https, path, token} = getServerInfo(session);\r\n    desiredCapabilities = addCustomCaps(desiredCapabilities);\r\n\r\n    switch (session.serverType) {\r\n      case ServerTypes.local:\r\n        break;\r\n      case ServerTypes.remote:\r\n        break;\r\n      case ServerTypes.sauce:\r\n        if (!username || !accessKey) {\r\n          notification.error({\r\n            message: i18n.t('Error'),\r\n            description: i18n.t('sauceCredentialsRequired'),\r\n            duration: 4\r\n          });\r\n          return;\r\n        }\r\n        break;\r\n      case ServerTypes.testobject:\r\n        if (caps) {\r\n          desiredCapabilities.testobject_api_key = session.server.testobject.apiKey || process.env.TESTOBJECT_API_KEY;\r\n        }\r\n        break;\r\n      case ServerTypes.headspin: {\r\n        break;\r\n      }\r\n      case ServerTypes.perfecto:\r\n        if (!token) {\r\n          notification.error({\r\n            message: i18n.t('Error'),\r\n            description: i18n.t('Perfecto SecurityToken is required'),\r\n            duration: 4\r\n          });\r\n          return;\r\n        }\r\n        desiredCapabilities.securityToken = token;\r\n        break;\r\n      case ServerTypes.browserstack:\r\n        desiredCapabilities['browserstack.source'] = 'appiumdesktop';\r\n        if (!username || !accessKey) {\r\n          notification.error({\r\n            message: i18n.t('Error'),\r\n            description: i18n.t('browserstackCredentialsRequired'),\r\n            duration: 4\r\n          });\r\n          return;\r\n        }\r\n        break;\r\n      case ServerTypes.bitbar:\r\n        if (!accessKey) {\r\n          notification.error({\r\n            message: i18n.t('Error'),\r\n            description: i18n.t('bitbarCredentialsRequired'),\r\n            duration: 4\r\n          });\r\n          return;\r\n        }\r\n        desiredCapabilities.testdroid_source = 'appiumdesktop';\r\n        desiredCapabilities.testdroid_apiKey = accessKey;\r\n        break;\r\n      case ServerTypes.kobiton:\r\n        desiredCapabilities['kobiton.source'] = 'appiumdesktop';\r\n        if (!username || !accessKey) {\r\n          notification.error({\r\n            message: i18n.t('Error'),\r\n            description: i18n.t('kobitonCredentialsRequired'),\r\n            duration: 4\r\n          });\r\n          return;\r\n        }\r\n        break;\r\n      case ServerTypes.pcloudy:\r\n        desiredCapabilities.pCloudy_Username = username;\r\n        desiredCapabilities.pCloudy_ApiKey = accessKey;\r\n        if (!username || !accessKey) {\r\n          notification.error({\r\n            message: 'Error',\r\n            description: 'PCLOUDY username and api key are required!',\r\n            duration: 4\r\n          });\r\n          return;\r\n        }\r\n        break;\r\n      case ServerTypes.testingbot:\r\n        desiredCapabilities['tb.source'] = 'appiumdesktop';\r\n        if (!username || !accessKey) {\r\n          notification.error({\r\n            message: 'Error',\r\n            description: i18n.t('testingbotCredentialsRequired'),\r\n            duration: 4\r\n          });\r\n          return;\r\n        }\r\n        break;\r\n      case ServerTypes.experitest: {\r\n        if (!session.server.experitest.url || !session.server.experitest.accessKey) {\r\n          notification.error({\r\n            message: i18n.t('Error'),\r\n            description: i18n.t('experitestAccessKeyURLRequired'),\r\n            duration: 4\r\n          });\r\n          return;\r\n        }\r\n        desiredCapabilities['experitest:accessKey'] = session.server.experitest.accessKey;\r\n        break;\r\n      } case ServerTypes.roboticmobi: {\r\n        if (caps) {\r\n          desiredCapabilities.robotic_mobi_token = session.server.roboticmobi.token || process.env.ROBOTIC_MOBI_TOKEN;\r\n        }\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n\r\n    let rejectUnauthorized = !session.server.advanced.allowUnauthorized;\r\n    let proxy;\r\n    if (session.server.advanced.useProxy && session.server.advanced.proxy) {\r\n      proxy = session.server.advanced.proxy;\r\n    }\r\n\r\n    // Start the session\r\n    ipcRenderer.send('appium-create-new-session', {\r\n      desiredCapabilities,\r\n      attachSessId,\r\n      host,\r\n      port,\r\n      path,\r\n      username,\r\n      accessKey,\r\n      https,\r\n      rejectUnauthorized,\r\n      proxy,\r\n    });\r\n\r\n    dispatch({type: SESSION_LOADING});\r\n\r\n    // If it failed, show an alert saying it failed\r\n    ipcRenderer.once('appium-new-session-failed', (evt, e) => {\r\n      dispatch({type: SESSION_LOADING_DONE});\r\n      removeNewSessionListeners();\r\n      showError(e, 0);\r\n    });\r\n\r\n    ipcRenderer.once('appium-new-session-ready', () => {\r\n      dispatch({type: SESSION_LOADING_DONE});\r\n      // pass some state to the inspector that it needs to build recorder\r\n      // code boilerplate\r\n      setSessionDetails({\r\n        desiredCapabilities,\r\n        host,\r\n        port,\r\n        path,\r\n        username,\r\n        accessKey,\r\n        https,\r\n      })(dispatch);\r\n      removeNewSessionListeners();\r\n      dispatch(push('/inspector'));\r\n    });\r\n\r\n    // Save the current server settings\r\n    await settings.set(SESSION_SERVER_PARAMS, session.server);\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Saves the caps\r\n */\r\nexport function saveSession (caps, params) {\r\n  return async (dispatch) => {\r\n    let {name, uuid} = params;\r\n    dispatch({type: SAVE_SESSION_REQUESTED});\r\n    let savedSessions = await settings.get(SAVED_SESSIONS);\r\n    if (!uuid) {\r\n\r\n      // If it's a new session, add it to the list\r\n      uuid = UUID();\r\n      let newSavedSession = {\r\n        date: +(new Date()),\r\n        name,\r\n        uuid,\r\n        caps,\r\n      };\r\n      savedSessions.push(newSavedSession);\r\n    } else {\r\n\r\n      // If it's an existing session, overwrite it\r\n      for (let session of savedSessions) {\r\n        if (session.uuid === uuid) {\r\n          session.caps = caps;\r\n        }\r\n      }\r\n    }\r\n    await settings.set(SAVED_SESSIONS, savedSessions);\r\n    await getSavedSessions()(dispatch);\r\n    dispatch({type: SET_CAPS, caps, uuid});\r\n    dispatch({type: SAVE_SESSION_DONE});\r\n  };\r\n}\r\n\r\n/**\r\n * Get the sessions saved by the user\r\n */\r\nexport function getSavedSessions () {\r\n  return async (dispatch) => {\r\n    dispatch({type: GET_SAVED_SESSIONS_REQUESTED});\r\n    let savedSessions = await settings.get(SAVED_SESSIONS);\r\n    dispatch({type: GET_SAVED_SESSIONS_DONE, savedSessions});\r\n  };\r\n}\r\n\r\n/**\r\n * Switch to a different tab\r\n */\r\nexport function switchTabs (key) {\r\n  return (dispatch) => {\r\n    dispatch({type: SWITCHED_TABS, key});\r\n  };\r\n}\r\n\r\n/**\r\n * Open a 'Save As' modal\r\n */\r\nexport function requestSaveAsModal () {\r\n  return (dispatch) => {\r\n    dispatch({type: SAVE_AS_MODAL_REQUESTED});\r\n  };\r\n}\r\n\r\n/**\r\n * Hide the 'Save As' modal\r\n */\r\nexport function hideSaveAsModal () {\r\n  return (dispatch) => {\r\n    dispatch({type: HIDE_SAVE_AS_MODAL_REQUESTED});\r\n  };\r\n}\r\n\r\n/**\r\n * Set the text to save capabilities as\r\n */\r\nexport function setSaveAsText (saveAsText) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_SAVE_AS_TEXT, saveAsText});\r\n  };\r\n}\r\n\r\n/**\r\n * Delete a saved session\r\n */\r\nexport function deleteSavedSession (uuid) {\r\n  return async (dispatch) => {\r\n    dispatch({type: DELETE_SAVED_SESSION_REQUESTED, uuid});\r\n    let savedSessions = await settings.get(SAVED_SESSIONS);\r\n    let newSessions = savedSessions.filter((session) => session.uuid !== uuid);\r\n    await settings.set(SAVED_SESSIONS, newSessions);\r\n    dispatch({type: DELETE_SAVED_SESSION_DONE});\r\n    dispatch({type: GET_SAVED_SESSIONS_DONE, savedSessions: newSessions});\r\n  };\r\n}\r\n\r\n/**\r\n * Set the session id to attach to\r\n */\r\nexport function setAttachSessId (attachSessId) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_ATTACH_SESS_ID, attachSessId});\r\n  };\r\n}\r\n\r\n/**\r\n * Change the server type\r\n */\r\nexport function changeServerType (serverType) {\r\n  return async (dispatch, getState) => {\r\n    await settings.set(SESSION_SERVER_TYPE, serverType);\r\n    dispatch({type: CHANGE_SERVER_TYPE, serverType});\r\n    getRunningSessions()(dispatch, getState);\r\n  };\r\n}\r\n\r\n/**\r\n * Set a server parameter (host, port, etc...)\r\n */\r\nexport function setServerParam (name, value, serverType) {\r\n  const debounceGetRunningSessions = debounce(getRunningSessions(), 5000);\r\n  return async (dispatch, getState) => {\r\n    serverType = serverType || getState().session.serverType;\r\n    await settings.set(SESSION_SERVER_TYPE, serverType);\r\n    dispatch({type: SET_SERVER_PARAM, serverType, name, value});\r\n    debounceGetRunningSessions(dispatch, getState);\r\n  };\r\n}\r\n\r\n/**\r\n * Set the local server hostname and port to whatever was saved in 'actions/StartServer.js' so that it\r\n * defaults to what the currently running appium server is\r\n */\r\nexport function setLocalServerParams () {\r\n  return async (dispatch, getState) => {\r\n    let serverArgs = await settings.get(SERVER_ARGS);\r\n    // Get saved server args from settings and set local server settings to it. If there are no saved args, set local\r\n    // host and port to undefined\r\n    if (serverArgs) {\r\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'port', value: serverArgs.port});\r\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'hostname', value: 'localhost'});\r\n    } else {\r\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'port', value: undefined});\r\n      dispatch({type: SET_SERVER_PARAM, serverType: ServerTypes.local, name: 'hostname', value: undefined});\r\n      if (getState().session.serverType === 'local') {\r\n        await changeServerType('remote')(dispatch, getState);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Set the server parameters to whatever they were last saved as.\r\n * Params are saved whenever there's a new session\r\n */\r\nexport function setSavedServerParams () {\r\n  return async (dispatch, getState) => {\r\n    let server = await settings.get(SESSION_SERVER_PARAMS);\r\n    let serverType = await settings.get(SESSION_SERVER_TYPE);\r\n    let currentProviders = getState().session.visibleProviders;\r\n\r\n    if (server) {\r\n      // if we have a cloud provider as a saved server, but for some reason the\r\n      // cloud provider is no longer in the list, revert server type to remote\r\n      if (keys(CloudProviders).includes(serverType) &&\r\n          !currentProviders.includes(serverType)) {\r\n        serverType = ServerTypes.remote;\r\n      }\r\n      dispatch({type: SET_SERVER, server, serverType});\r\n    }\r\n  };\r\n}\r\n\r\nexport function getRunningSessions () {\r\n  return (dispatch, getState) => {\r\n    const avoidServerTypes = [\r\n      'sauce', 'testobject'\r\n    ];\r\n    // Get currently running sessions for this server\r\n    const state = getState().session;\r\n    const {host, port, username, accessKey, https, path} = getServerInfo(state);\r\n\r\n    dispatch({type: GET_SESSIONS_REQUESTED});\r\n    if (avoidServerTypes.includes(state.serverType)) {\r\n      dispatch({type: GET_SESSIONS_DONE});\r\n    } else {\r\n      ipcRenderer.send('appium-client-get-sessions', {\r\n        host,\r\n        port,\r\n        path,\r\n        ssl: https,\r\n        username,\r\n        accessKey\r\n      });\r\n      ipcRenderer.once('appium-client-get-sessions-response', (evt, e) => {\r\n        const res = JSON.parse(e.res);\r\n        dispatch({type: GET_SESSIONS_DONE, sessions: res.value});\r\n        removeRunningSessionsListeners();\r\n      });\r\n      ipcRenderer.once('appium-client-get-sessions-fail', () => {\r\n        dispatch({type: GET_SESSIONS_DONE});\r\n        removeRunningSessionsListeners();\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport function startDesiredCapsEditor () {\r\n  return (dispatch) => {\r\n    dispatch({type: ENABLE_DESIRED_CAPS_EDITOR});\r\n  };\r\n}\r\n\r\nexport function abortDesiredCapsEditor () {\r\n  return (dispatch) => {\r\n    dispatch({type: ABORT_DESIRED_CAPS_EDITOR});\r\n  };\r\n}\r\n\r\nexport function saveRawDesiredCaps () {\r\n  return (dispatch, getState) => {\r\n    const state = getState().session;\r\n    const {rawDesiredCaps, caps: capsArray} = state;\r\n    try {\r\n      const newCaps = JSON.parse(rawDesiredCaps);\r\n\r\n      // Transform the current caps array to an object\r\n      let caps = {};\r\n      for (let {type, name, value} of capsArray) {\r\n        caps[name] = {type, value};\r\n      }\r\n\r\n      // Translate the caps JSON to array format\r\n      let newCapsArray = toPairs(newCaps).map(([name, value]) => ({\r\n        type: (() => {\r\n          let type = typeof value;\r\n\r\n          // If we already have this cap and it's file type, keep the type the same\r\n          if (caps[name] && caps[name].type === 'file' && type === 'string') {\r\n            return 'file';\r\n          } else if (type === 'string') {\r\n            return 'text';\r\n          } else {\r\n            return type;\r\n          }\r\n        })(),\r\n        name,\r\n        value,\r\n      }));\r\n      dispatch({type: SAVE_RAW_DESIRED_CAPS, caps: newCapsArray});\r\n    } catch (e) {\r\n      dispatch({type: SHOW_DESIRED_CAPS_JSON_ERROR, message: e.message});\r\n    }\r\n  };\r\n}\r\n\r\nexport function setRawDesiredCaps (rawDesiredCaps) {\r\n  return (dispatch, getState) => {\r\n    const state = getState().session;\r\n    let isValidCapsJson = true;\r\n    let invalidCapsJsonReason;\r\n    if (state.isValidatingCapsJson) {\r\n      try {\r\n        JSON.parse(rawDesiredCaps);\r\n      } catch (e) {\r\n        isValidCapsJson = false;\r\n        invalidCapsJsonReason = e.message;\r\n      }\r\n    }\r\n    dispatch({type: SET_RAW_DESIRED_CAPS, rawDesiredCaps, isValidCapsJson, invalidCapsJsonReason});\r\n  };\r\n}\r\n\r\nfunction removeNewSessionListeners () {\r\n  ipcRenderer.removeAllListeners('appium-new-session-failed');\r\n  ipcRenderer.removeAllListeners('appium-new-session-ready');\r\n}\r\n\r\nfunction removeRunningSessionsListeners () {\r\n  ipcRenderer.removeAllListeners('appium-client-get-sessions-fail');\r\n  ipcRenderer.removeAllListeners('appium-client-get-sessions-response');\r\n}\r\n\r\nexport function addCloudProvider () {\r\n  return (dispatch) => {\r\n    dispatch({type: IS_ADDING_CLOUD_PROVIDER, isAddingProvider: true});\r\n  };\r\n}\r\n\r\nexport function stopAddCloudProvider () {\r\n  return (dispatch) => {\r\n    dispatch({type: IS_ADDING_CLOUD_PROVIDER, isAddingProvider: false});\r\n  };\r\n}\r\n\r\nexport function addVisibleProvider (provider) {\r\n  return async (dispatch, getState) => {\r\n    let currentProviders = getState().session.visibleProviders;\r\n    const providers = union(currentProviders, [provider]);\r\n    await settings.set(VISIBLE_PROVIDERS, providers);\r\n    dispatch({type: SET_PROVIDERS, providers});\r\n  };\r\n}\r\n\r\nexport function removeVisibleProvider (provider) {\r\n  return async (dispatch, getState) => {\r\n    let currentProviders = getState().session.visibleProviders;\r\n    const providers = without(currentProviders, provider);\r\n    await settings.set(VISIBLE_PROVIDERS, providers);\r\n    dispatch({type: SET_PROVIDERS, providers});\r\n  };\r\n}\r\n\r\nexport function setVisibleProviders () {\r\n  return async (dispatch) => {\r\n    const providers = await settings.get(VISIBLE_PROVIDERS);\r\n    dispatch({type: SET_PROVIDERS, providers});\r\n  };\r\n}\r\n\r\n/**\r\n * Add custom capabilities\r\n *\r\n * @param {object} caps\r\n */\r\nfunction addCustomCaps (caps) {\r\n  const {browserName = '', platformName = ''} = caps;\r\n  const safariCustomCaps = {\r\n    // Add the includeSafariInWebviews for future HTML detection\r\n    includeSafariInWebviews: true,\r\n  };\r\n  const chromeCustomCaps = {\r\n    // Make sure the screenshot is taken of the whole screen when the ChromeDriver is used\r\n    nativeWebScreenshot: true,\r\n    // Set the ChromeDriver to w3c:false because all internal calls are still JSONWP calls\r\n    chromeOptions: {\r\n      'w3c': false,\r\n    },\r\n  };\r\n  const androidCustomCaps = {\r\n    // @TODO: remove when this is defaulted in the newest Appium 1.8.x release\r\n    ensureWebviewsHavePages: true,\r\n  };\r\n  const iosCustomCaps = {};\r\n\r\n  return {\r\n    ...caps,\r\n    ...(browserName.toLowerCase() === 'safari' ? safariCustomCaps : {}),\r\n    ...(browserName.toLowerCase() === 'chrome' ? chromeCustomCaps : {}),\r\n    ...(platformName.toLowerCase() === 'android' ? androidCustomCaps : {}),\r\n    ...(platformName.toLowerCase() === 'ios' ? iosCustomCaps : {}),\r\n  };\r\n}\r\n","import settings from 'electron-settings';\r\nimport { PRESETS } from '../renderer/actions/StartServer';\r\nimport { SAVED_SESSIONS, SERVER_ARGS, SESSION_SERVER_PARAMS,\r\n         SESSION_SERVER_TYPE } from '../renderer/actions/Session';\r\nimport { SAVED_FRAMEWORK } from '../renderer/actions/Inspector';\r\n\r\n// set default persistent settings\r\n// do it here because settings are kind of like state!\r\nsettings.defaults({\r\n  [PRESETS]: {},\r\n  [SAVED_SESSIONS]: [],\r\n  [SERVER_ARGS]: null,\r\n  [SESSION_SERVER_PARAMS]: null,\r\n  [SESSION_SERVER_TYPE]: null,\r\n  [SAVED_FRAMEWORK]: 'java',\r\n});\r\n\r\nexport default settings;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport config from './app.config';\r\nimport settings from '../shared/settings';\r\nimport path from 'path';\r\nimport i18nextBackend from 'i18next-node-fs-backend';\r\n\r\nconst i18nextOptions = {\r\n  backend: {\r\n    loadPath: path.join(__dirname, 'locales/{{lng}}/{{ns}}.json'),\r\n    addPath: path.join(__dirname, 'locales/{{lng}}/{{ns}}.json'),\r\n    jsonIndent: 2,\r\n  },\r\n  // debug: true,\r\n  // saveMissing: true,\r\n  interpolation: {\r\n    escapeValue: false\r\n  },\r\n  lng: settings && settings.getSync('PREFERRED_LANGUAGE', 'en') || 'en',\r\n  fallbackLng: config.fallbackLng,\r\n  whitelist: config.languages,\r\n  react: {\r\n    wait: false\r\n  }\r\n};\r\n\r\nif (!i18n.isInitialized) {\r\n  i18n\r\n    .use(initReactI18next)\r\n    .use(i18nextBackend)\r\n    .init(i18nextOptions);\r\n}\r\n\r\nexport default i18n;\r\n","import { ipcRenderer, shell } from 'electron';\r\nimport { push } from 'connected-react-router';\r\nimport i18n from '../../configs/i18next.config.renderer';\r\n\r\nexport const SERVER_STOP_REQ = 'SERVER_STOP_REQ';\r\nexport const SERVER_STOP_OK = 'SERVER_STOP_OK';\r\nexport const SERVER_STOP_FAIL = 'SERVER_STOP_FAIL';\r\nexport const LOGS_RECEIVED = 'LOGS_RECEIVED';\r\nexport const LOGS_CLEARED = 'LOGS_CLEARED';\r\nexport const MONITOR_CLOSED = 'MONITOR_CLOSED';\r\nexport const START_SESSION_REQUEST = 'START_SESSION';\r\nexport const SET_SERVER_ARGS = 'SET_SERVER_ARGS';\r\n\r\nexport function stopServerReq () {\r\n  return {type: SERVER_STOP_REQ};\r\n}\r\n\r\nexport function stopServerOK () {\r\n  return {type: SERVER_STOP_OK};\r\n}\r\n\r\nexport function stopServerFailed (reason) {\r\n  return {type: SERVER_STOP_FAIL, reason};\r\n}\r\n\r\nexport function startSessionRequest (sessionUUID) {\r\n  return {type: START_SESSION_REQUEST, sessionUUID};\r\n}\r\n\r\nexport function serverLogsReceived (logs) {\r\n  return {type: LOGS_RECEIVED, logs};\r\n}\r\n\r\nexport function setServerArgs (args) {\r\n  return {type: SET_SERVER_ARGS, args};\r\n}\r\n\r\nexport function monitorClosed () {\r\n  return {type: MONITOR_CLOSED};\r\n}\r\n\r\nfunction stopListening () {\r\n  ipcRenderer.removeAllListeners('appium-log-line');\r\n  ipcRenderer.removeAllListeners('appium-stop-error');\r\n}\r\n\r\nfunction removeStopListeners () {\r\n  ipcRenderer.removeAllListeners('appium-stop-error');\r\n  ipcRenderer.removeAllListeners('appium-stop-ok');\r\n}\r\n\r\nexport function stopServer () {\r\n  return (dispatch) => {\r\n    dispatch(stopServerReq());\r\n\r\n    ipcRenderer.once('appium-stop-error', (event, message) => {\r\n      alert(i18n.t('stopServerFailed', {message}));\r\n      dispatch(stopServerFailed(message));\r\n      removeStopListeners();\r\n    });\r\n\r\n    stopListening();\r\n\r\n    ipcRenderer.once('appium-stop-ok', () => {\r\n      dispatch(serverLogsReceived([{\r\n        level: 'info',\r\n        msg: 'Appium server stopped successfully'\r\n      }]));\r\n      setTimeout(() => {\r\n        dispatch(stopServerOK());\r\n      }, 0);\r\n      removeStopListeners();\r\n    });\r\n\r\n    ipcRenderer.send('stop-server');\r\n  };\r\n}\r\n\r\nexport function closeMonitor () {\r\n  return (dispatch) => {\r\n    dispatch(monitorClosed());\r\n    dispatch(push('/'));\r\n  };\r\n}\r\n\r\nexport function clearLogs () {\r\n  return (dispatch, getState) => {\r\n    const logfilePath = getState().startServer.logfilePath;\r\n    if (logfilePath) {\r\n      ipcRenderer.send('appium-clear-logfile', {logfilePath});\r\n    }\r\n    dispatch({type: LOGS_CLEARED});\r\n  };\r\n}\r\n\r\nexport function startSession () {\r\n  return (dispatch) => {\r\n    dispatch({type: START_SESSION_REQUEST});\r\n    ipcRenderer.send('create-new-session-window');\r\n  };\r\n}\r\n\r\nexport function getRawLogs () {\r\n  return (dispatch, getState) => {\r\n    const logfilePath = getState().startServer.logfilePath;\r\n    if (logfilePath) {\r\n      shell.openExternal(`file://${logfilePath}`);\r\n    } else {\r\n      alert(i18n.t('logsNotAvailableError'));\r\n    }\r\n  };\r\n}","/* eslint-disable no-console */\r\nimport { ipcRenderer } from 'electron';\r\nimport { push } from 'connected-react-router';\r\nimport { serverLogsReceived, clearLogs, setServerArgs } from './ServerMonitor';\r\nimport settings from '../../shared/settings';\r\nimport i18n from '../../configs/i18next.config.renderer';\r\n\r\nexport const SERVER_START_REQ = 'SERVER_START_REQ';\r\nexport const SERVER_START_OK = 'SERVER_START_OK';\r\nexport const SERVER_START_ERR = 'SERVER_START_ERR';\r\nexport const UPDATE_ARGS = 'UPDATE_ARGS';\r\nexport const SWITCH_TAB = 'SWITCH_TAB';\r\nexport const PRESET_SAVE_REQ = 'PRESET_SAVE_REQ';\r\nexport const PRESET_SAVE_OK = 'PRESET_SAVE_OK';\r\nexport const GET_PRESETS = 'GET_PRESETS';\r\nexport const PRESET_DELETE_REQ = 'PRESET_DELETE_REQ';\r\nexport const PRESET_DELETE_OK = 'PRESET_DELETE_OK';\r\nexport const SET_LOGFILE_PATH = 'SET_LOGFILE_PATH';\r\n\r\nexport const PRESETS = 'presets';\r\n\r\nexport function startServer (evt) {\r\n  evt.preventDefault();\r\n  return (dispatch, getState) => {\r\n    // signal to the UI that we are beginning our request\r\n    dispatch({type: SERVER_START_REQ});\r\n    const {serverArgs} = getState().startServer;\r\n\r\n    // if we get an error from electron, fail with the message\r\n    ipcRenderer.once('appium-start-error', (event, message) => {\r\n      // don't listen for log lines any more if we failed to start, other-\r\n      // wise we'll start to stack listeners for subsequent attempts\r\n      ipcRenderer.removeAllListeners('appium-log-line');\r\n      alert(i18n.t('errorStartingServer', {message}));\r\n      dispatch({type: SERVER_START_ERR});\r\n      removeStartServerListeners();\r\n    });\r\n\r\n    ipcRenderer.once('appium-start-ok', () => {\r\n      // don't listen for subsequent server start failures later in the\r\n      // lifetime of this app instance\r\n      ipcRenderer.removeAllListeners('appium-start-error');\r\n      dispatch({type: SERVER_START_OK});\r\n      dispatch(setServerArgs(serverArgs));\r\n      dispatch(push('/monitor'));\r\n      removeStartServerListeners();\r\n    });\r\n\r\n    ipcRenderer.on('appium-log-line', (event, logs) => {\r\n      dispatch(serverLogsReceived(logs));\r\n    });\r\n\r\n    dispatch(clearLogs());\r\n    ipcRenderer.once('path-to-logs', (event, logfilePath) => dispatch({type: SET_LOGFILE_PATH, logfilePath}));\r\n    ipcRenderer.send('start-server', serverArgs);\r\n  };\r\n}\r\n\r\nfunction removeStartServerListeners () {\r\n  ipcRenderer.removeAllListeners('appium-start-error');\r\n  ipcRenderer.removeAllListeners('appium-start-ok');\r\n}\r\n\r\nexport function updateArgs (args) {\r\n  return (dispatch) => {\r\n    dispatch({type: UPDATE_ARGS, args});\r\n  };\r\n}\r\n\r\nexport function switchTab (tabId) {\r\n  return (dispatch) => {\r\n    dispatch({type: SWITCH_TAB, tabId});\r\n  };\r\n}\r\n\r\nexport function savePreset (name, args) {\r\n  return async (dispatch) => {\r\n    dispatch({type: PRESET_SAVE_REQ});\r\n    let presets = await settings.get(PRESETS);\r\n    try {\r\n      presets[name] = args;\r\n      presets[name]._modified = Date.now();\r\n      await settings.set(PRESETS, presets);\r\n    } catch (e) {\r\n      console.error(e);\r\n      alert(i18n.t('errorSavingPreset', {message: e.message}));\r\n    }\r\n    dispatch({type: PRESET_SAVE_OK, presets});\r\n  };\r\n}\r\n\r\nexport function getPresets () {\r\n  return async (dispatch) => {\r\n    try {\r\n      let presets = await settings.get(PRESETS);\r\n      dispatch({type: GET_PRESETS, presets});\r\n    } catch (e) {\r\n      console.error(e);\r\n      alert(i18n.t('errorGettingPreset', {message: e.message}));\r\n    }\r\n  };\r\n}\r\n\r\nexport function deletePreset (name) {\r\n  return async (dispatch) => {\r\n    dispatch({type: PRESET_DELETE_REQ});\r\n    let presets = await settings.get(PRESETS);\r\n    try {\r\n      delete presets[name];\r\n      await settings.set(PRESETS);\r\n    } catch (e) {\r\n      console.error(e);\r\n      alert(i18n.t('errorDeletingPreset', {message: e.message}));\r\n    }\r\n    dispatch({type: PRESET_DELETE_OK, presets});\r\n  };\r\n}","import { SERVER_START_REQ, SERVER_START_OK, SERVER_START_ERR, GET_PRESETS,\r\n         UPDATE_ARGS, SWITCH_TAB, PRESET_SAVE_REQ, PRESET_SAVE_OK,\r\n         PRESET_DELETE_REQ, PRESET_DELETE_OK, SET_LOGFILE_PATH,\r\n} from '../actions/StartServer';\r\n\r\nimport { ipcRenderer } from 'electron';\r\nimport { version as SERVER_VERSION } from 'appium/package.json';\r\n\r\nexport const DEFAULT_ARGS = ipcRenderer.sendSync('get-default-args');\r\n\r\n// TODO: Add this back when 'getParser' issue (https://github.com/appium/appium/issues/11320) has been fixed\r\n//export const ARG_DATA = ipcRenderer.sendSync('get-args-metadata');\r\n\r\nconst initialState = {\r\n  serverArgs: {\r\n    ...DEFAULT_ARGS,\r\n    // Turn on all insecure features, this is needed to auto download ChromeDriver\r\n    // A tooltip is added to the settings screen\r\n    ...{relaxedSecurityEnabled: true}\r\n  },\r\n  serverVersion: SERVER_VERSION,\r\n  serverStarting: false,\r\n  serverFailMsg: '',\r\n  tabId: 0,\r\n  presetSaving: false,\r\n  presetDeleting: false,\r\n  presets: {},\r\n};\r\n\r\nexport default function startServer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SERVER_START_REQ:\r\n      return {...state, serverStarting: true};\r\n    case SERVER_START_OK:\r\n    case SERVER_START_ERR:\r\n      return {\r\n        ...state,\r\n        serverStarting: false,\r\n      };\r\n    case UPDATE_ARGS:\r\n      return {\r\n        ...state,\r\n        serverArgs: Object.assign({}, state.serverArgs, action.args)\r\n      };\r\n    case SWITCH_TAB:\r\n      return {\r\n        ...state,\r\n        tabId: action.tabId\r\n      };\r\n    case GET_PRESETS:\r\n      return {...state, presets: action.presets};\r\n    case PRESET_SAVE_REQ:\r\n      return {...state, presetSaving: true};\r\n    case PRESET_SAVE_OK:\r\n      return {...state, presetSaving: false, presets: action.presets};\r\n    case PRESET_DELETE_REQ:\r\n      return {...state, presetDeleting: true};\r\n    case PRESET_DELETE_OK:\r\n      return {...state, presetDeleting: false, presets: action.presets};\r\n    case SET_LOGFILE_PATH:\r\n      return {...state, logfilePath: action.logfilePath};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { DEFAULT_ARGS } from '../../reducers/StartServer';\r\n\r\nexport const propTypes = {\r\n  serverArgs: PropTypes.object.isRequired,\r\n  serverStarting: PropTypes.bool.isRequired,\r\n  startServer: PropTypes.func.isRequired,\r\n  updateArgs: PropTypes.func.isRequired,\r\n  savePreset: PropTypes.func.isRequired,\r\n  presetSaving: PropTypes.bool.isRequired,\r\n  deletePreset: PropTypes.func.isRequired,\r\n  presetDeleting: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport function updateArg (evt) {\r\n  const {updateArgs} = this.props;\r\n  let argName = evt.target.name;\r\n\r\n  let newVal;\r\n  switch (evt.target.type) {\r\n    case 'checkbox':\r\n      newVal = evt.target.checked;\r\n      break;\r\n    default:\r\n      newVal = evt.target.value;\r\n      // if we have a string type, sometimes Appium's default value is actually\r\n      // null, but our users can only make it an empty string, so convert it\r\n      if (newVal === '' && DEFAULT_ARGS[argName] === null) {\r\n        newVal = null;\r\n      }\r\n      // likewise if we have a string type, but Appium's defult value is\r\n      // actually a number, convert it. For now assume that will be an integer\r\n      // since Appium currently doesn't accept any non-integer numeric\r\n      // arguments.\r\n      if (typeof newVal === 'string' &&\r\n          typeof DEFAULT_ARGS[argName] === 'number') {\r\n        newVal = parseInt(newVal, 10);\r\n      }\r\n      break;\r\n  }\r\n  updateArgs({[argName]: newVal});\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\nimport { ipcRenderer } from 'electron';\r\nimport { withTranslation } from '../../util';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\nimport styles from './StartButton.css';\r\nimport { BUTTON, INPUT } from '../AntdTypes';\r\n\r\nclass StartButton extends Component {\r\n  isEnabled () {\r\n    return !(this.props.serverStarting || this.props.disabledOverride);\r\n  }\r\n\r\n  noop (evt) {\r\n    evt.preventDefault();\r\n  }\r\n\r\n  openConfig () {\r\n    ipcRenderer.send('appium-open-config');\r\n  }\r\n\r\n  render () {\r\n    const {startServer, serverStarting, serverVersion, t} = this.props;\r\n    const buttonProps = {};\r\n    if (!this.isEnabled()) {\r\n      buttonProps.disabled = true;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Button {...buttonProps} id='startServerBtn'\r\n          className={styles.startButton}\r\n          type={BUTTON.PRIMARY}\r\n          onClick={this.isEnabled() ? startServer : this.noop}\r\n        >\r\n          {serverStarting ? t('Starting…') : t('startServer', {serverVersion})}\r\n        </Button>\r\n        <input type={INPUT.SUBMIT} hidden={true} />\r\n        <Button id='configBtn'\r\n          className={styles.configButton}\r\n          onClick={() => this.openConfig()}>\r\n          {t('Edit Configurations')}<SettingOutlined />\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nStartButton.propTypes = {\r\n  serverStarting: PropTypes.bool.isRequired,\r\n  startServer: PropTypes.func.isRequired,\r\n  disabledOverride: PropTypes.bool,\r\n};\r\n\r\nexport default withTranslation(StartButton);\r\n","import React, { Component } from 'react';\r\nimport { Input } from 'antd';\r\nimport { withTranslation } from '../../util';\r\nimport { propTypes, updateArg } from './shared';\r\nimport StartButton from './StartButton';\r\nimport styles from './SimpleTab.css';\r\n\r\nclass SimpleTab extends Component {\r\n\r\n  render () {\r\n    const {startServer, serverArgs, serverStarting, serverVersion, t} = this.props;\r\n\r\n    return (\r\n      <div className={styles.form}>\r\n        <form onSubmit={startServer}>\r\n          <Input ref=\"address\" defaultValue={serverArgs.address}\r\n            addonBefore={t('Host')}\r\n            name=\"address\" onChange={updateArg.bind(this)}\r\n            id=\"simpleHostInput\"\r\n          />\r\n          <Input ref=\"port\" defaultValue={serverArgs.port}\r\n            addonBefore={t('Port')} name=\"port\" onChange={updateArg.bind(this)}\r\n            id=\"simplePortInput\"\r\n          />\r\n          <div className=\"form-actions\">\r\n            <StartButton {...{serverStarting, startServer, serverVersion}} />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleTab.propTypes = {...propTypes};\r\n\r\nexport default withTranslation(SimpleTab);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\nimport { withTranslation } from '../../util';\r\nimport styles from './StartButton.css';\r\nimport { BUTTON, INPUT } from '../AntdTypes';\r\n\r\nclass SavePresetButton extends Component {\r\n  render () {\r\n    const {presetSaving, savePreset, t} = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Button className={styles.startButton}\r\n          type={presetSaving ? BUTTON.DISABLED : BUTTON.DEFAULT}\r\n          onClick={savePreset}\r\n        >{presetSaving ? t('Saving…') : t('Save As Preset…')}</Button>\r\n        <input type={INPUT.SUBMIT} hidden={true} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSavePresetButton.propTypes = {\r\n  presetSaving: PropTypes.bool.isRequired,\r\n  savePreset: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withTranslation(SavePresetButton);\r\n","import React, { Component } from 'react';\r\nimport {Modal, Input, Checkbox, notification, Tooltip} from 'antd';\r\n\r\nimport { withTranslation } from '../../util';\r\nimport { propTypes, updateArg } from './shared';\r\nimport StartButton from './StartButton';\r\nimport SavePresetButton from './SavePresetButton';\r\nimport styles from './AdvancedTab.css';\r\nimport { INPUT } from '../AntdTypes';\r\n\r\n// args we build a UI for:\r\n// ipa, address, port, callbackAddress, callbackPort,\r\n// bootstrapPort, backendRetries, sessionOverride, log,\r\n// logLevel, logTimestamp, localTimezone, logNoColors,\r\n// defaultDevice, automationTraceTemplatePath, instrumentsPath,\r\n// nodeconfig, robotAddress, robotPort, selendroidPort,\r\n// chromeDriverPort, chromedriverExecutable, enforceStrictCaps,\r\n// isolateSimDevice, tmpDir, traceDir, debugLogSpacing, allowCors,\r\n// suppressAdbKillServer, webkitDebugProxyPort, defaultCapabilities\r\n\r\nclass AdvancedTab extends Component {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      modalOpen: false,\r\n      newPresetName: '',\r\n    };\r\n  }\r\n\r\n  buildInput (argName, type, label) {\r\n    const {serverArgs, t} = this.props;\r\n\r\n    if (type === 'text') {\r\n      return (\r\n        <div className={styles.input}>\r\n          <Input ref={argName} type={INPUT.TEXT}\r\n            defaultValue={serverArgs[argName]}\r\n            name={argName} onChange={updateArg.bind(this)}\r\n            addonBefore={label}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (type === 'checkbox') {\r\n      return (\r\n        <div className={styles.input}>\r\n          <Checkbox ref={argName}\r\n            name={argName} defaultChecked={serverArgs[argName]}\r\n            onChange={updateArg.bind(this)}\r\n          >{label}</Checkbox>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (type === 'textarea') {\r\n      return '';\r\n    }\r\n\r\n    throw new Error(t('invalidType', {type}));\r\n  }\r\n\r\n  openPresetModal () {\r\n    this.setState({\r\n      modalOpen: true,\r\n    });\r\n  }\r\n\r\n  closePresetModal () {\r\n    this.setState({modalOpen: false});\r\n  }\r\n\r\n  updatePresetName (evt) {\r\n    this.setState({newPresetName: evt.target.value});\r\n  }\r\n\r\n  savePreset (evt) {\r\n    const {t} = this.props;\r\n    if (evt) {\r\n      // might get here from Modal binding (no event) or form submit binding\r\n      // (event)\r\n      evt.preventDefault();\r\n    }\r\n    if (!this.state.newPresetName) {\r\n      // don't save a preset without a name\r\n      return;\r\n    }\r\n    this.props.savePreset(this.state.newPresetName, this.props.serverArgs);\r\n    notification.success({\r\n      message: t('Saved'),\r\n      description: t('presetAdded', {presetName: this.state.newPresetName})\r\n    });\r\n    this.setState({modalOpen: false});\r\n  }\r\n\r\n  modal () {\r\n    const {t} = this.props;\r\n    const form = (\r\n      <div>\r\n        <form className={styles.input}\r\n          onSubmit={this.savePreset.bind(this)}>\r\n          <Input autoFocus\r\n            ref=\"presetName\"\r\n            name={'presetName'}\r\n            addonBefore={t('Preset name')}\r\n            onChange={this.updatePresetName.bind(this)}\r\n            size=\"large\"\r\n          />\r\n          <input type={INPUT.SUBMIT} hidden={true} />\r\n        </form>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Modal\r\n        visible={this.state.modalOpen}\r\n        className={styles.presetModal}\r\n        title={t('Save Server Arguments Preset')}\r\n        width={340}\r\n        okText={t('Save')}\r\n        onOk={this.savePreset.bind(this)}\r\n        cancelText={t('Cancel')}\r\n        onCancel={this.closePresetModal.bind(this)}\r\n      >\r\n        {form}\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  render () {\r\n    const {startServer, serverStarting, presetSaving, serverVersion, t} = this.props;\r\n\r\n    return (\r\n      <div className={styles.advancedForm}>\r\n        <form onSubmit={startServer}>\r\n          <div className={styles.inputSection}>\r\n            <div className={styles.secTitle}>{t('General')}</div>\r\n            <div className={styles.secBody}>\r\n              {this.buildInput('address', 'text', t('Server Address'))}\r\n              {this.buildInput('port', 'text', t('Server Port'))}\r\n              {this.buildInput('log', 'text', t('Logfile Path'))}\r\n              {this.buildInput('loglevel', 'text', t('Log Level'))}\r\n              {this.buildInput('tmpDir', 'text', t('Override Temp Path'))}\r\n              {this.buildInput('nodeconfig', 'text', t('Node Config File Path'))}\r\n              {this.buildInput('localTimezone', 'checkbox', t('Local Timezone'))}\r\n              {this.buildInput('sessionOverride', 'checkbox', t('Allow Session Override'))}\r\n              {this.buildInput('logTimestamp', 'checkbox', t('Log Timestamps'))}\r\n              {this.buildInput('logNoColors', 'checkbox', t('Suppress Log Color'))}\r\n              {this.buildInput('enforceStrictCaps', 'checkbox', t('Strict Caps Mode'))}\r\n              <Tooltip title={t('relaxedSecurityInfo')}>\r\n                {this.buildInput('relaxedSecurityEnabled', 'checkbox', t('Relaxed Security'))}\r\n              </Tooltip>\r\n              {this.buildInput('allowCors', 'checkbox', t('Allow CORS'))}\r\n              {this.buildInput('defaultCapabilities', 'textarea', t('Default Capabilities'))}\r\n            </div>\r\n\r\n            <div className={styles.secTitle}>{t('iOS')}</div>\r\n            <div className={styles.secBody}>\r\n              {this.buildInput('wdaLocalPort', 'text', t('WebDriverAgent Port'))}\r\n              {this.buildInput('callbackHost', 'text', t('executeAsync Callback Host'))}\r\n              {this.buildInput('callbackPort', 'text', t('executeAsync Callback Port'))}\r\n            </div>\r\n\r\n            <div className={styles.secTitle}>{t('Android')}</div>\r\n            <div className={styles.secBody}>\r\n              {this.buildInput('bootstrapPort', 'text', t('Bootstrap Port'))}\r\n              {this.buildInput('selendroidPort', 'text', t('Selendroid Port'))}\r\n              {this.buildInput('chromeDriverPort', 'text', t('Chromedriver Port'))}\r\n              {this.buildInput('chromedriverExecutable', 'text', t('Chromedriver Binary Path'))}\r\n            </div>\r\n          </div>\r\n          <div className={styles.actions}>\r\n            <StartButton {...{serverStarting, startServer, serverVersion}} />\r\n            <SavePresetButton {...{savePreset: this.openPresetModal.bind(this), presetSaving}} />\r\n          </div>\r\n        </form>\r\n        {this.modal()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAdvancedTab.propTypes = {...propTypes};\r\n\r\nexport default withTranslation(AdvancedTab);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\nimport { withTranslation } from '../../util';\r\n\r\nimport styles from './StartButton.css';\r\nimport { BUTTON } from '../AntdTypes';\r\n\r\nclass DeletePresetButton extends Component {\r\n  render () {\r\n    const {presetDeleting, deletePreset, t} = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Button className={styles.startButton}\r\n          type={presetDeleting ? BUTTON.DISABLED : BUTTON.DEFAULT}\r\n          onClick={deletePreset}\r\n        >{presetDeleting ? t('Deleting…') : t('Delete Preset')}</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDeletePresetButton.propTypes = {\r\n  presetDeleting: PropTypes.bool.isRequired,\r\n  deletePreset: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withTranslation(DeletePresetButton);\r\n","import _ from 'lodash';\r\nimport moment from 'moment';\r\nimport React, { Component } from 'react';\r\nimport { notification, Table } from 'antd';\r\nimport { withTranslation } from '../../util';\r\n\r\nimport { propTypes } from './shared';\r\nimport StartButton from './StartButton';\r\nimport DeletePresetButton from './DeletePresetButton';\r\nimport advancedStyles from './AdvancedTab.css';\r\nimport styles from './PresetsTab.css';\r\n\r\nclass PresetsTab extends Component {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {selectedPreset: null};\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.props.getPresets();\r\n  }\r\n\r\n  hasPresets () {\r\n    return !!_.size(this.props.presets);\r\n  }\r\n\r\n  presetIsSelected () {\r\n    return this.hasPresets() && this.state.selectedPreset;\r\n  }\r\n\r\n  emptyPresetList () {\r\n    const {t} = this.props;\r\n    return (\r\n      <div className={styles.noPresetsContainer}>\r\n        <div className={styles.noPresetsMessage}>\r\n          {t('noPresets')}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  selectedPresetData (presetName = null) {\r\n    if (!presetName) {presetName = this.state.selectedPreset;}\r\n    const {presets} = this.props;\r\n    const preset = presets[presetName];\r\n    if (preset._modified) {\r\n      delete preset._modified;\r\n    }\r\n    return preset;\r\n  }\r\n\r\n  selectPreset (presetName) {\r\n    const {serverArgs, updateArgs} = this.props;\r\n\r\n    this.setState({selectedPreset: presetName});\r\n\r\n    const preset = this.selectedPresetData(presetName);\r\n\r\n    for (let [argName, newVal] of _.toPairs(preset)) {\r\n      if (serverArgs[argName] !== newVal) {\r\n        updateArgs({[argName]: newVal});\r\n      }\r\n    }\r\n  }\r\n\r\n  deletePreset (evt) {\r\n    const {t} = this.props;\r\n\r\n    evt.preventDefault();\r\n    if (window.confirm(t('deleteSelectedPresetConfirmation', {presetName: this.state.selectedPreset}))) {\r\n      this.props.deletePreset(this.state.selectedPreset);\r\n      this.setState({selectedPreset: null});\r\n      notification.success({\r\n        message: t('Deleted'),\r\n        description: t('Preset successfully trashed')\r\n      });\r\n    }\r\n  }\r\n\r\n  presetList () {\r\n    const {presets, t} = this.props;\r\n    return (\r\n      <ul className={styles.presetsList}>\r\n        {_.toPairs(presets).map((p) =>\r\n          <a\r\n            onClick={this.selectPreset.bind(this, p[0])}\r\n            key={p[0]}\r\n            className={styles.presetLink}\r\n          >\r\n            <li className={`${styles.preset} ${p[0] === this.state.selectedPreset ? styles.presetItemActive : ''}`}>\r\n              <div className={styles.presetItemTitle}>{p[0]}</div>\r\n              <div className={styles.presetItemDesc}>{t('savedTimestamp', {when: moment(p[1]._modified).fromNow()})}</div>\r\n            </li>\r\n          </a>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  presetDetail () {\r\n    const {t} = this.props;\r\n    const preset = this.selectedPresetData();\r\n    if (preset) {\r\n      const columns = [{\r\n        title: t('Server Argument'),\r\n        dataIndex: 'arg',\r\n        width: 200\r\n      }, {\r\n        title: t('Value'),\r\n        dataIndex: 'val',\r\n      }];\r\n      let data = [];\r\n      for (let [arg, val] of _.toPairs(preset)) {\r\n        data.push({\r\n          key: arg,\r\n          arg,\r\n          val: typeof val === 'string' ? val : JSON.stringify(val)\r\n        });\r\n      }\r\n      return (\r\n        <div className={styles.presetsDetail}>\r\n          <Table columns={columns} dataSource={data} size=\"small\"\r\n            pagination={false}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return '';\r\n  }\r\n\r\n  render () {\r\n    const {startServer, serverStarting, presetDeleting, serverVersion} = this.props;\r\n\r\n    return (\r\n      <div className={advancedStyles.advancedForm}>\r\n        <form onSubmit={startServer}>\r\n          <div className={styles.presetsSection}>\r\n            {this.hasPresets() ? this.presetList() : this.emptyPresetList()}\r\n            {this.presetIsSelected() ? this.presetDetail() : ''}\r\n          </div>\r\n          <div className={advancedStyles.actions}>\r\n            <StartButton {...{serverStarting, startServer, serverVersion, disabledOverride: !this.presetIsSelected()}} />\r\n            {this.presetIsSelected() &&\r\n              <DeletePresetButton {...{presetDeleting, deletePreset: this.deletePreset.bind(this)}} />\r\n            }\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPresetsTab.propTypes = {...propTypes};\r\n\r\nexport default withTranslation(PresetsTab);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\n\r\nimport { propTypes } from './shared';\r\nimport SimpleTab from './SimpleTab';\r\nimport AdvancedTab from './AdvancedTab';\r\nimport PresetsTab from './PresetsTab';\r\nimport styles from './StartServer.css';\r\n\r\nimport AppiumLogo from '../../images/appium_logo.png';\r\nimport { BUTTON } from '../AntdTypes';\r\n\r\nconst TAB_SIMPLE = 0, TAB_ADVANCED = 1, TAB_PRESETS = 2;\r\n\r\nexport default class StartServer extends Component {\r\n\r\n  displayTab () {\r\n    const {t} = this.props;\r\n\r\n    switch (this.props.tabId) {\r\n      case TAB_SIMPLE:\r\n        return <SimpleTab {...this.props} />;\r\n      case TAB_ADVANCED:\r\n        return <AdvancedTab {...this.props} />;\r\n      case TAB_PRESETS:\r\n        return <PresetsTab {...this.props} />;\r\n      default:\r\n        throw new Error(t('Invalid tab id'));\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {tabId, switchTab, t} = this.props;\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.formAndLogo}>\r\n          <img src={AppiumLogo} className={styles.logo} />\r\n          <div className={styles.tabs}>\r\n            <Button.Group className={styles.tabButtons}>\r\n              <Button type={tabId === TAB_SIMPLE ? BUTTON.PRIMARY : BUTTON.DEFAULT }\r\n                onClick={() => switchTab(TAB_SIMPLE)}\r\n              >{t('Simple')}</Button>\r\n              <Button type={tabId === TAB_ADVANCED ? BUTTON.PRIMARY : BUTTON.DEFAULT }\r\n                onClick={() => switchTab(TAB_ADVANCED)}\r\n              >{t('Advanced')}</Button>\r\n              <Button type={tabId === TAB_PRESETS ? BUTTON.PRIMARY : BUTTON.DEFAULT }\r\n                onClick={() => switchTab(TAB_PRESETS)}\r\n              >{t('Presets')}</Button>\r\n            </Button.Group>\r\n          </div>\r\n          {this.displayTab()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nStartServer.propTypes = {\r\n  ...propTypes,\r\n  tabId: PropTypes.number.isRequired,\r\n  switchTab: PropTypes.func.isRequired,\r\n};\r\n","import { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withTranslation } from '../util';\r\nimport * as StartServerActions from '../actions/StartServer';\r\nimport StartServer from '../components/StartServer/StartServer';\r\n\r\nfunction mapStateToProps (state) {\r\n  return state.startServer;\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return bindActionCreators(StartServerActions, dispatch);\r\n}\r\n\r\nexport default withTranslation(StartServer, connect(mapStateToProps, mapDispatchToProps));\r\n","import moment from 'moment';\r\nimport { SERVER_STOP_REQ, SERVER_STOP_OK, SERVER_STOP_FAIL, SET_SERVER_ARGS,\r\n         START_SESSION_REQUEST,\r\n         LOGS_RECEIVED, LOGS_CLEARED, MONITOR_CLOSED } from '../actions/ServerMonitor';\r\n\r\nexport const STATUS_RUNNING = 'running';\r\nexport const STATUS_STOPPED = 'stopped';\r\nexport const STATUS_STOPPING = 'stopping';\r\n\r\n// Maximum amount of logs to keep in memory\r\nconst MAX_LOG_LINES = 10000;\r\n\r\nconst initialState = {\r\n  logLines: [],\r\n  serverStatus: STATUS_STOPPED,\r\n  serverFailMsg: '',\r\n  serverArgs: {},\r\n};\r\n\r\nexport default function serverMonitor (state = initialState, action) {\r\n  let logLines;\r\n  switch (action.type) {\r\n    case SERVER_STOP_REQ:\r\n      return {...state, serverStatus: STATUS_STOPPING};\r\n    case SERVER_STOP_OK:\r\n      return {\r\n        ...state,\r\n        serverStatus: STATUS_STOPPED,\r\n        serverFailMsg: ''\r\n      };\r\n    case SERVER_STOP_FAIL:\r\n      return {\r\n        ...state,\r\n        serverStopping: false,\r\n        serverFailMsg: action.reason\r\n      };\r\n    case START_SESSION_REQUEST:\r\n      return {\r\n        ...state,\r\n        sessionStart: true,\r\n        sessionId: action.sessionUUID,\r\n      };\r\n    case LOGS_RECEIVED:\r\n      logLines = state.logLines.concat(action.logs.map((l) => {\r\n        // attach a timestamp to each log line here when it comes in\r\n        l.timestamp = moment().format('YYYY-MM-DD hh:mm:ss');\r\n        return l;\r\n      }));\r\n\r\n      // Don't log more than MAX_LOG_LINES\r\n      if (logLines.length > MAX_LOG_LINES) {\r\n        logLines = logLines.slice(logLines.length - MAX_LOG_LINES);\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        logLines,\r\n        serverStatus: STATUS_RUNNING\r\n      };\r\n    case LOGS_CLEARED:\r\n      return {\r\n        ...state,\r\n        logLines: []\r\n      };\r\n    case SET_SERVER_ARGS:\r\n      return {\r\n        ...state,\r\n        serverArgs: action.args\r\n      };\r\n    case MONITOR_CLOSED:\r\n      return {...initialState};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { STATUS_RUNNING, STATUS_STOPPING,\r\n         STATUS_STOPPED } from '../../reducers/ServerMonitor';\r\nimport styles from './ServerMonitor.css';\r\nimport AnsiConverter from 'ansi-to-html';\r\nimport { withTranslation } from '../../util';\r\n\r\nimport AppiumSmallMagenta from '../../images/appium_small_magenta.png';\r\nimport {\r\n  PauseOutlined,\r\n  SearchOutlined,\r\n  DownloadOutlined,\r\n  CloseOutlined,\r\n  CodeFilled\r\n} from '@ant-design/icons';\r\nimport { BUTTON } from '../AntdTypes';\r\n\r\nconst convert = new AnsiConverter({fg: '#bbb', bg: '#222'});\r\nconst MAX_LOGS_RENDERED = 1000;\r\n\r\nfunction leveler (level) {\r\n  switch (level) {\r\n    case 'debug':\r\n      return 'message';\r\n    case 'warn':\r\n      return 'exclamation-circle';\r\n    case 'error':\r\n      return 'close-circle';\r\n    case 'silly':\r\n      return 'paper-clip';\r\n    case 'info':\r\n    default:\r\n      return 'info-circle';\r\n  }\r\n}\r\n\r\nclass StopButtonComponent extends Component {\r\n  render () {\r\n    const {serverStatus, stopServer, closeMonitor, t} = this.props;\r\n    let btn = <Tooltip title={t('Stop Server')}\r\n      placement=\"bottomLeft\">\r\n      <Button\r\n        icon={<PauseOutlined/>}\r\n        className={styles.serverButton}\r\n        onClick={stopServer} />\r\n    </Tooltip>;\r\n    if (serverStatus === STATUS_STOPPED) {\r\n      btn = <Tooltip title={t('Close Logs')} placement=\"bottomLeft\">\r\n        <Button\r\n          className={styles.serverButton}\r\n          icon={<CloseOutlined/>}\r\n          onClick={closeMonitor} />\r\n      </Tooltip>;\r\n    } else if (serverStatus === STATUS_STOPPING) {\r\n      btn = <Tooltip title={t('Stopping…')} visible={true}\r\n        placement=\"bottomLeft\">\r\n        <Button\r\n          icon={<PauseOutlined/>}\r\n          className={styles.serverButton}\r\n          type={BUTTON.DISABLED} />\r\n      </Tooltip>;\r\n    }\r\n    return btn;\r\n  }\r\n}\r\n\r\nStopButtonComponent.propTypes = {\r\n  serverStatus: PropTypes.string.isRequired,\r\n};\r\n\r\nconst StopButton = withTranslation(StopButtonComponent);\r\n\r\nclass StartSessionButtonComponent extends Component {\r\n  render () {\r\n    const {serverStatus, startSession, t} = this.props;\r\n    if (serverStatus !== STATUS_STOPPED && serverStatus !== STATUS_STOPPING) {\r\n      return <Tooltip title={t('Start Inspector Session')}>\r\n        <Button\r\n          className={styles.serverButton} id='startNewSessionBtn'\r\n          icon={<SearchOutlined/>}\r\n          onClick={startSession} />\r\n      </Tooltip>;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nStartSessionButtonComponent.propTypes = {\r\n  serverStatus: PropTypes.string.isRequired,\r\n  startSession: PropTypes.func.isRequired,\r\n};\r\n\r\nconst StartSessionButton = withTranslation(StartSessionButtonComponent);\r\n\r\nclass GetRawLogsButtonComponent extends Component {\r\n  render () {\r\n    const {t, getRawLogs} = this.props;\r\n    return <Tooltip title={t('Get Raw Logs')}>\r\n      <Button className={styles.serverButton}\r\n        icon={<DownloadOutlined/>}\r\n        onClick={() => getRawLogs()} />\r\n    </Tooltip>;\r\n  }\r\n}\r\n\r\nconst GetRawLogsButton = withTranslation(GetRawLogsButtonComponent);\r\n\r\nexport default class ServerMonitor extends Component {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n    this.keydownListener = this.keydownListener.bind(this);\r\n  }\r\n\r\n  keydownListener (e) {\r\n    if (e.key === 'k' && (e.metaKey || e.ctrlKey)) {\r\n      this.props.clearLogs();\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    document.addEventListener('keydown', this.keydownListener);\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    document.removeEventListener('keydown', this.keydownListener);\r\n  }\r\n\r\n  getSnapshotBeforeUpdate () {\r\n    this.shouldScroll = false;\r\n    let n = this._term;\r\n    if (n) {\r\n      this.shouldScroll = n.scrollTop + n.offsetHeight >= n.scrollHeight;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    if (this._term && this.shouldScroll) {\r\n      this._term.scrollTop = this._term.scrollHeight;\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {logLines, serverStatus, serverArgs, t} = this.props;\r\n    let statusIcon, statusMsg;\r\n    switch (serverStatus) {\r\n      case STATUS_RUNNING:\r\n        statusIcon = 'play-circle';\r\n        statusMsg = t('The server is running');\r\n        break;\r\n      case STATUS_STOPPED:\r\n        statusIcon = 'pause-circle';\r\n        statusMsg = t('The server is stopped');\r\n        break;\r\n      case STATUS_STOPPING:\r\n        statusIcon = 'loading';\r\n        statusMsg = t('The server is waiting for all connections to close');\r\n        break;\r\n      default:\r\n        throw new Error(t('badStatus', {serverStatus}));\r\n    }\r\n\r\n    let logLineSection = logLines.slice(logLines.length - MAX_LOGS_RENDERED).map((line, i) => {\r\n      let icn = leveler(line.level);\r\n\r\n      return (\r\n        <div key={i}>\r\n          <CodeFilled type={icn} />\r\n          {\r\n            serverArgs.logTimestamp &&\r\n            // eslint-disable-next-line shopify/jsx-no-hardcoded-content\r\n            <span className={styles.timestamp}>\r\n              [{line.timestamp}]\r\n            </span>\r\n          }\r\n          <span dangerouslySetInnerHTML={{__html: convert.toHtml(line.msg)}} />\r\n        </div>\r\n      );\r\n    });\r\n\r\n    let termClass = styles.term;\r\n    if (serverStatus === STATUS_STOPPED || serverStatus === STATUS_STOPPING) {\r\n      termClass += ` ${styles['term-stopped']}`;\r\n    }\r\n\r\n    let lastSection = '';\r\n    if (serverStatus === STATUS_STOPPED) {\r\n      lastSection = <div className={styles.last} />;\r\n    }\r\n\r\n\r\n    return (\r\n      <div className={styles.container} id='serverMonitorContainer'>\r\n        <div className={`${styles.bar} ${styles['bar-' + serverStatus]}`}>\r\n          <img src={AppiumSmallMagenta} className={styles.logo} />\r\n          <div className={`${styles.status} ${styles[serverStatus]}`}>\r\n            <CodeFilled type={statusIcon} />\r\n            {statusMsg}\r\n          </div>\r\n          <div className={`${styles['button-container']}`}>\r\n            <StartSessionButton {...this.props} />\r\n            <GetRawLogsButton {...this.props} />\r\n            <StopButton {...this.props} />\r\n          </div>\r\n        </div>\r\n        <div className={termClass} ref={(c) => this._term = c}>\r\n          {logLineSection}\r\n          {lastSection}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nServerMonitor.propTypes = {\r\n  stopServer: PropTypes.func.isRequired,\r\n  closeMonitor: PropTypes.func.isRequired,\r\n  serverStatus: PropTypes.string.isRequired,\r\n  logLines: PropTypes.array.isRequired,\r\n  startSession: PropTypes.func.isRequired,\r\n  serverArgs: PropTypes.object.isRequired,\r\n};\r\n","import { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withTranslation } from '../util';\r\nimport * as ServerActions from '../actions/ServerMonitor';\r\nimport ServerMonitor from '../components/ServerMonitor/ServerMonitor';\r\n\r\nfunction mapStateToProps (state) {\r\n  return state.serverMonitor;\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return bindActionCreators(ServerActions, dispatch);\r\n}\r\n\r\nexport default withTranslation(ServerMonitor, connect(mapStateToProps, mapDispatchToProps));\r\n","const HEIGHT_OF_SESSION_CONFIG_AREA = 400;\r\n\r\nexport { HEIGHT_OF_SESSION_CONFIG_AREA };\r\n","import React, { Component } from 'react';\r\nimport formatJSON from 'format-json';\r\nimport SessionCSS from './Session.css';\r\nimport { Card, Button, Alert, Tooltip } from 'antd';\r\nimport { getCapsObject } from '../../actions/Session.js';\r\nimport {\r\n  CloseOutlined,\r\n  SaveOutlined,\r\n  EditOutlined\r\n} from '@ant-design/icons';\r\nimport { remote } from 'electron';\r\nimport { HEIGHT_OF_SESSION_CONFIG_AREA } from './Layout';\r\nimport { ALERT } from '../AntdTypes';\r\n\r\nexport default class NewSessionForm extends Component {\r\n\r\n  getFormattedJSON (caps) {\r\n    return formatJSON.plain(getCapsObject(caps));\r\n  }\r\n\r\n  render () {\r\n    const {caps, title, isEditingDesiredCaps, startDesiredCapsEditor, abortDesiredCapsEditor, saveRawDesiredCaps, setRawDesiredCaps, rawDesiredCaps,\r\n           isValidCapsJson, invalidCapsJsonReason, t} = this.props;\r\n    return caps && <div className={SessionCSS.formattedCapsCont}>\r\n      <Card\r\n        title={title || 'JSON Representation'}\r\n        className={SessionCSS.formattedCaps}\r\n        bodyStyle={{maxHeight: remote.getCurrentWindow().getSize()[1] - HEIGHT_OF_SESSION_CONFIG_AREA}}>\r\n\r\n        <div className={SessionCSS.capsEditorControls}>\r\n          {isEditingDesiredCaps && <Tooltip title={t('Cancel')}>\r\n            <Button\r\n              onClick={abortDesiredCapsEditor}\r\n              icon={<CloseOutlined/>}\r\n              className={SessionCSS.capsEditorButton} />\r\n          </Tooltip> }\r\n          {isEditingDesiredCaps && <Tooltip title={t('Save')}>\r\n            <Button\r\n              onClick={saveRawDesiredCaps}\r\n              icon={<SaveOutlined/>}\r\n              className={SessionCSS.capsEditorButton} />\r\n          </Tooltip>}\r\n          {!isEditingDesiredCaps && <Tooltip title={t('Edit Raw JSON')} placement=\"topRight\" >\r\n            <Button\r\n              onClick={startDesiredCapsEditor}\r\n              icon={<EditOutlined/>} />\r\n          </Tooltip> }\r\n        </div>\r\n        {isEditingDesiredCaps && <div>\r\n          <textarea rows='9' onChange={(e) => setRawDesiredCaps(e.target.value)} value={rawDesiredCaps} className={SessionCSS.capsEditor} />\r\n          {!isValidCapsJson && <Alert message={invalidCapsJsonReason} type={ALERT.ERROR} />}\r\n        </div>}\r\n        {!isEditingDesiredCaps && <div>\r\n          <pre>{this.getFormattedJSON(caps)}</pre>\r\n        </div>}\r\n      </Card>\r\n    </div>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Switch, Input } from 'antd';\r\nimport SessionStyles from './Session.css';\r\nimport { remote } from 'electron';\r\nimport { FileOutlined } from '@ant-design/icons';\r\nimport { INPUT } from '../AntdTypes';\r\nimport _ from 'lodash';\r\nimport log from 'electron-log';\r\n\r\nconst {dialog} = remote;\r\n\r\nexport default class NewSessionForm extends Component {\r\n\r\n  async getLocalFilePath () {\r\n    try {\r\n      const {canceled, filePaths} = await dialog.showOpenDialog({properties: ['openFile']});\r\n      if (!canceled && !_.isEmpty(filePaths)) {\r\n        return filePaths[0];\r\n      }\r\n    } catch (e) {\r\n      log.error(e);\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {cap, onSetCapabilityParam, isEditingDesiredCaps, id, t} = this.props;\r\n\r\n    const buttonAfter = (currentFilePath) => <FileOutlined\r\n      className={SessionStyles['filepath-button']}\r\n      onClick={async () => {onSetCapabilityParam(await this.getLocalFilePath() || currentFilePath);}} />;\r\n\r\n    switch (cap.type) {\r\n      case 'text': return <Input disabled={isEditingDesiredCaps} id={id} placeholder={t('Value')} value={cap.value} onChange={(e) => onSetCapabilityParam(e.target.value)} />;\r\n      case 'boolean': return <Switch disabled={isEditingDesiredCaps} id={id} checkedChildren={'true'} unCheckedChildren={'false'}\r\n        placeholder={t('Value')} checked={cap.value} onChange={(value) => onSetCapabilityParam(value)} />;\r\n      case 'number': return <Input disabled={isEditingDesiredCaps} id={id} placeholder={t('Value')} value={cap.value}\r\n        onChange={(e) => !isNaN(parseInt(e.target.value, 10)) ? onSetCapabilityParam(parseInt(e.target.value, 10)) : onSetCapabilityParam(undefined)} />;\r\n      case 'object':\r\n      case 'json_object':\r\n        return <Input disabled={isEditingDesiredCaps} id={id} type={INPUT.TEXTAREA} rows={4} placeholder={t('Value')} value={cap.value}\r\n          onChange={(e) => onSetCapabilityParam(e.target.value)} />;\r\n      case 'file': return <div className={SessionStyles.fileControlWrapper}>\r\n        <Input disabled={isEditingDesiredCaps} id={id} placeholder={t('Value')} value={cap.value} addonAfter={buttonAfter(cap.value)} />\r\n      </div>;\r\n\r\n      default:\r\n        throw `Invalid cap type: ${cap.type}`;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, Input, Modal, Form, Row, Col, Select } from 'antd';\r\nimport FormattedCaps from './FormattedCaps';\r\nimport CapabilityControl from './CapabilityControl';\r\nimport SessionStyles from './Session.css';\r\nimport {\r\n  DeleteOutlined,\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\nimport {remote} from 'electron';\r\nimport { HEIGHT_OF_SESSION_CONFIG_AREA } from './Layout';\r\nimport { ROW } from '../AntdTypes';\r\n\r\nconst {Item: FormItem} = Form;\r\nconst {Option} = Select;\r\n\r\nexport default class NewSessionForm extends Component {\r\n\r\n  /**\r\n   * Callback when the type of a dcap is changed\r\n   */\r\n  handleSetType (index, type) {\r\n    let {setCapabilityParam, caps} = this.props;\r\n    setCapabilityParam(index, 'type', type);\r\n\r\n    // Translate the current value to the new type\r\n    let translatedValue = caps[index].value;\r\n    switch (type) {\r\n      case 'text':\r\n        translatedValue = translatedValue + '';\r\n        break;\r\n      case 'boolean':\r\n        if (translatedValue === 'true') {\r\n          translatedValue = true;\r\n        } else if (translatedValue === 'false') {\r\n          translatedValue = false;\r\n        } else {\r\n          translatedValue = !!translatedValue;\r\n        }\r\n        break;\r\n      case 'number':\r\n        translatedValue = parseInt(translatedValue, 10) || 0;\r\n        break;\r\n      case 'json_object':\r\n      case 'object':\r\n        translatedValue = translatedValue + '';\r\n        break;\r\n      case 'file':\r\n        translatedValue = '';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setCapabilityParam(index, 'value', translatedValue);\r\n  }\r\n\r\n  render () {\r\n    const {setCapabilityParam, caps, addCapability, removeCapability, saveSession, hideSaveAsModal,\r\n           saveAsText, showSaveAsModal, setSaveAsText, isEditingDesiredCaps, t} = this.props;\r\n\r\n    return <div>\r\n      <Row type={ROW.FLEX} align=\"top\" justify=\"start\" className={SessionStyles.capsFormRow}>\r\n        <Col order={1} span={12} className={`${SessionStyles.capsFormCol} ${isEditingDesiredCaps ? SessionStyles.capsFormDisabled : ''}`}>\r\n          <Form\r\n            className={SessionStyles.newSessionForm}\r\n            style={{maxHeight: remote.getCurrentWindow().getSize()[1] - HEIGHT_OF_SESSION_CONFIG_AREA}}>\r\n\r\n            {caps.map((cap, index) => <Row gutter={8} key={index}>\r\n              <Col span={7}>\r\n                <FormItem>\r\n                  <Input disabled={isEditingDesiredCaps} id={`desiredCapabilityName_${index}`} placeholder={t('Name')}\r\n                    value={cap.name} onChange={(e) => setCapabilityParam(index, 'name', e.target.value)}/>\r\n                </FormItem>\r\n              </Col>\r\n              <Col span={8}>\r\n                <FormItem>\r\n                  <Select disabled={isEditingDesiredCaps} onChange={(val) => this.handleSetType(index, val)} defaultValue={cap.type}>\r\n                    <Option value='text'>{t('text')}</Option>\r\n                    <Option value='boolean'>{t('boolean')}</Option>\r\n                    <Option value='number'>{t('number')}</Option>\r\n                    <Option value='object'>{t('JSON object')}</Option>\r\n                    <Option value='file'>{t('filepath')}</Option>\r\n                  </Select>\r\n                </FormItem>\r\n              </Col>\r\n              <Col span={7}>\r\n                <FormItem>\r\n                  <CapabilityControl {...this.props} cap={cap} id={`desiredCapabilityValue_${index}`}\r\n                    onSetCapabilityParam={(value) => setCapabilityParam(index, 'value', value)} />\r\n                </FormItem>\r\n              </Col>\r\n              <Col span={2}>\r\n                <div className={SessionStyles.btnDeleteCap}>\r\n                  <FormItem>\r\n                    <Button {...{disabled: caps.length <= 1 || isEditingDesiredCaps}}\r\n                      icon={<DeleteOutlined/>}\r\n                      onClick={() => removeCapability(index)}/>\r\n                  </FormItem>\r\n                </div>\r\n              </Col>\r\n            </Row>)}\r\n            <Row>\r\n              <Col span={24}>\r\n                <FormItem>\r\n                  <Button\r\n                    disabled={isEditingDesiredCaps} id='btnAddDesiredCapability'\r\n                    icon={<PlusOutlined/>}\r\n                    onClick={addCapability}\r\n                    className={SessionStyles['add-desired-capability-button']} />\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n        <Col order={2} span={12} className={SessionStyles.capsFormattedCol}>\r\n          <FormattedCaps {...this.props} />\r\n          <Modal visible={showSaveAsModal}\r\n            title={t('Save Capability Set As')}\r\n            okText='Save'\r\n            cancelText='Cancel'\r\n            onCancel={hideSaveAsModal}\r\n            onOk={() => saveSession(caps, {name: saveAsText})}>\r\n            <Input onChange={(e) => setSaveAsText(e.target.value)} addonBefore={t('Name')} value={saveAsText}/>\r\n          </Modal>\r\n        </Col>\r\n      </Row>\r\n    </div>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport { remote } from 'electron';\r\nimport { Button, Row, Col, Table } from 'antd';\r\nimport FormattedCaps from './FormattedCaps';\r\nimport SessionCSS from './Session.css';\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { HEIGHT_OF_SESSION_CONFIG_AREA } from './Layout';\r\n\r\nexport default class SavedSessions extends Component {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n    this.onRow = this.onRow.bind(this);\r\n    this.getRowClassName = this.getRowClassName.bind(this);\r\n  }\r\n\r\n  onRow (record) {\r\n    return {\r\n      onClick: () => {\r\n        const {setCaps} = this.props;\r\n        let session = this.sessionFromUUID(record.key);\r\n        setCaps(session.caps, session.uuid);\r\n      }\r\n    };\r\n  }\r\n\r\n  getRowClassName (record) {\r\n    const {capsUUID} = this.props;\r\n    return capsUUID === record.key ? SessionCSS.selected : '';\r\n  }\r\n\r\n  handleDelete (uuid) {\r\n    return () => {\r\n      if (window.confirm('Are you sure?')) {\r\n        this.props.deleteSavedSession(uuid);\r\n      }\r\n    };\r\n  }\r\n\r\n  sessionFromUUID (uuid) {\r\n    const {savedSessions} = this.props;\r\n    for (let session of savedSessions) {\r\n      if (session.uuid === uuid) {\r\n        return session;\r\n      }\r\n    }\r\n    throw new Error(`Couldn't find session with uuid ${uuid}`);\r\n  }\r\n\r\n  render () {\r\n    const {savedSessions, setCaps, capsUUID, switchTabs} = this.props;\r\n\r\n    const columns = [{\r\n      title: 'Capability Set',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    }, {\r\n      title: 'Created',\r\n      dataIndex: 'date',\r\n      key: 'date'\r\n    }, {\r\n      title: 'Actions',\r\n      key: 'action',\r\n      render: (text, record) => {\r\n        let session = this.sessionFromUUID(record.key);\r\n        return (\r\n          <div>\r\n            <Button\r\n              icon={<EditOutlined/>}\r\n              onClick={() => {setCaps(session.caps, session.uuid); switchTabs('new');}}\r\n              className={SessionCSS['edit-session']}\r\n            />\r\n            <Button\r\n              icon={<DeleteOutlined/>}\r\n              onClick={this.handleDelete(session.uuid)}/>\r\n          </div>\r\n        );\r\n      }\r\n    }];\r\n\r\n    let dataSource = [];\r\n    if (savedSessions) {\r\n      dataSource = savedSessions.map((session) => ({\r\n        key: session.uuid,\r\n        name: (session.name || '(Unnamed)'),\r\n        date: moment(session.date).format('YYYY-MM-DD')\r\n      }));\r\n    }\r\n\r\n    const windowSizeHeight = remote.getCurrentWindow().getSize()[1] - HEIGHT_OF_SESSION_CONFIG_AREA;\r\n    return (<Row gutter={20} className={SessionCSS['saved-sessions']}>\r\n      <Col span={12}>\r\n        <Table\r\n          scroll={{ y: windowSizeHeight }}\r\n          pagination={false}\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          onRow={this.onRow}\r\n          rowClassName={this.getRowClassName}\r\n        />\r\n      </Col>\r\n      <Col span={12}>\r\n        <FormattedCaps {...this.props}\r\n          title={capsUUID ? this.sessionFromUUID(capsUUID).name : null}\r\n        />\r\n      </Col>\r\n    </Row>);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Card, Select, Button, Row, Col } from 'antd';\r\nimport SessionCSS from './Session.css';\r\nimport {\r\n  ReloadOutlined\r\n} from '@ant-design/icons';\r\nimport {ServerTypes} from '../../actions/Session';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nfunction formatCaps (caps) {\r\n  let importantCaps = [caps.app, caps.platformName, caps.deviceName];\r\n  if (caps.automationName) {\r\n    importantCaps.push(caps.automationName);\r\n  }\r\n  return importantCaps.join(', ').trim();\r\n}\r\n\r\nfunction formatCapsBrowserstack (caps) {\r\n  let importantCaps = formatCaps(caps).split(', ');\r\n  if (caps.sessionName) {\r\n    importantCaps.push(caps.sessionName);\r\n  }\r\n  return importantCaps.join(', ').trim();\r\n}\r\n\r\nexport default class AttachToSession extends Component {\r\n\r\n  getSessionInfo (session, serverType) {\r\n    switch (serverType) {\r\n      case ServerTypes.browserstack:\r\n        return `${session.id} — ${formatCapsBrowserstack(session.capabilities)}`;\r\n      default:\r\n        return `${session.id} — ${formatCaps(session.capabilities)}`;\r\n    }\r\n  }\r\n\r\n  render () {\r\n    let {serverType, attachSessId, setAttachSessId, runningAppiumSessions, getRunningSessions, t} = this.props;\r\n    attachSessId = attachSessId || undefined;\r\n    return (<Form>\r\n      <FormItem>\r\n        <Card>\r\n          <p className={SessionCSS.localDesc}>{t('connectToExistingSessionInstructions')}<br/>{t('selectSessionIDInDropdown')}</p>\r\n        </Card>\r\n      </FormItem>\r\n      <FormItem>\r\n        <Row>\r\n          <Col span={23}>\r\n            <Select showSearch\r\n              mode='AutoComplete'\r\n              notFoundContent='None found'\r\n              placeholder={t('enterYourSessionId')}\r\n              value={attachSessId}\r\n              onChange={(value) => setAttachSessId(value)}>\r\n              {runningAppiumSessions.map((session) => <Select.Option key={session.id} value={session.id}>\r\n                <div>{this.getSessionInfo(session, serverType)}</div>\r\n              </Select.Option>)}\r\n            </Select>\r\n          </Col>\r\n          <Col span={1}>\r\n            <div className={SessionCSS.btnReload}>\r\n              <Button\r\n                onClick={getRunningSessions}\r\n                icon={<ReloadOutlined/>} />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </FormItem>\r\n    </Form>);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Card } from 'antd';\r\nimport SessionStyles from './Session.css';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabSauce extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, t} = this.props;\r\n\r\n    const hostname = `http://${server.local.hostname === '0.0.0.0' ? 'localhost' : server.local.hostname}:${server.local.port}`;\r\n\r\n    return <Form>\r\n      <FormItem>\r\n        <Card>\r\n          {server.local.port && <p className={SessionStyles.localDesc}>{t('willUseCurrentlyRunningServer')} <b>{hostname}</b>\r\n          </p>}\r\n        </Card>\r\n      </FormItem>\r\n    </Form>;\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Form, Row, Col, Input, Checkbox } from 'antd';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport default class ServerTabCustom extends Component {\r\n\r\n  render () {\r\n\r\n    const {server, setServerParam, t} = this.props;\r\n\r\n    const localhostIp = '127.0.0.1';\r\n    const defaultServerPath = '/wd/hub';\r\n\r\n    return <Form>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='customServerHost' placeholder={localhostIp} addonBefore={t('Remote Host')} value={server.remote.hostname}\r\n              onChange={(e) => setServerParam('hostname', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='customServerPort' placeholder={4723} addonBefore={t('Remote Port')} value={server.remote.port}\r\n              onChange={(e) => setServerParam('port', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <FormItem>\r\n            <Input id='customServerPath' placeholder={defaultServerPath} addonBefore={t('Remote Path')} value={server.remote.path}\r\n              onChange={(e) => setServerParam('path', e.target.value)} />\r\n          </FormItem>\r\n        </Col>\r\n        <Col span={3}>\r\n          <FormItem>\r\n            <Checkbox id='customServerSSL' checked={!!server.remote.ssl} value={server.remote.ssl} onChange={(e) => setServerParam('ssl', e.target.checked)}>{t('SSL')}</Checkbox>\r\n          </FormItem>\r\n        </Col>\r\n      </Row>\r\n    </Form>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Collapse, Form, Row, Col, Checkbox, Input } from 'antd';\r\nimport styles from './Session.css';\r\n\r\nconst {Panel} = Collapse;\r\nconst FormItem = Form.Item;\r\n\r\nexport default class AdvancedServerParams extends Component {\r\n\r\n\r\n  render () {\r\n    const {server, setServerParam, t} = this.props;\r\n\r\n    return <Row gutter={8}>\r\n      <Col className={styles.advancedSettingsContainerCol}>\r\n        <div className={styles.advancedSettingsContainer}>\r\n          <Collapse bordered={true}>\r\n            <Panel header={t('Advanced Settings')}>\r\n              <Row>\r\n                <Col span={6}>\r\n                  <FormItem>\r\n                    <Checkbox checked={!!server.advanced.allowUnauthorized} onChange={(e) => setServerParam('allowUnauthorized', e.target.checked, 'advanced')}>{t('allowUnauthorizedCerts')}</Checkbox>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col span={4}>\r\n                  <FormItem>\r\n                    <Checkbox checked={!!server.advanced.useProxy} onChange={(e) => setServerParam('useProxy', e.target.checked, 'advanced')}>{t('Use Proxy')}</Checkbox>\r\n                  </FormItem>\r\n                </Col>\r\n                <Col span={6}>\r\n                  <FormItem>\r\n                    <Input disabled={!server.advanced.useProxy} onChange={(e) => setServerParam('proxy', e.target.value, 'advanced')}\r\n                      placeholder={t('Proxy URL')} value={server.advanced.proxy} />\r\n                  </FormItem>\r\n                </Col>\r\n              </Row>\r\n            </Panel>\r\n          </Collapse>\r\n        </div>\r\n      </Col>\r\n    </Row>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport { Modal, Row, Col, Button } from 'antd';\r\nimport CloudProviders from './CloudProviders';\r\nimport SessionStyles from './Session.css';\r\nimport { BUTTON } from '../AntdTypes';\r\n\r\nexport default class CloudProviderSelector extends Component {\r\n\r\n  componentDidMount () {\r\n    const {setLocalServerParams, getSavedSessions, setSavedServerParams, getRunningSessions} = this.props;\r\n    (async () => {\r\n      await getSavedSessions();\r\n      await setSavedServerParams();\r\n      await setLocalServerParams();\r\n      getRunningSessions();\r\n    })();\r\n  }\r\n\r\n  toggleVisibleProvider (providerName) {\r\n    const {addVisibleProvider, removeVisibleProvider, visibleProviders = []} = this.props;\r\n    if (visibleProviders.includes(providerName)) {\r\n      removeVisibleProvider(providerName);\r\n    } else {\r\n      addVisibleProvider(providerName);\r\n    }\r\n  }\r\n\r\n  handleCloseModal () {\r\n    const {stopAddCloudProvider} = this.props;\r\n    stopAddCloudProvider();\r\n  }\r\n\r\n  render () {\r\n    const {t, isAddingCloudProvider, stopAddCloudProvider, visibleProviders = []} = this.props;\r\n    const providersGrid = _.chunk(_.keys(CloudProviders), 2); // Converts list of providers into list of pairs of providers\r\n    const footer = [<Button key=\"back\" type={BUTTON.PRIMARY} onClick={stopAddCloudProvider}>{t('Done')}</Button>];\r\n\r\n    return <Modal key=\"modal\"\r\n      className={SessionStyles.cloudProviderModal}\r\n      visible={isAddingCloudProvider}\r\n      onCancel={stopAddCloudProvider}\r\n      footer={footer}\r\n      title={t('Select Cloud Providers')}>\r\n      {[\r\n        ..._.map(providersGrid, (row, key) => <Row gutter={16} key={key}>{\r\n          [\r\n            ..._(row).map((providerName) => {\r\n              const providerIsVisible = visibleProviders.includes(providerName);\r\n              const style = {};\r\n              if (providerIsVisible) {\r\n                style.borderColor = '#40a9ff';\r\n              }\r\n              const provider = CloudProviders[providerName];\r\n              return provider && <Col span={12} key={providerName}>\r\n                <Button role=\"checkbox\" style={style} onClick={() => this.toggleVisibleProvider(providerName)}><img src={provider.logo} /></Button>\r\n              </Col>;\r\n            })\r\n          ]\r\n        }</Row>)\r\n      ]}\r\n    </Modal>;\r\n  }\r\n}\r\n","import { shell } from 'electron';\r\nimport React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport NewSessionForm from './NewSessionForm';\r\nimport SavedSessions from './SavedSessions';\r\nimport AttachToSession from './AttachToSession';\r\nimport ServerTabAutomatic from './ServerTabAutomatic';\r\nimport ServerTabCustom from './ServerTabCustom';\r\nimport { Tabs, Button, Spin } from 'antd';\r\nimport AdvancedServerParams from './AdvancedServerParams';\r\nimport SessionStyles from './Session.css';\r\nimport CloudProviders from './CloudProviders';\r\nimport CloudProviderSelector from './CloudProviderSelector';\r\nimport { LikeOutlined } from '@ant-design/icons';\r\nimport { BUTTON } from '../AntdTypes';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\nconst ADD_CLOUD_PROVIDER = 'addCloudProvider';\r\n\r\nexport default class Session extends Component {\r\n\r\n  componentDidMount () {\r\n    const {setLocalServerParams, getSavedSessions, setSavedServerParams, setVisibleProviders, getRunningSessions} = this.props;\r\n    (async () => {\r\n      await getSavedSessions();\r\n      await setSavedServerParams();\r\n      await setLocalServerParams();\r\n      await setVisibleProviders();\r\n      getRunningSessions();\r\n    })();\r\n  }\r\n\r\n  async handleSelectServerTab (tab) {\r\n    const {changeServerType, addCloudProvider} = this.props;\r\n    if (tab === ADD_CLOUD_PROVIDER) {\r\n      addCloudProvider();\r\n      return;\r\n    }\r\n    await changeServerType(tab);\r\n  }\r\n\r\n  removeCloudProvider (providerName) {\r\n    const {removeVisibleProvider} = this.props;\r\n    removeVisibleProvider(providerName);\r\n  }\r\n\r\n  render () {\r\n    const {newSessionBegan, savedSessions, tabKey, switchTabs,\r\n           serverType, server,\r\n           requestSaveAsModal, newSession, caps, capsUUID, saveSession,\r\n           visibleProviders = [],\r\n           isCapsDirty, sessionLoading, attachSessId, t} = this.props;\r\n\r\n    const isAttaching = tabKey === 'attach';\r\n\r\n    return [\r\n      <Spin spinning={!!sessionLoading} key=\"main\">\r\n        <div className={SessionStyles.sessionContainer}>\r\n          <div id='serverTypeTabs' className={SessionStyles.serverTab}>\r\n            <Tabs activeKey={serverType} onChange={(tab) => this.handleSelectServerTab(tab)} className={SessionStyles.serverTabs}>\r\n              {[\r\n                <TabPane disabled={!server.local.port} tab={t('Automatic Server')} key=\"local\">\r\n                  <ServerTabAutomatic {...this.props} />\r\n                </TabPane>,\r\n                <TabPane tab={t('Custom Server')} key=\"remote\">\r\n                  <ServerTabCustom {...this.props} />\r\n                </TabPane>,\r\n                ..._(visibleProviders).map((providerName) => {\r\n                  const provider = CloudProviders[providerName];\r\n                  if (!provider) {\r\n                    return true;\r\n                  }\r\n\r\n                  return <TabPane key={providerName} tab={<div>{provider.tabhead()}</div>}>\r\n                    {provider.tab(this.props)}\r\n                  </TabPane>;\r\n                }),\r\n                <TabPane tab={<span className='addCloudProviderTab'>{ t('Select Cloud Providers') }</span>} key={ADD_CLOUD_PROVIDER}></TabPane>\r\n              ]}\r\n            </Tabs>\r\n            <AdvancedServerParams {...this.props} />\r\n          </div>\r\n\r\n\r\n          {newSessionBegan && <div key={2}>\r\n            <p>{t('sessionInProgress')}</p>\r\n          </div>}\r\n\r\n          {!newSessionBegan && <Tabs activeKey={tabKey} onChange={switchTabs} className={SessionStyles.scrollingTabCont}>\r\n            <TabPane tab={t('Desired Capabilities')} key='new' className={SessionStyles.scrollingTab}>\r\n              <NewSessionForm {...this.props} />\r\n            </TabPane>\r\n            <TabPane tab={t('Saved Capability Sets', {savedSessionsCount: savedSessions.length})} key='saved' className={SessionStyles.scrollingTab} disabled={savedSessions.length === 0}>\r\n              <SavedSessions {...this.props} />\r\n            </TabPane>\r\n            <TabPane tab={t('Attach to Session')} key='attach' className={SessionStyles.scrollingTab}>\r\n              <AttachToSession {...this.props} />\r\n            </TabPane>\r\n          </Tabs>}\r\n          <div className={SessionStyles.sessionFooter}>\r\n            <div className={SessionStyles.desiredCapsLink}>\r\n              <a href=\"#\" onClick={(e) => e.preventDefault() || shell.openExternal('https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/caps.md')}>\r\n                <LikeOutlined />&nbsp;\r\n                {t('desiredCapabilitiesDocumentation')}\r\n              </a>\r\n            </div>\r\n            { (!isAttaching && capsUUID) && <Button onClick={() => saveSession(caps, {uuid: capsUUID})} disabled={!isCapsDirty}>{t('Save')}</Button> }\r\n            {!isAttaching && <Button onClick={requestSaveAsModal}>{t('saveAs')}</Button>}\r\n            {!isAttaching && <Button type={BUTTON.PRIMARY} id='btnStartSession'\r\n              onClick={() => newSession(caps)} className={SessionStyles['start-session-button']}>{t('startSession')}</Button>\r\n            }\r\n            {isAttaching &&\r\n              <Button type={BUTTON.PRIMARY} disabled={!attachSessId} onClick={() => newSession(null, attachSessId)}>\r\n                {t('attachToSession')}\r\n              </Button>\r\n            }\r\n          </div>\r\n        </div>\r\n      </Spin>,\r\n      <CloudProviderSelector {...this.props} />\r\n    ];\r\n  }\r\n}\r\n","import { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withTranslation } from '../util';\r\nimport * as SessionActions from '../actions/Session';\r\nimport Session from '../components/Session/Session';\r\n\r\nfunction mapStateToProps (state) {\r\n  return state.session;\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return bindActionCreators(SessionActions, dispatch);\r\n}\r\n\r\nexport default withTranslation(Session, connect(mapStateToProps, mapDispatchToProps));\r\n","import React, { Component } from 'react';\r\nimport InspectorCSS from './Inspector.css';\r\nimport { parseCoordinates } from './shared';\r\n\r\n/**\r\n * Absolute positioned divs that overlay the app screenshot and highlight the bounding\r\n * boxes of the elements in the app\r\n */\r\nexport default class HighlighterRect extends Component {\r\n\r\n  render () {\r\n    const {selectedElement = {}, selectHoveredElement, unselectHoveredElement, hoveredElement = {}, selectElement, unselectElement, element,\r\n           zIndex, scaleRatio, xOffset, elLocation, elSize} = this.props;\r\n    const {path: hoveredPath} = hoveredElement;\r\n    const {path: selectedPath} = selectedElement;\r\n\r\n    let width, height, left, top, highlighterClasses, key;\r\n    highlighterClasses = [InspectorCSS['highlighter-box']];\r\n\r\n    if (element) {\r\n      // Calculate left, top, width and height coordinates\r\n      const {x1, y1, x2, y2} = parseCoordinates(element);\r\n      left = x1 / scaleRatio + xOffset;\r\n      top = y1 / scaleRatio;\r\n      width = (x2 - x1) / scaleRatio;\r\n      height = (y2 - y1) / scaleRatio;\r\n\r\n      // Add class + special classes to hovered and selected elements\r\n      if (hoveredPath === element.path) {\r\n        highlighterClasses.push(InspectorCSS['hovered-element-box']);\r\n      }\r\n      if (selectedPath === element.path) {\r\n        highlighterClasses.push(InspectorCSS['inspected-element-box']);\r\n      }\r\n      key = element.path;\r\n    } else if (elLocation && elSize) {\r\n      width = elSize.width / scaleRatio;\r\n      height = elSize.height / scaleRatio;\r\n      top = elLocation.y / scaleRatio;\r\n      left = elLocation.x / scaleRatio + xOffset;\r\n      key = 'searchedForElement';\r\n      highlighterClasses.push(InspectorCSS['inspected-element-box']);\r\n    }\r\n\r\n    return <div className={highlighterClasses.join(' ').trim()}\r\n      onMouseOver={() => selectHoveredElement(key)}\r\n      onMouseOut={unselectHoveredElement}\r\n      onClick={() => key === selectedPath ? unselectElement() : selectElement(key)}\r\n      key={key}\r\n      style={{zIndex, left: (left || 0), top: (top || 0), width: (width || 0), height: (height || 0)}}>\r\n      <div></div>\r\n    </div>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { debounce } from 'lodash';\r\nimport HighlighterRect from './HighlighterRect';\r\nimport B from 'bluebird';\r\nimport { SCREENSHOT_INTERACTION_MODE } from './shared';\r\n\r\nconst {TAP, SWIPE, SELECT} = SCREENSHOT_INTERACTION_MODE;\r\n\r\n/**\r\n * Shows screenshot of running application and divs that highlight the elements' bounding boxes\r\n */\r\nexport default class HighlighterRects extends Component {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      scaleRatio: 1,\r\n    };\r\n    this.updateScaleRatio = debounce(this.updateScaleRatio.bind(this), 1000);\r\n  }\r\n\r\n  /**\r\n   * Calculates the ratio that the image is being scaled by\r\n   */\r\n  updateScaleRatio () {\r\n    const screenshotEl = this.props.containerEl.querySelector('img');\r\n\r\n    // now update scale ratio\r\n    this.setState({\r\n      scaleRatio: (this.props.windowSize.width / screenshotEl.offsetWidth)\r\n    });\r\n\r\n  }\r\n\r\n  async handleScreenshotClick () {\r\n    const {screenshotInteractionMode, applyClientMethod,\r\n           swipeStart, swipeEnd, setSwipeStart, setSwipeEnd} = this.props;\r\n    const {x, y} = this.state;\r\n\r\n    if (screenshotInteractionMode === TAP) {\r\n      applyClientMethod({\r\n        methodName: TAP,\r\n        args: [x, y],\r\n      });\r\n    } else if (screenshotInteractionMode === SWIPE) {\r\n      if (!swipeStart) {\r\n        setSwipeStart(x, y);\r\n      } else if (!swipeEnd) {\r\n        setSwipeEnd(x, y);\r\n        await B.delay(500); // Wait a second to do the swipe so user can see the SVG line\r\n        await this.handleDoSwipe();\r\n      }\r\n    }\r\n  }\r\n\r\n  handleMouseMove (e) {\r\n    const {screenshotInteractionMode} = this.props;\r\n    const {scaleRatio} = this.state;\r\n\r\n    if (screenshotInteractionMode !== SELECT) {\r\n      const offsetX = e.nativeEvent.offsetX;\r\n      const offsetY = e.nativeEvent.offsetY;\r\n      const x = offsetX * scaleRatio;\r\n      const y = offsetY * scaleRatio;\r\n      this.setState({\r\n        ...this.state,\r\n        x: Math.round(x),\r\n        y: Math.round(y),\r\n      });\r\n    }\r\n  }\r\n\r\n  handleMouseOut () {\r\n    this.setState({\r\n      ...this.state,\r\n      x: null,\r\n      y: null,\r\n    });\r\n  }\r\n\r\n  async handleDoSwipe () {\r\n    const {swipeStart, swipeEnd, clearSwipeAction, applyClientMethod} = this.props;\r\n    await applyClientMethod({\r\n      methodName: 'swipe',\r\n      args: [swipeStart.x, swipeStart.y, swipeEnd.x, swipeEnd.y],\r\n    });\r\n    clearSwipeAction();\r\n  }\r\n\r\n  componentDidMount () {\r\n    // When DOM is ready, calculate the image scale ratio and re-calculate it whenever the window is resized\r\n    this.updateScaleRatio();\r\n    window.addEventListener('resize', this.updateScaleRatio);\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    window.removeEventListener('resize', this.updateScaleRatio);\r\n  }\r\n\r\n  render () {\r\n    const {source, screenshotInteractionMode, containerEl, searchedForElementBounds, isLocatorTestModalVisible} = this.props;\r\n    const {scaleRatio} = this.state;\r\n\r\n    // Recurse through the 'source' JSON and render a highlighter rect for each element\r\n    const highlighterRects = [];\r\n\r\n    let highlighterXOffset = 0;\r\n    if (containerEl) {\r\n      const screenshotEl = containerEl.querySelector('img');\r\n      highlighterXOffset = screenshotEl.getBoundingClientRect().left -\r\n                           containerEl.getBoundingClientRect().left;\r\n    }\r\n\r\n    let recursive = (element, zIndex = 0) => {\r\n      if (!element) {\r\n        return;\r\n      }\r\n      highlighterRects.push(<HighlighterRect {...this.props}\r\n        element={element}\r\n        zIndex={zIndex}\r\n        scaleRatio={scaleRatio}\r\n        key={element.path}\r\n        xOffset={highlighterXOffset}\r\n      />);\r\n\r\n      if (element.children) {\r\n        for (let childEl of element.children) {\r\n          recursive(childEl, zIndex + 1);\r\n        }\r\n      }\r\n    };\r\n\r\n    // If the use selected an element that they searched for, highlight that element\r\n    if (searchedForElementBounds && isLocatorTestModalVisible) {\r\n      const {location: elLocation, size} = searchedForElementBounds;\r\n      highlighterRects.push(<HighlighterRect elSize={size} elLocation={elLocation} scaleRatio={scaleRatio} xOffset={highlighterXOffset} />);\r\n    }\r\n\r\n    // If we're tapping or swiping, show the 'crosshair' cursor style\r\n    const screenshotStyle = {};\r\n    if ([TAP, SWIPE].includes(screenshotInteractionMode)) {\r\n      screenshotStyle.cursor = 'crosshair';\r\n    }\r\n\r\n    // Don't show highlighter rects when Search Elements modal is open\r\n    if (!isLocatorTestModalVisible) {\r\n      recursive(source);\r\n    }\r\n\r\n    return <div>{ highlighterRects }</div>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { debounce } from 'lodash';\r\nimport HighlighterRects from './HighlighterRects';\r\nimport { Spin, Tooltip } from 'antd';\r\nimport B from 'bluebird';\r\nimport styles from './Inspector.css';\r\nimport { SCREENSHOT_INTERACTION_MODE } from './shared';\r\nimport { withTranslation } from '../../util';\r\n\r\nconst {TAP, SELECT, SWIPE} = SCREENSHOT_INTERACTION_MODE;\r\n\r\n/**\r\n * Shows screenshot of running application and divs that highlight the elements' bounding boxes\r\n */\r\nclass Screenshot extends Component {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n    this.containerEl = null;\r\n    this.state = {\r\n      scaleRatio: 1,\r\n      x: null,\r\n      y: null,\r\n    };\r\n    this.updateScaleRatio = debounce(this.updateScaleRatio.bind(this), 1000);\r\n  }\r\n\r\n  /**\r\n   * Calculates the ratio that the image is being scaled by\r\n   */\r\n  updateScaleRatio () {\r\n    const screenshotEl = this.containerEl.querySelector('img');\r\n\r\n    // now update scale ratio\r\n    this.setState({\r\n      scaleRatio: (this.props.windowSize.width / screenshotEl.offsetWidth)\r\n    });\r\n  }\r\n\r\n  async handleScreenshotClick () {\r\n    const {screenshotInteractionMode, applyClientMethod,\r\n           swipeStart, swipeEnd, setSwipeStart, setSwipeEnd} = this.props;\r\n    const {x, y} = this.state;\r\n\r\n    if (screenshotInteractionMode === TAP) {\r\n      applyClientMethod({\r\n        methodName: 'tap',\r\n        args: [x, y],\r\n      });\r\n    } else if (screenshotInteractionMode === SWIPE) {\r\n      if (!swipeStart) {\r\n        setSwipeStart(x, y);\r\n      } else if (!swipeEnd) {\r\n        setSwipeEnd(x, y);\r\n        await B.delay(500); // Wait a second to do the swipe so user can see the SVG line\r\n        await this.handleDoSwipe();\r\n      }\r\n    }\r\n  }\r\n\r\n  handleMouseMove (e) {\r\n    const {screenshotInteractionMode} = this.props;\r\n    const {scaleRatio} = this.state;\r\n\r\n    if (screenshotInteractionMode !== SELECT) {\r\n      const offsetX = e.nativeEvent.offsetX;\r\n      const offsetY = e.nativeEvent.offsetY;\r\n      const x = offsetX * scaleRatio;\r\n      const y = offsetY * scaleRatio;\r\n      this.setState({\r\n        ...this.state,\r\n        x: Math.round(x),\r\n        y: Math.round(y),\r\n      });\r\n    }\r\n  }\r\n\r\n  handleMouseOut () {\r\n    this.setState({\r\n      ...this.state,\r\n      x: null,\r\n      y: null,\r\n    });\r\n  }\r\n\r\n  async handleDoSwipe () {\r\n    const {swipeStart, swipeEnd, clearSwipeAction, applyClientMethod} = this.props;\r\n    await applyClientMethod({\r\n      methodName: 'swipe',\r\n      args: [swipeStart.x, swipeStart.y, swipeEnd.x, swipeEnd.y],\r\n    });\r\n    clearSwipeAction();\r\n  }\r\n\r\n  componentDidMount () {\r\n    // When DOM is ready, calculate the image scale ratio and re-calculate it whenever the window is resized\r\n    this.updateScaleRatio();\r\n    window.addEventListener('resize', this.updateScaleRatio);\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    window.removeEventListener('resize', this.updateScaleRatio);\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      screenshot,\r\n      methodCallInProgress,\r\n      screenshotInteractionMode,\r\n      swipeStart,\r\n      swipeEnd,\r\n      t,\r\n    } = this.props;\r\n    const {scaleRatio, x, y} = this.state;\r\n\r\n    // If we're tapping or swiping, show the 'crosshair' cursor style\r\n    const screenshotStyle = {};\r\n    if ([TAP, SWIPE].includes(screenshotInteractionMode)) {\r\n      screenshotStyle.cursor = 'crosshair';\r\n    }\r\n\r\n    let swipeInstructions = null;\r\n    if (screenshotInteractionMode === SWIPE && (!swipeStart || !swipeEnd)) {\r\n      if (!swipeStart) {\r\n        swipeInstructions = t('Click swipe start point');\r\n      } else if (!swipeEnd) {\r\n        swipeInstructions = t('Click swipe end point');\r\n      }\r\n    }\r\n\r\n    const screenImg = <img src={`data:image/gif;base64,${screenshot}`} id=\"screenshot\" />;\r\n\r\n    // Show the screenshot and highlighter rects. Show loading indicator if a method call is in progress.\r\n    return <Spin size='large' spinning={!!methodCallInProgress}>\r\n      <div className={styles.innerScreenshotContainer}>\r\n        <div ref={(containerEl) => { this.containerEl = containerEl; }}\r\n          style={screenshotStyle}\r\n          onClick={this.handleScreenshotClick.bind(this)}\r\n          onMouseMove={this.handleMouseMove.bind(this)}\r\n          onMouseOut={this.handleMouseOut.bind(this)}\r\n          className={styles.screenshotBox}>\r\n          {x !== null && <div className={styles.coordinatesContainer}>\r\n            <p>{t('xCoordinate', {x})}</p>\r\n            <p>{t('yCoordinate', {y})}</p>\r\n          </div>}\r\n          {swipeInstructions && <Tooltip visible={true} placement=\"top\" title={swipeInstructions}>{screenImg}</Tooltip>}\r\n          {!swipeInstructions && screenImg}\r\n          {screenshotInteractionMode === SELECT && this.containerEl && <HighlighterRects {...this.props} containerEl={this.containerEl} />}\r\n          {screenshotInteractionMode === SWIPE &&\r\n            <svg className={styles.swipeSvg}>\r\n              {swipeStart && !swipeEnd && <circle\r\n                cx={swipeStart.x / scaleRatio}\r\n                cy={swipeStart.y / scaleRatio}\r\n              />}\r\n              {swipeStart && swipeEnd && <line\r\n                x1={swipeStart.x / scaleRatio}\r\n                y1={swipeStart.y / scaleRatio}\r\n                x2={swipeEnd.x / scaleRatio}\r\n                y2={swipeEnd.y / scaleRatio}\r\n              />}\r\n            </svg>\r\n          }\r\n        </div>\r\n      </div>\r\n    </Spin>;\r\n  }\r\n}\r\n\r\nexport default withTranslation(Screenshot);\r\n","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport {getLocators} from './shared';\r\nimport styles from './Inspector.css';\r\nimport { Button, Row, Col, Input, Modal, Table, Alert, Tooltip, Select } from 'antd';\r\nimport { withTranslation } from '../../util';\r\nimport {clipboard, shell} from 'electron';\r\nimport {\r\n  LoadingOutlined,\r\n  CopyOutlined,\r\n} from '@ant-design/icons';\r\nimport { ROW, ALERT } from '../AntdTypes';\r\n\r\nconst ButtonGroup = Button.Group;\r\nconst NATIVE_APP = 'NATIVE_APP';\r\nconst selectedElementTableCell = (text) => (\r\n  <div className={styles['selected-element-table-cells']}>{text}</div>);\r\n\r\n/**\r\n * Shows details of the currently selected element and shows methods that can\r\n * be called on the elements (tap, sendKeys)\r\n */\r\nclass SelectedElement extends Component {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n    this.handleSendKeys = this.handleSendKeys.bind(this);\r\n    this.contextSelect = this.contextSelect.bind(this);\r\n  }\r\n\r\n  handleSendKeys () {\r\n    const {sendKeys, applyClientMethod, hideSendKeysModal, selectedElementId: elementId} = this.props;\r\n    applyClientMethod({methodName: 'sendKeys', elementId, args: [sendKeys]});\r\n    hideSendKeysModal();\r\n  }\r\n\r\n  contextSelect () {\r\n    const {applyClientMethod, contexts, currentContext, setContext, t} = this.props;\r\n\r\n    return (\r\n      <Tooltip title={t('contextSwitcher')}>\r\n        <Select value={currentContext} onChange={(value) => {\r\n          setContext(value);\r\n          applyClientMethod({methodName: 'context', args: [value]});\r\n        }}\r\n        className={styles['locator-strategy-selector']}>\r\n          {contexts.map(({id, title}) =>\r\n            <Select.Option key={id} value={id}>{title ? `${title} (${id})` : id}</Select.Option>\r\n          )}\r\n        </Select>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      applyClientMethod,\r\n      contexts,\r\n      currentContext,\r\n      setFieldValue,\r\n      getFindElementsTimes,\r\n      findElementsExecutionTimes,\r\n      isFindingElementsTimes,\r\n      sendKeys,\r\n      selectedElement,\r\n      sendKeysModalVisible,\r\n      showSendKeysModal,\r\n      hideSendKeysModal,\r\n      selectedElementId: elementId,\r\n      sourceXML,\r\n      elementInteractionsNotAvailable,\r\n      t,\r\n    } = this.props;\r\n    const {attributes, classChain, predicateString, xpath} = selectedElement;\r\n    const isDisabled = !elementId || isFindingElementsTimes;\r\n\r\n    // Get the columns for the attributes table\r\n    let attributeColumns = [{\r\n      title: t('Attribute'),\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      width: 100,\r\n      render: selectedElementTableCell\r\n\r\n    }, {\r\n      title: t('Value'),\r\n      dataIndex: 'value',\r\n      key: 'value',\r\n      render: selectedElementTableCell\r\n    }];\r\n\r\n    // Get the data for the attributes table\r\n    let attrArray = _.toPairs(attributes).filter(([key]) => key !== 'path');\r\n    let dataSource = attrArray.map(([key, value]) => ({\r\n      key,\r\n      value,\r\n      name: key,\r\n    }));\r\n    dataSource.unshift({key: 'elementId', value: elementId, name: 'elementId'});\r\n\r\n    // Get the columns for the strategies table\r\n    let findColumns = [{\r\n      title: t('Find By'),\r\n      dataIndex: 'find',\r\n      key: 'find',\r\n      width: 100,\r\n      render: selectedElementTableCell\r\n    }, {\r\n      title: t('Selector'),\r\n      dataIndex: 'selector',\r\n      key: 'selector',\r\n      render: selectedElementTableCell\r\n    }, {\r\n      title: t('Time'),\r\n      dataIndex: 'time',\r\n      key: 'time',\r\n      align: 'right',\r\n      width: 100,\r\n      render: selectedElementTableCell\r\n    }];\r\n\r\n    const getTimeButton = (<Tooltip title={t('getTimes')}>\r\n      <Button\r\n        disabled={isDisabled}\r\n        id='btnGetTimings'\r\n        onClick={() => getFindElementsTimes(findDataSource)}\r\n      >\r\n        {t('Get Timing')}\r\n      </Button>\r\n    </Tooltip>);\r\n\r\n    // Get the data for the strategies table\r\n    let findDataSource = _.toPairs(getLocators(attributes, sourceXML)).map(([key, selector]) => ({\r\n      key,\r\n      selector,\r\n      find: key,\r\n      time: getTimeButton,\r\n    }));\r\n\r\n    // If XPath is the only provided data source, warn the user about it's brittleness\r\n    let showXpathWarning = false;\r\n    if (findDataSource.length === 0) {\r\n      showXpathWarning = true;\r\n    }\r\n\r\n    // Add class chain to the data source as well\r\n    if (classChain && currentContext === NATIVE_APP) {\r\n      const classChainText = <Tooltip title={t('This selector is in BETA, it is the XML selector translated to `-ios class chain`.')}>\r\n        {/* eslint-disable-next-line shopify/jsx-no-hardcoded-content */}\r\n        <span>\r\n          -ios class chain\r\n          <strong>\r\n            {/* eslint-disable-next-line shopify/jsx-no-hardcoded-content */}\r\n            <a onClick={(e) => e.preventDefault() || shell.openExternal('https://github.com/facebookarchive/WebDriverAgent/wiki/Class-Chain-Queries-Construction-Rules')}>(beta)</a>\r\n          </strong>\r\n        </span>\r\n      </Tooltip>;\r\n\r\n      findDataSource.push({\r\n        key: '-ios class chain',\r\n        find: classChainText,\r\n        selector: classChain,\r\n        time: getTimeButton\r\n      });\r\n    }\r\n\r\n    // Add predicate string to the data source as well\r\n    if (predicateString && currentContext === NATIVE_APP) {\r\n      const predicateStringText = <Tooltip title={t('This selector is in BETA, it is the XML selector translated to `-ios predicate string`.')}>\r\n        {/* eslint-disable-next-line shopify/jsx-no-hardcoded-content */}\r\n        <span>\r\n          -ios predicate string\r\n          <strong>\r\n            {/* eslint-disable-next-line shopify/jsx-no-hardcoded-content */}\r\n            <a onClick={(e) => e.preventDefault() || shell.openExternal('https://github.com/facebookarchive/WebDriverAgent/wiki/Predicate-Queries-Construction-Rules')}>(beta)</a>\r\n          </strong>\r\n        </span>\r\n      </Tooltip>;\r\n\r\n      findDataSource.push({\r\n        key: '-ios predicate string',\r\n        find: predicateStringText,\r\n        selector: predicateString,\r\n        time: getTimeButton\r\n      });\r\n    }\r\n\r\n    // Add XPath to the data source as well\r\n    if (xpath) {\r\n      findDataSource.push({\r\n        key: 'xpath',\r\n        find: 'xpath',\r\n        selector: xpath,\r\n        time: getTimeButton,\r\n      });\r\n    }\r\n\r\n    // Replace table data with table data that has the times\r\n    if (findElementsExecutionTimes.length > 0) {\r\n      findDataSource = findElementsExecutionTimes;\r\n    }\r\n\r\n    return <div>\r\n      {elementInteractionsNotAvailable && <Row type={ROW.FLEX} gutter={10}>\r\n        <Col>\r\n          <Alert type={ALERT.INFO} message={t('Interactions are not available for this element')} showIcon />\r\n        </Col>\r\n      </Row>}\r\n      <Row justify=\"center\" type={ROW.FLEX} align=\"middle\" gutter={10} className={styles.elementActions}>\r\n        <Col>\r\n          <ButtonGroup size=\"small\">\r\n            <Button\r\n              disabled={isDisabled}\r\n              icon={!elementInteractionsNotAvailable && !elementId && <LoadingOutlined/>}\r\n              id='btnTapElement'\r\n              onClick={() => applyClientMethod({methodName: 'click', elementId})}\r\n            >\r\n              {t('Tap')}\r\n            </Button>\r\n            <Button\r\n              disabled={isDisabled}\r\n              id='btnSendKeysToElement'\r\n              onClick={() => showSendKeysModal()}\r\n            >\r\n              {t('Send Keys')}\r\n            </Button>\r\n            <Button\r\n              disabled={isDisabled}\r\n              id='btnClearElement'\r\n              onClick={() => applyClientMethod({methodName: 'clear', elementId})}\r\n            >\r\n              {t('Clear')}\r\n            </Button>\r\n            <Tooltip title={t('Copy Attributes to Clipboard')}>\r\n              <Button\r\n                disabled={isDisabled}\r\n                id='btnCopyAttributes'\r\n                icon={<CopyOutlined/>}\r\n                onClick={() => clipboard.writeText(JSON.stringify(dataSource))}/>\r\n            </Tooltip>\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n      {findDataSource.length > 0 &&\r\n        <Row>\r\n          <Table\r\n            columns={findColumns}\r\n            dataSource={findDataSource}\r\n            size=\"small\"\r\n            tableLayout='fixed'\r\n            pagination={false} />\r\n        </Row>\r\n      }\r\n      <br />\r\n      {currentContext === NATIVE_APP && showXpathWarning &&\r\n        <div>\r\n          <Alert\r\n            message={t('usingXPathNotRecommended')}\r\n            type={ALERT.WARNING}\r\n            showIcon\r\n          />\r\n          <br />\r\n        </div>\r\n      }\r\n      {currentContext === NATIVE_APP && contexts && contexts.length > 1 &&\r\n        <div>\r\n          <Alert\r\n            message={t('usingSwitchContextRecommended')}\r\n            type={ALERT.WARNING}\r\n            showIcon\r\n          />\r\n          <br />\r\n        </div>\r\n      }\r\n      {currentContext !== NATIVE_APP &&\r\n        <div>\r\n          <Alert\r\n            message={t('usingWebviewContext')}\r\n            type={ALERT.WARNING}\r\n            showIcon\r\n          />\r\n          <br />\r\n        </div>\r\n      }\r\n      {contexts && contexts.length > 1 &&\r\n        <div>\r\n          {this.contextSelect()}\r\n          <br /><br />\r\n        </div>\r\n      }\r\n      {dataSource.length > 0 &&\r\n        <Row>\r\n          <Table\r\n            columns={attributeColumns}\r\n            dataSource={dataSource}\r\n            size=\"small\"\r\n            pagination={false} />\r\n        </Row>\r\n      }\r\n      <Modal title={t('Send Keys')}\r\n        visible={sendKeysModalVisible}\r\n        okText={t('Send Keys')}\r\n        cancelText={t('Cancel')}\r\n        onCancel={hideSendKeysModal}\r\n        onOk={this.handleSendKeys}\r\n      >\r\n        <Input\r\n          placeholder={t('Enter keys')}\r\n          value={sendKeys}\r\n          onChange={(e) => setFieldValue('sendKeys', e.target.value)}\r\n        />\r\n      </Modal>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default withTranslation(SelectedElement);\r\n","import React, { Component } from 'react';\r\nimport { clipboard } from 'electron';\r\nimport { Input, Row, Col, Button } from 'antd';\r\nimport InspectorStyles from './Inspector.css';\r\nimport { withTranslation } from '../../util';\r\n\r\nclass LocatedElements extends Component {\r\n\r\n  onSubmit () {\r\n    const {locatedElements, locatorTestStrategy, locatorTestValue, searchForElement, clearSearchResults, hideLocatorTestModal} = this.props;\r\n    if (locatedElements) {\r\n      hideLocatorTestModal();\r\n      clearSearchResults();\r\n    } else {\r\n      searchForElement(locatorTestStrategy, locatorTestValue);\r\n    }\r\n  }\r\n\r\n  onCancel () {\r\n    const {hideLocatorTestModal, clearSearchResults} = this.props;\r\n    hideLocatorTestModal();\r\n    clearSearchResults();\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      locatedElements,\r\n      applyClientMethod,\r\n      setLocatorTestElement,\r\n      locatorTestElement,\r\n      clearSearchResults,\r\n      t,\r\n    } = this.props;\r\n\r\n    return <Row>\r\n      <p className={InspectorStyles['back-link-container']}>\r\n        <a onClick={(e) => e.preventDefault() || clearSearchResults()}>{t('back')}</a>\r\n      </p>\r\n      {t('elementsCount', {elementCount: locatedElements.length})}\r\n      <Col>\r\n        <select className={InspectorStyles['locator-search-results']}\r\n          multiple='true'\r\n          onChange={(e) => setLocatorTestElement(e.target.value)}\r\n          value={[locatorTestElement]}>\r\n          {locatedElements.map((elementId) => (\r\n            <option key={elementId} value={elementId}>{elementId}</option>\r\n          ))}\r\n          {locatedElements.length === 0 && <option disabled>{t('couldNotFindAnyElements')}</option>}\r\n        </select>\r\n        {locatedElements.length > 0 && <div className={InspectorStyles['locator-test-interactions-container']}>\r\n          <div>\r\n            <Button size='small'\r\n              disabled={!locatorTestElement}\r\n              onClick={() => clipboard.writeText(locatorTestElement)}\r\n            >\r\n              {t('Copy ID')}\r\n            </Button>\r\n          </div>\r\n          <div>\r\n            <Button size='small'\r\n              disabled={!locatorTestElement}\r\n              onClick={() => applyClientMethod({methodName: 'click', elementId: locatorTestElement})}\r\n            >\r\n              {t('Tap Element')}\r\n            </Button>\r\n          </div>\r\n          <div>\r\n            <Button size='small'\r\n              disabled={!locatorTestElement}\r\n              onClick={() => applyClientMethod({methodName: 'clear', elementId: locatorTestElement})}\r\n            >\r\n              {t('Clear')}\r\n            </Button>\r\n          </div>\r\n          <div className={InspectorStyles['send-keys-container']}>\r\n            <Input size='small' placeholder={t('Enter keys')} onChange={(e) => this.setState({...this.state, sendKeys: e.target.value})}/>\r\n            <Button size='small'\r\n              disabled={!locatorTestElement}\r\n              onClick={() => applyClientMethod({methodName: 'sendKeys', elementId: locatorTestElement, args: [this.state.sendKeys || '']})}\r\n            >\r\n              {t('Send Keys')}\r\n            </Button>\r\n          </div>\r\n        </div>}\r\n      </Col>\r\n    </Row>;\r\n  }\r\n}\r\n\r\nexport default withTranslation(LocatedElements);","import React, { Component } from 'react';\r\nimport { Input, Select, Row, Col } from 'antd';\r\nimport InspectorStyles from './Inspector.css';\r\nimport { withTranslation } from '../../util';\r\n\r\nconst { Option } = Select;\r\n\r\nclass ElementLocator extends Component {\r\n\r\n  onSubmit () {\r\n    const {locatedElements, locatorTestStrategy, locatorTestValue, searchForElement, clearSearchResults, hideLocatorTestModal} = this.props;\r\n    if (locatedElements) {\r\n      hideLocatorTestModal();\r\n      clearSearchResults();\r\n    } else {\r\n      searchForElement(locatorTestStrategy, locatorTestValue);\r\n    }\r\n  }\r\n\r\n  onCancel () {\r\n    const {hideLocatorTestModal, clearSearchResults} = this.props;\r\n    hideLocatorTestModal();\r\n    clearSearchResults();\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      setLocatorTestValue,\r\n      locatorTestValue,\r\n      setLocatorTestStrategy,\r\n      locatorTestStrategy,\r\n      t,\r\n    } = this.props;\r\n\r\n    const locatorStrategies = [\r\n      ['id', 'Id'],\r\n      ['xpath', 'XPath'],\r\n      ['name', 'Name'],\r\n      ['class name', 'Class Name'],\r\n      ['accessibility id', 'Accessibility ID'],\r\n      ['-android uiautomator', 'UIAutomator Selector (Android UiAutomator2)'],\r\n      ['-android datamatcher', 'DataMatcher Selector (Android Espresso)'],\r\n      ['-android viewtag', 'Android View Tag (Android Espresso)'],\r\n      ['-ios predicate string', 'Predicate String (iOS)'],\r\n      ['-ios class chain', 'Class Chain (iOS)'],\r\n    ];\r\n\r\n    return <div>\r\n      <Row>\r\n        <Col>\r\n          {t('locatorStrategy')}\r\n          <Select className={InspectorStyles['locator-strategy-selector']}\r\n            onChange={(value) => setLocatorTestStrategy(value)}\r\n            value={locatorTestStrategy}>\r\n            {locatorStrategies.map(([strategyValue, strategyName]) => (\r\n              <Option key={strategyValue} value={strategyValue}>{strategyName}</Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n      </Row> <Row>\r\n        {t('selector')}\r\n        <Col>\r\n          <Input.TextArea onChange={(e) => setLocatorTestValue(e.target.value)} value={locatorTestValue} />\r\n        </Col>\r\n      </Row>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default withTranslation(ElementLocator);","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Modal } from 'antd';\r\nimport LocatedElements from './LocatedElements';\r\nimport ElementLocator from './ElementLocator';\r\nimport { withTranslation } from '../../util';\r\n\r\n\r\nclass LocatorTestModal extends Component {\r\n\r\n  onSubmit () {\r\n    const {\r\n      locatedElements,\r\n      locatorTestStrategy,\r\n      locatorTestValue,\r\n      searchForElement,\r\n      clearSearchResults,\r\n      hideLocatorTestModal,\r\n    } = this.props;\r\n    if (locatedElements) {\r\n      hideLocatorTestModal();\r\n      clearSearchResults();\r\n    } else {\r\n      searchForElement(locatorTestStrategy, locatorTestValue);\r\n    }\r\n  }\r\n\r\n  onCancel () {\r\n    const {hideLocatorTestModal, clearSearchResults} = this.props;\r\n    hideLocatorTestModal();\r\n    clearSearchResults();\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      isLocatorTestModalVisible,\r\n      isSearchingForElements,\r\n      locatedElements,\r\n      t,\r\n    } = this.props;\r\n\r\n    return <Modal visible={isLocatorTestModalVisible}\r\n      okText={locatedElements ? t('Done') : t('Search')}\r\n      cancelText={t('Cancel')}\r\n      title={t('Search for element')}\r\n      confirmLoading={isSearchingForElements}\r\n      onOk={this.onSubmit.bind(this)}\r\n      onCancel={this.onCancel.bind(this)}>\r\n      {!locatedElements && <ElementLocator {...this.props} />}\r\n      {locatedElements && <LocatedElements {...this.props} />}\r\n    </Modal>;\r\n  }\r\n}\r\n\r\nexport default withTranslation(LocatorTestModal);","import React, { Component } from 'react';\r\nimport { Tree } from 'antd';\r\nimport LocatorTestModal from './LocatorTestModal';\r\nimport InspectorStyles from './Inspector.css';\r\nimport { withTranslation } from '../../util';\r\n\r\nconst IMPORTANT_ATTRS = [\r\n  'name',\r\n  'content-desc',\r\n  'resource-id',\r\n  'AXDescription',\r\n  'AXIdentifier',\r\n];\r\n\r\n/**\r\n * Shows the 'source' of the app as a Tree\r\n */\r\nclass Source extends Component {\r\n\r\n  getFormattedTag (el) {\r\n    const {tagName, attributes} = el;\r\n    let attrs = [];\r\n\r\n    // Don't do translations on Source XML\r\n    /* eslint-disable shopify/jsx-no-hardcoded-content */\r\n    for (let attr of IMPORTANT_ATTRS) {\r\n      if (attributes[attr]) {\r\n        attrs.push(<span key={attr}>&nbsp;\r\n          <i\r\n            className={InspectorStyles.sourceAttrName}\r\n          >{attr}</i>=<span\r\n            className={InspectorStyles.sourceAttrValue}\r\n          >&quot;{attributes[attr]}&quot;</span>\r\n        </span>);\r\n      }\r\n    }\r\n    return <span>\r\n      &lt;<b className={InspectorStyles.sourceTag}>{tagName}</b>{attrs}&gt;\r\n    </span>;\r\n    /* eslint-enable shopify/jsx-no-hardcoded-content */\r\n  }\r\n\r\n  /**\r\n   * Binds to antd Tree onSelect. If an item is being unselected, path is undefined\r\n   * otherwise 'path' refers to the element's path.\r\n   */\r\n  handleSelectElement (path) {\r\n    const {selectElement, unselectElement} = this.props;\r\n\r\n    if (!path) {\r\n      unselectElement();\r\n    } else {\r\n      selectElement(path);\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      source,\r\n      sourceError,\r\n      setExpandedPaths,\r\n      expandedPaths,\r\n      selectedElement = {},\r\n      t,\r\n    } = this.props;\r\n    const {path} = selectedElement;\r\n\r\n    // Recursives through the source and renders a TreeNode for an element\r\n    let recursive = (elemObj) => {\r\n      if (!((elemObj || {}).children || []).length) {return null;}\r\n\r\n      return elemObj.children.map((el) => ({\r\n        title: this.getFormattedTag(el),\r\n        key: el.path,\r\n        children: recursive(el),\r\n      }));\r\n    };\r\n\r\n    return <div id='sourceContainer' className={InspectorStyles['tree-container']}>\r\n      {source &&\r\n        <Tree\r\n          onExpand={setExpandedPaths}\r\n          autoExpandParent={false}\r\n          expandedKeys={expandedPaths}\r\n          onSelect={(selectedPaths) => this.handleSelectElement(selectedPaths[0])}\r\n          selectedKeys={[path]}\r\n          treeData={recursive(source)} />\r\n      }\r\n      {!source && !sourceError &&\r\n        <i>{t('Gathering initial app source…')}</i>\r\n      }\r\n      {\r\n        sourceError && t('couldNotObtainSource', {errorMsg: JSON.stringify(sourceError)})\r\n      }\r\n      <LocatorTestModal {...this.props} />\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default withTranslation(Source);\r\n","import { clipboard } from 'electron';\r\nimport React, { Component } from 'react';\r\nimport { Card, Select, Tooltip, Button } from 'antd';\r\nimport InspectorStyles from './Inspector.css';\r\nimport frameworks from '../../lib/client-frameworks';\r\nimport { highlight } from 'highlight.js';\r\nimport { withTranslation } from '../../util';\r\nimport {\r\n  ExportOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  CloseOutlined,\r\n  CodeOutlined\r\n} from '@ant-design/icons';\r\nimport { BUTTON } from '../AntdTypes';\r\n\r\nconst Option = Select.Option;\r\nconst ButtonGroup = Button.Group;\r\n\r\nclass RecordedActions extends Component {\r\n\r\n  code (raw = true) {\r\n    let {showBoilerplate, sessionDetails, recordedActions, actionFramework\r\n    } = this.props;\r\n    let {host, port, path, https, desiredCapabilities} = sessionDetails;\r\n\r\n    let framework = new frameworks[actionFramework](host, port, path,\r\n      https, desiredCapabilities);\r\n    framework.actions = recordedActions;\r\n    let rawCode = framework.getCodeString(showBoilerplate);\r\n    if (raw) {\r\n      return rawCode;\r\n    }\r\n    return highlight(framework.language, rawCode, true).value;\r\n  }\r\n\r\n  actionBar () {\r\n    const {\r\n      showBoilerplate,\r\n      recordedActions,\r\n      setActionFramework,\r\n      toggleShowBoilerplate,\r\n      clearRecording,\r\n      closeRecorder,\r\n      actionFramework,\r\n      isRecording,\r\n      t,\r\n    } = this.props;\r\n\r\n    let frameworkOpts = Object.keys(frameworks).map((f) => <Option value={f}>\r\n      {frameworks[f].readableName}\r\n    </Option>);\r\n\r\n    return <div>\r\n      {!!recordedActions.length &&\r\n        <Select defaultValue={actionFramework} onChange={setActionFramework}\r\n          className={InspectorStyles['framework-dropdown']} size=\"small\">\r\n          {frameworkOpts}\r\n        </Select>\r\n      }\r\n      {(!!recordedActions.length || !isRecording) &&\r\n        <ButtonGroup size=\"small\">\r\n          {!!recordedActions.length &&\r\n          <Tooltip title={t('Show/Hide Boilerplate Code')}>\r\n            <Button\r\n              onClick={toggleShowBoilerplate}\r\n              icon={<ExportOutlined/>}\r\n              type={showBoilerplate ? BUTTON.PRIMARY : BUTTON.DEFAULT}\r\n            />\r\n          </Tooltip>\r\n          }\r\n          {!!recordedActions.length &&\r\n          <Tooltip title={t('Copy code to clipboard')}>\r\n            <Button\r\n              icon={<CopyOutlined/>}\r\n              onClick={() => clipboard.writeText(this.code())}\r\n            />\r\n          </Tooltip>\r\n          }\r\n          {!!recordedActions.length &&\r\n          <Tooltip title={t('Clear Actions')}>\r\n            <Button\r\n              icon={<DeleteOutlined/>}\r\n              onClick={clearRecording}/>\r\n          </Tooltip>\r\n          }\r\n          {!isRecording &&\r\n          <Tooltip title={t('Close Recorder')}>\r\n            <Button\r\n              icon={<CloseOutlined/>}\r\n              onClick={closeRecorder}/>\r\n          </Tooltip>\r\n          }\r\n        </ButtonGroup>\r\n      }\r\n    </div>;\r\n  }\r\n\r\n  render () {\r\n    const {recordedActions, t} = this.props;\r\n\r\n    const highlightedCode = this.code(false);\r\n\r\n    return <Card title={<span><CodeOutlined /> {t('Recorder')}</span>}\r\n      className={InspectorStyles['recorded-actions']}\r\n      extra={this.actionBar()}\r\n    >\r\n      {!recordedActions.length &&\r\n        <div className={InspectorStyles['no-recorded-actions']}>\r\n          {t('Perform some actions to see code show up here')}\r\n        </div>\r\n      }\r\n      {!!recordedActions.length &&\r\n        <div\r\n          className={InspectorStyles['recorded-code']}\r\n          dangerouslySetInnerHTML={{__html: highlightedCode}} />\r\n      }\r\n    </Card>;\r\n  }\r\n}\r\n\r\nexport default withTranslation(RecordedActions);\r\n","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport { Row, Col, Button, Select, Modal, Input, notification, } from 'antd';\r\nimport { actionDefinitions, actionArgTypes } from './shared';\r\nimport InspectorStyles from './Inspector.css';\r\nimport { INPUT } from '../AntdTypes';\r\n\r\nexport default class Actions extends Component {\r\n\r\n  startPerformingAction (actionName, action) {\r\n    const { startEnteringActionArgs, applyClientMethod } = this.props;\r\n    if (_.isEmpty(action.args)) {\r\n      applyClientMethod({methodName: action.methodName, args: [], skipRefresh: !action.refresh});\r\n    } else {\r\n      startEnteringActionArgs(actionName, action);\r\n    }\r\n  }\r\n\r\n  executeCommand () {\r\n    const { pendingAction, cancelPendingAction, applyClientMethod, t } = this.props;\r\n    let {args, action} = pendingAction;\r\n    let {methodName} = action;\r\n\r\n    // Special case for 'startActivity'\r\n    // TODO: Fix these... args aren't getting through\r\n    if (action.methodName === 'startActivity') {\r\n      args = {appPackage: args[0], appActivity: args[1], appWaitPackage: args[2],\r\n              intentAction: args[3], intentCategory: args[4], intentFlags: args[5],\r\n              optionalIntentArguments: args[6], dontStopAppOnReset: args[7]};\r\n    }\r\n\r\n    // Special case for 'rotateDevice'\r\n    if (action.methodName === 'rotateDevice') {\r\n      args = {x: args[0], y: args[1], duration: args[2], radius: args[3], rotation: args[4], touchCount: args[5]};\r\n    }\r\n\r\n    // Special case for 'execute'\r\n    if (action.methodName === 'execute') {\r\n      if (!_.isEmpty(args[1])) {\r\n        try {\r\n          args[1] = JSON.parse(args[1]);\r\n        } catch (e) {\r\n          notification.error({\r\n            message: t('invalidJson', {json: args[1]}),\r\n            duration: 5,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    // Special case for 'updateSettings'\r\n    if (action.methodName === 'updateSettings') {\r\n      if (_.isString(args[0])) {\r\n        try {\r\n          args[0] = JSON.parse(args[0]);\r\n        } catch (e) {\r\n          notification.error({\r\n            message: t('invalidJson', {json: args[0]}),\r\n            duration: 5,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    applyClientMethod({methodName, args, skipRefresh: !action.refresh});\r\n    cancelPendingAction();\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      t, selectActionGroup, selectSubActionGroup, selectedActionGroup, selectedSubActionGroup, pendingAction,\r\n      cancelPendingAction, setActionArg } = this.props;\r\n    return <div className={InspectorStyles['actions-container']}>\r\n      <Row gutter={16} className={InspectorStyles['arg-row']}>\r\n        <Col span={24}>\r\n          <Select onChange={(actionGroupName) => selectActionGroup(actionGroupName)} placeholder={t('Select Action Group')}>\r\n            { _.keys(actionDefinitions).map((actionGroup) => <Select.Option key={actionGroup}>{t(actionGroup)}</Select.Option>) }\r\n          </Select>\r\n        </Col>\r\n      </Row>\r\n      {selectedActionGroup && <Row>\r\n        <Col span={24}>\r\n          <Select onChange={(actionGroupName) => selectSubActionGroup(actionGroupName)} placeholder={t('Select Sub Group')}>\r\n            { _.keys(actionDefinitions[selectedActionGroup]).map((actionGroup) => <Select.Option key={actionGroup}>{t(actionGroup)}</Select.Option>) }\r\n          </Select>\r\n        </Col>\r\n      </Row>}\r\n      <Row>\r\n        {selectedSubActionGroup && _.toPairs(actionDefinitions[selectedActionGroup][selectedSubActionGroup]).map(([actionName, action], index) => <Col key={index} span={8}>\r\n          <div className={InspectorStyles['btn-container']}>\r\n            <Button onClick={() => this.startPerformingAction(actionName, action)}>{t(actionName)}</Button>\r\n          </div>\r\n        </Col>)}\r\n      </Row>\r\n      {!!pendingAction && <Modal\r\n        title={pendingAction.actionName}\r\n        okText={t('Execute Action')}\r\n        visible={!!pendingAction}\r\n        onOk={() => this.executeCommand()}\r\n        onCancel={() => cancelPendingAction()}>\r\n        {\r\n          !_.isEmpty(pendingAction.action.args) && _.map(pendingAction.action.args, ([argName, argType], index) => <Row key={index} gutter={16}>\r\n            <Col span={24} className={InspectorStyles['arg-container']}>\r\n              {\r\n                argType === actionArgTypes.NUMBER && <Input\r\n                  type={INPUT.NUMBER}\r\n                  value={pendingAction.args[index]}\r\n                  addonBefore={t(argName)}\r\n                  onChange={(e) => setActionArg(index, _.toNumber(e.target.value))}\r\n                />\r\n              }\r\n              {argType === actionArgTypes.STRING && <Input addonBefore={t(argName)} onChange={(e) => setActionArg(index, e.target.value)}/>}\r\n            </Col>\r\n          </Row>)\r\n        }\r\n      </Modal>}\r\n    </div>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { debounce } from 'lodash';\r\nimport { SCREENSHOT_INTERACTION_MODE, INTERACTION_MODE } from './shared';\r\nimport { Card, Button, Spin, Tooltip, Modal, Tabs } from 'antd';\r\nimport Screenshot from './Screenshot';\r\nimport SelectedElement from './SelectedElement';\r\nimport Source from './Source';\r\nimport InspectorStyles from './Inspector.css';\r\nimport RecordedActions from './RecordedActions';\r\nimport Actions from './Actions';\r\nimport { clipboard } from 'electron';\r\nimport {\r\n  SelectOutlined,\r\n  ScanOutlined,\r\n  SwapRightOutlined,\r\n  ArrowLeftOutlined,\r\n  ReloadOutlined,\r\n  EyeOutlined,\r\n  PauseOutlined,\r\n  SearchOutlined,\r\n  CopyOutlined,\r\n  CloseOutlined,\r\n  FileTextOutlined,\r\n  TagOutlined,\r\n  ThunderboltOutlined\r\n} from '@ant-design/icons';\r\nimport { BUTTON } from '../AntdTypes';\r\n\r\nconst {SELECT, SWIPE, TAP} = SCREENSHOT_INTERACTION_MODE;\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst ButtonGroup = Button.Group;\r\n\r\nconst MIN_WIDTH = 1080;\r\nconst MIN_HEIGHT = 570;\r\nconst MAX_SCREENSHOT_WIDTH = 500;\r\n\r\nexport default class Inspector extends Component {\r\n\r\n  constructor () {\r\n    super();\r\n    this.didInitialResize = false;\r\n    this.state = {};\r\n    this.screenAndSourceEl = null;\r\n    this.lastScreenshot = null;\r\n    this.updateSourceTreeWidth = debounce(this.updateSourceTreeWidth.bind(this), 50);\r\n  }\r\n\r\n  updateSourceTreeWidth () {\r\n    // the idea here is to keep track of the screenshot image width. if it has\r\n    // too much space to the right or bottom, adjust the max-width of the\r\n    // screenshot container so the source tree flex adjusts to always fill the\r\n    // remaining space. This keeps everything looking tight.\r\n    if (!this.screenAndSourceEl) {\r\n      return;\r\n    }\r\n\r\n    const screenshotBox = this.screenAndSourceEl.querySelector('#screenshotContainer');\r\n    const img = this.screenAndSourceEl.querySelector('#screenshotContainer img#screenshot');\r\n\r\n    if (!img) {\r\n      return;\r\n    }\r\n\r\n    const imgRect = img.getBoundingClientRect();\r\n    const screenshotRect = screenshotBox.getBoundingClientRect();\r\n    screenshotBox.style.flexBasis = `${imgRect.width}px`;\r\n    if (imgRect.width < screenshotRect.width) {\r\n      screenshotBox.style.maxWidth = `${imgRect.width}px`;\r\n    } else if (imgRect.height < screenshotRect.height) {\r\n      // get what the img width would be if it fills screenshot box height\r\n      const attemptedWidth = (screenshotRect.height / imgRect.height) * imgRect.width;\r\n      screenshotBox.style.maxWidth = attemptedWidth > MAX_SCREENSHOT_WIDTH ?\r\n        `${MAX_SCREENSHOT_WIDTH}px` :\r\n        `${attemptedWidth}px`;\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const curHeight = window.innerHeight;\r\n    const curWidth = window.innerWidth;\r\n    const needsResize = (curHeight < MIN_HEIGHT) || (curWidth < MIN_WIDTH);\r\n    if (!this.didInitialResize && needsResize) {\r\n      const newWidth = curWidth < MIN_WIDTH ? MIN_WIDTH : curWidth;\r\n      const newHeight = curHeight < MIN_HEIGHT ? MIN_HEIGHT : curHeight;\r\n      // resize width to something sensible for using the inspector on first run\r\n      window.resizeTo(newWidth, newHeight);\r\n    }\r\n    this.didInitialResize = true;\r\n    this.props.bindAppium();\r\n    this.props.applyClientMethod({methodName: 'source'});\r\n    this.props.getSavedActionFramework();\r\n    window.addEventListener('resize', this.updateSourceTreeWidth);\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    const {screenshot} = this.props;\r\n    // only update when the screenshot changed, not for any other kind of\r\n    // update\r\n    if (screenshot !== this.lastScreenshot) {\r\n      this.updateSourceTreeWidth();\r\n      this.lastScreenshot = screenshot;\r\n    }\r\n  }\r\n\r\n  screenshotInteractionChange (mode) {\r\n    const {selectScreenshotInteractionMode, clearSwipeAction} = this.props;\r\n    clearSwipeAction(); // When the action changes, reset the swipe action\r\n    selectScreenshotInteractionMode(mode);\r\n  }\r\n\r\n  render () {\r\n    const {screenshot, screenshotError, selectedElement = {},\r\n           applyClientMethod, quitSession, isRecording, showRecord, startRecording,\r\n           pauseRecording, showLocatorTestModal,\r\n           screenshotInteractionMode, isFindingElementsTimes,\r\n           selectedInteractionMode, selectInteractionMode,\r\n           showKeepAlivePrompt, keepSessionAlive, sourceXML, t} = this.props;\r\n    const {path} = selectedElement;\r\n\r\n    let main = <div className={InspectorStyles['inspector-main']} ref={(el) => {this.screenAndSourceEl = el;}}>\r\n      <div id='screenshotContainer' className={InspectorStyles['screenshot-container']}>\r\n        {screenshot && <Screenshot {...this.props} />}\r\n        {screenshotError && t('couldNotObtainScreenshot', {screenshotError})}\r\n        {!screenshot && !screenshotError &&\r\n          <Spin size=\"large\" spinning={true}>\r\n            <div className={InspectorStyles.screenshotBox} />\r\n          </Spin>\r\n        }\r\n      </div>\r\n      <div id='sourceTreeContainer' className={InspectorStyles['interaction-tab-container']} >\r\n        {showRecord &&\r\n          <RecordedActions {...this.props} />\r\n        }\r\n        <Tabs activeKey={selectedInteractionMode}\r\n          size=\"small\"\r\n          onChange={(tab) => selectInteractionMode(tab)}>\r\n          <TabPane tab={t('Source')} key={INTERACTION_MODE.SOURCE}>\r\n            <div className='action-row'>\r\n              <div className='action-col'>\r\n                <Card title={<span><FileTextOutlined /> {t('App Source')}</span>}>\r\n                  <Source {...this.props} />\r\n                </Card>\r\n              </div>\r\n              <div id='selectedElementContainer'\r\n                className={`${InspectorStyles['interaction-tab-container']} ${InspectorStyles['element-detail-container']} action-col`}>\r\n                <Card title={<span><TagOutlined /> {t('selectedElement')}</span>}\r\n                  className={InspectorStyles['selected-element-card']}>\r\n                  {path && <SelectedElement {...this.props}/>}\r\n                  {!path && <i>{t('selectElementInSource')}</i>}\r\n                </Card>\r\n              </div>\r\n            </div>\r\n          </TabPane>\r\n          <TabPane tab={t('Actions')} key={INTERACTION_MODE.ACTIONS}>\r\n            <Card\r\n              title={<span><ThunderboltOutlined /> {t('Actions')}</span>}\r\n              className={InspectorStyles['interaction-tab-card']}>\r\n              <Actions {...this.props} />\r\n            </Card>\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </div>;\r\n\r\n    let actionControls = <div className={InspectorStyles['action-controls']}>\r\n      <ButtonGroup size=\"large\" value={screenshotInteractionMode}>\r\n        <Tooltip title={t('Select Elements')}>\r\n          <Button icon={<SelectOutlined/>} onClick={() => {this.screenshotInteractionChange(SELECT);}}\r\n            type={screenshotInteractionMode === SELECT ? BUTTON.PRIMARY : BUTTON.DEFAULT}\r\n          />\r\n        </Tooltip>\r\n        <Tooltip title={t('Swipe By Coordinates')}>\r\n          <Button icon={<SwapRightOutlined/>} onClick={() => {this.screenshotInteractionChange(SWIPE);}}\r\n            type={screenshotInteractionMode === SWIPE ? BUTTON.PRIMARY : BUTTON.DEFAULT}\r\n          />\r\n        </Tooltip>\r\n        <Tooltip title={t('Tap By Coordinates')}>\r\n          <Button icon={<ScanOutlined/>} onClick={() => {this.screenshotInteractionChange(TAP);}}\r\n            type={screenshotInteractionMode === TAP ? BUTTON.PRIMARY : BUTTON.DEFAULT}\r\n          />\r\n        </Tooltip>\r\n      </ButtonGroup>\r\n    </div>;\r\n\r\n    let controls = <div className={InspectorStyles['inspector-toolbar']}>\r\n      {actionControls}\r\n      <ButtonGroup size=\"large\">\r\n        <Tooltip title={t('Back')}>\r\n          <Button id='btnGoBack' icon={<ArrowLeftOutlined/>} onClick={() => applyClientMethod({methodName: 'back'})}/>\r\n        </Tooltip>\r\n        <Tooltip title={t('refreshSource')}>\r\n          <Button id='btnReload' icon={<ReloadOutlined/>} onClick={() => applyClientMethod({methodName: 'source'})}/>\r\n        </Tooltip>\r\n        {!isRecording &&\r\n          <Tooltip title={t('Start Recording')}>\r\n            <Button id='btnStartRecording' icon={<EyeOutlined/>} onClick={startRecording}/>\r\n          </Tooltip>\r\n        }\r\n        {isRecording &&\r\n          <Tooltip title={t('Pause Recording')}>\r\n            <Button id='btnPause' icon={<PauseOutlined/>} type={BUTTON.DANGER} onClick={pauseRecording}/>\r\n          </Tooltip>\r\n        }\r\n        <Tooltip title={t('Search for element')}>\r\n          <Button id='searchForElement' icon={<SearchOutlined/>} onClick={showLocatorTestModal}/>\r\n        </Tooltip>\r\n        <Tooltip title={t('Copy XML Source to Clipboard')}>\r\n          <Button id='btnSourceXML' icon={<CopyOutlined/>} onClick={() => clipboard.writeText(sourceXML)}/>\r\n        </Tooltip>\r\n        <Tooltip title={t('quitSessionAndClose')}>\r\n          <Button id='btnClose' icon={<CloseOutlined/>} onClick={() => quitSession()}/>\r\n        </Tooltip>\r\n      </ButtonGroup>\r\n    </div>;\r\n\r\n    return (<Spin spinning={isFindingElementsTimes} key=\"main\">\r\n      <div className={InspectorStyles['inspector-container']}>\r\n        {controls}\r\n        {main}\r\n        <Modal\r\n          title={t('Session Inactive')}\r\n          visible={showKeepAlivePrompt}\r\n          onOk={() => keepSessionAlive()}\r\n          onCancel={() => quitSession()}\r\n          okText={t('Keep Session Running')}\r\n          cancelText={t('Quit Session')}\r\n        >\r\n          <p>{t('Your session is about to expire')}</p>\r\n        </Modal>\r\n      </div>\r\n    </Spin>);\r\n  }\r\n}\r\n","import { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withTranslation } from '../util';\r\nimport * as InspectorActions from '../actions/Inspector';\r\nimport InspectorPage from '../components/Inspector/Inspector';\r\n\r\nfunction mapStateToProps (state) {\r\n  return state.inspector;\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return bindActionCreators(InspectorActions, dispatch);\r\n}\r\n\r\nexport default withTranslation(InspectorPage, connect(mapStateToProps, mapDispatchToProps));\r\n","import { ipcRenderer } from 'electron';\r\n\r\nexport const SET_ENVIRONMENT_VARIABLE = 'SET_ENVIRONMENT_VARIABLE';\r\nexport const SET_ENVIRONMENT_VARIABLES = 'SET_ENVIRONMENT_VARIABLES';\r\nexport const GET_ENVIRONMENT_VARIABLES = 'GET_ENVIRONMENT_VARIABLES';\r\nexport const SAVE_ENVIRONMENT_VARIABLES = 'SAVE_ENVIRONMENT_VARIABLES';\r\n\r\nexport function setEnvironmentVariable (name, value) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_ENVIRONMENT_VARIABLE, name, value});\r\n  };\r\n}\r\n\r\nexport function getEnvironmentVariables () {\r\n  return (dispatch) => {\r\n    dispatch({type: GET_ENVIRONMENT_VARIABLES});\r\n    ipcRenderer.send('appium-get-env');\r\n    ipcRenderer.once('appium-env', (evt, env) => {\r\n      const {defaultEnvironmentVariables, savedEnvironmentVariables} = env;\r\n      dispatch({type: SET_ENVIRONMENT_VARIABLES, defaultEnvironmentVariables, savedEnvironmentVariables});\r\n    });\r\n  };\r\n}","import { ipcRenderer, remote } from 'electron';\r\nimport React, { Component } from 'react';\r\nimport { Input, Row, Col, Button } from 'antd';\r\nimport styles from './Config.css';\r\n\r\nconst ENV_VARIABLE_NAMES = [\r\n  'ANDROID_HOME', 'JAVA_HOME'\r\n];\r\n\r\nconst {app, dialog, getCurrentWindow} = remote;\r\n\r\nclass Config extends Component {\r\n  componentDidMount () {\r\n    this.props.getEnvironmentVariables();\r\n  }\r\n\r\n  saveAndRestart () {\r\n    const { environmentVariables, t } = this.props;\r\n\r\n    ipcRenderer.send('appium-save-env', environmentVariables);\r\n    ipcRenderer.once('appium-save-env-done', () => {\r\n      const message = t(`Application must be restarted for changes to take effect`);\r\n      const dialogOptions = {type: 'info', buttons: [t('Restart Now'), t('Restart Later')], message};\r\n      ipcRenderer.removeAllListeners('appium-save-env-done');\r\n      dialog.showMessageBox(dialogOptions, (response) => {\r\n        if (response === 0) {\r\n          // If 'Restart Now' restart the application\r\n          app.relaunch();\r\n          app.exit();\r\n        } else {\r\n          // ...otherwise, just close the current window\r\n          getCurrentWindow().close();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      setEnvironmentVariable,\r\n      environmentVariables,\r\n      defaultEnvironmentVariables,\r\n      t,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <h3>{t('Environment Variables')}</h3>\r\n        {ENV_VARIABLE_NAMES.map((ENV_NAME) => (\r\n          <Row key={ENV_NAME} className={styles.row} gutter={16}>\r\n            <Col span={24}>\r\n              <Input addonBefore={ENV_NAME}\r\n                placeholder={defaultEnvironmentVariables[ENV_NAME]}\r\n                onChange={(evt) => setEnvironmentVariable(ENV_NAME, evt.target.value)}\r\n                value={environmentVariables[ENV_NAME]} />\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n        <Row>\r\n          <Col span={24}>\r\n            <Button onClick={() => this.saveAndRestart()}>{t('Save and Restart')}</Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Config;","import { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as ConfigActions from '../actions/Config';\r\nimport ConfigPage from '../components/Config/Config';\r\nimport { withTranslation } from '../util';\r\n\r\nfunction mapStateToProps (state) {\r\n  return state.config;\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return bindActionCreators(ConfigActions, dispatch);\r\n}\r\n\r\nexport default withTranslation(ConfigPage, connect(mapStateToProps, mapDispatchToProps));\r\n","import React, { Suspense } from 'react';\r\nimport { Switch, Route } from 'react-router';\r\nimport App from './containers/App';\r\nimport StartServerPage from './containers/StartServerPage';\r\nimport ServerMonitorPage from './containers/ServerMonitorPage';\r\nimport SessionPage from './containers/SessionPage';\r\nimport InspectorPage from './containers/InspectorPage';\r\nimport ConfigPage from './containers/ConfigPage';\r\nimport Spinner from './components/Spinner/Spinner';\r\nimport { ipcRenderer } from 'electron';\r\nimport i18n from '../configs/i18next.config.renderer';\r\n\r\nipcRenderer.on('appium-language-changed', (event, message) => {\r\n  if (i18n.language !== message.language) {\r\n    i18n.changeLanguage(message.language);\r\n  }\r\n});\r\n\r\nexport default () => (\r\n  <Suspense fallback={<Spinner />}>\r\n    <App>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={StartServerPage} />\r\n        <Route path=\"/monitor\" component={ServerMonitorPage} />\r\n        <Route path=\"/session\" component={SessionPage} />\r\n        <Route path=\"/inspector\" component={InspectorPage} />\r\n        <Route path=\"/config\" component={ConfigPage} />\r\n      </Switch>\r\n    </App>\r\n  </Suspense>\r\n);\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'antd';\r\nimport { ipcRenderer } from 'electron';\r\nimport WrongFolderStyles from './WrongFolderStyles.css';\r\nimport { withTranslation } from '../../util';\r\nimport {\r\n  ExportOutlined\r\n} from '@ant-design/icons';\r\nimport { BUTTON } from '../AntdTypes';\r\n\r\nclass WrongFolder extends Component {\r\n  // This tells the main thread to move this to applications folder which will cause the app to close and restart\r\n  moveToApplicationsFolder () {\r\n    ipcRenderer.send('appium-move-to-applications-folder');\r\n  }\r\n\r\n  render () {\r\n    const {t} = this.props;\r\n    return <div className={WrongFolderStyles['wrong-folder']}>\r\n      <div>\r\n        <div>{t('Appium Desktop should be run from the Applications folder')}</div>\r\n        <Button\r\n          size='large'\r\n          icon={<ExportOutlined/>}\r\n          type={BUTTON.PRIMARY}\r\n          onClick={this.moveToApplicationsFolder.bind(this)}>\r\n          {t('Move to Applications Folder')}\r\n        </Button>\r\n      </div>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default withTranslation(WrongFolder);","import React, { Component, Suspense } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport Spinner from '../components/Spinner/Spinner';\r\nimport Routes from '../routes';\r\nimport WrongFolder from '../components/WrongFolder/WrongFolder';\r\nimport electron from 'electron';\r\n\r\nconst { app } = electron.remote;\r\nconst isDev = process.env.NODE_ENV === 'development';\r\n\r\nfunction shouldShowWrongFolderComponent () {\r\n  // If we set an ENV to show wrong folder\r\n  if (process.env.WRONG_FOLDER) {\r\n    return true;\r\n  }\r\n\r\n  // If we set an ENV to require it to NOT be shown don't show it\r\n  if (process.env.FORCE_NO_WRONG_FOLDER) {\r\n    return false;\r\n  }\r\n\r\n  return (app.isInApplicationsFolder && !app.isInApplicationsFolder()) && !isDev;\r\n}\r\n\r\nexport default class Root extends Component {\r\n  render () {\r\n    const { store, history } = this.props;\r\n    return (\r\n      <Provider store={store}>\r\n        {shouldShowWrongFolderComponent() ?\r\n          <Suspense fallback={<Spinner />}>\r\n            <WrongFolder />\r\n          </Suspense> :\r\n          <ConnectedRouter history={history}>\r\n            <Routes />\r\n          </ConnectedRouter>\r\n        }\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Alert } from 'antd';\r\nimport styles from './ErrorBoundary.css';\r\nimport { ALERT } from '../AntdTypes';\r\n\r\nconst CREATE_ISSUE_URL = 'https://github.com/appium/appium-desktop/issues/new';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError (error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { error };\r\n  }\r\n\r\n  render () {\r\n    const { error } = this.state;\r\n    if (error) {\r\n      return (\r\n        <div className={styles.errorBoundary}>\r\n          <Alert\r\n            message=\"Unhandled Exception\"\r\n            type={ALERT.ERROR}\r\n            description={\r\n              <>\r\n                <span children={`An unexpected error occurred with message: ${error.message}.`} />\r\n                <br />\r\n                <span children='Please kindly open up a bug report at ' />\r\n                <a href={CREATE_ISSUE_URL} children={CREATE_ISSUE_URL}/>.\r\n                <pre children={error.stack} />\r\n              </>\r\n            }\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n","export const SET_UPDATE_STATE = 'SET_UPDATE_STATE';\r\n\r\nexport function setUpdateState (updateState) {\r\n  return (dispatch) => {\r\n    dispatch({type: SET_UPDATE_STATE, updateState});\r\n  };\r\n}","import * as configActions from '../actions/Config';\r\nimport * as inspectorActions from '../actions/Inspector';\r\nimport * as serverMonitorActions from '../actions/ServerMonitor';\r\nimport * as sessionActions from '../actions/Session';\r\nimport * as startServerActions from '../actions/StartServer';\r\nimport * as updaterActions from '../actions/Updater';\r\n\r\nexport default {\r\n  ...configActions,\r\n  ...inspectorActions,\r\n  ...serverMonitorActions,\r\n  ...sessionActions,\r\n  ...startServerActions,\r\n  ...updaterActions,\r\n};","import _, {omit} from 'lodash';\r\nimport formatJSON from 'format-json';\r\n\r\nimport { NEW_SESSION_REQUESTED, NEW_SESSION_BEGAN, NEW_SESSION_DONE,\r\n         SAVE_SESSION_REQUESTED, SAVE_SESSION_DONE, GET_SAVED_SESSIONS_REQUESTED,\r\n         GET_SAVED_SESSIONS_DONE, SESSION_LOADING, SESSION_LOADING_DONE,\r\n         SET_CAPABILITY_PARAM, ADD_CAPABILITY, REMOVE_CAPABILITY, SET_CAPS,\r\n         SWITCHED_TABS, SAVE_AS_MODAL_REQUESTED, HIDE_SAVE_AS_MODAL_REQUESTED, SET_SAVE_AS_TEXT,\r\n         DELETE_SAVED_SESSION_REQUESTED, DELETE_SAVED_SESSION_DONE,\r\n         CHANGE_SERVER_TYPE, SET_SERVER_PARAM, SET_SERVER, SET_ATTACH_SESS_ID,\r\n         GET_SESSIONS_REQUESTED, GET_SESSIONS_DONE,\r\n         ENABLE_DESIRED_CAPS_EDITOR, ABORT_DESIRED_CAPS_EDITOR, SAVE_RAW_DESIRED_CAPS, SET_RAW_DESIRED_CAPS, SHOW_DESIRED_CAPS_JSON_ERROR,\r\n         IS_ADDING_CLOUD_PROVIDER, SET_PROVIDERS,\r\n         ServerTypes } from '../actions/Session';\r\n\r\nconst visibleProviders = []; // Pull this from \"electron-settings\"\r\nconst server = {\r\n  local: {},\r\n  remote: {},\r\n  advanced: {},\r\n};\r\n\r\nfor (const serverName of _.keys(ServerTypes)) {\r\n  server[serverName] = {};\r\n}\r\n\r\n// Make sure there's always at least one cap\r\nconst INITIAL_STATE = {\r\n  savedSessions: [],\r\n  tabKey: 'new',\r\n  serverType: ServerTypes.local,\r\n  visibleProviders,\r\n  server: {\r\n    local: {},\r\n    remote: {},\r\n    sauce: {\r\n      dataCenter: 'us-west-1',\r\n    },\r\n    testobject: {\r\n      dataCenter: 'US',\r\n    },\r\n    headspin: {},\r\n    browserstack: {},\r\n    advanced: {},\r\n    bitbar: {},\r\n    kobiton: {},\r\n    perfecto: {},\r\n    pcloudy: {},\r\n    testingbot: {},\r\n    experitest: {},\r\n    roboticmobi: {},\r\n  },\r\n  attachSessId: null,\r\n\r\n  // Make sure there's always at least one cap\r\n  caps: [{\r\n    type: 'text',\r\n  }],\r\n\r\n  isCapsDirty: true,\r\n  gettingSessions: false,\r\n  runningAppiumSessions: [],\r\n  isEditingDesiredCaps: false,\r\n  isValidCapsJson: true,\r\n  isValidatingCapsJson: false,\r\n  isAddingCloudProvider: false,\r\n};\r\n\r\nlet nextState;\r\n\r\n// returns false if the attachSessId is not present in the runningSessions list\r\nconst isAttachSessIdValid = (runningSessions, attachSessId) => {\r\n  if (!attachSessId || !runningSessions) {\r\n    return false;\r\n  }\r\n  for (const session of runningSessions) {\r\n    if (session.id === attachSessId) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default function session (state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case NEW_SESSION_REQUESTED:\r\n      return {\r\n        ...state,\r\n        newSessionRequested: true,\r\n      };\r\n\r\n    case NEW_SESSION_BEGAN:\r\n      nextState = {\r\n        ...state,\r\n        newSessionBegan: true,\r\n      };\r\n      return omit(nextState, 'newSessionRequested');\r\n\r\n    case NEW_SESSION_DONE:\r\n      return omit(state, 'newSessionBegan');\r\n\r\n\r\n    case ADD_CAPABILITY:\r\n      return {\r\n        ...state,\r\n        caps: [\r\n          ...state.caps,\r\n          {type: 'text'},\r\n        ],\r\n      };\r\n\r\n    case REMOVE_CAPABILITY:\r\n      return {\r\n        ...state,\r\n        caps: state.caps.filter((cap, index) => index !== action.index),\r\n      };\r\n\r\n    case SET_CAPABILITY_PARAM:\r\n      return {\r\n        ...state,\r\n        isCapsDirty: true,\r\n        caps: state.caps.map((cap, index) => index !== action.index ? cap : {\r\n          ...cap,\r\n          [action.name]: action.value\r\n        }),\r\n      };\r\n\r\n    case SET_CAPS:\r\n      nextState = {\r\n        ...state,\r\n        caps: action.caps,\r\n        capsUUID: action.uuid,\r\n      };\r\n      return omit(nextState, 'isCapsDirty');\r\n\r\n    case SAVE_SESSION_REQUESTED:\r\n      nextState = {\r\n        ...state,\r\n        saveSessionRequested: true,\r\n      };\r\n      return omit(nextState, 'showSaveAsModal');\r\n\r\n    case SAVE_SESSION_DONE:\r\n      return omit(state, ['saveSessionRequested', 'saveAsText']);\r\n\r\n    case GET_SAVED_SESSIONS_REQUESTED:\r\n      return {\r\n        ...state,\r\n        getSavedSessionsRequested: true,\r\n      };\r\n\r\n    case GET_SAVED_SESSIONS_DONE:\r\n      nextState = {\r\n        ...state,\r\n        savedSessions: action.savedSessions || [],\r\n      };\r\n      return omit(nextState, 'getSavedSessionsRequested');\r\n\r\n    case DELETE_SAVED_SESSION_REQUESTED:\r\n      return {\r\n        ...state,\r\n        deletingSession: true,\r\n      };\r\n\r\n    case DELETE_SAVED_SESSION_DONE:\r\n      return {\r\n        ...state,\r\n        deletingSession: false,\r\n        capsUUID: null\r\n      };\r\n\r\n    case SWITCHED_TABS:\r\n      return {\r\n        ...state,\r\n        tabKey: action.key,\r\n      };\r\n\r\n    case SAVE_AS_MODAL_REQUESTED:\r\n      return {\r\n        ...state,\r\n        'showSaveAsModal': true,\r\n      };\r\n\r\n    case HIDE_SAVE_AS_MODAL_REQUESTED:\r\n      return omit(state, ['saveAsText', 'showSaveAsModal']);\r\n\r\n    case SET_SAVE_AS_TEXT:\r\n      return {\r\n        ...state,\r\n        saveAsText: action.saveAsText,\r\n      };\r\n\r\n    case CHANGE_SERVER_TYPE:\r\n      return {\r\n        ...state,\r\n        serverType: action.serverType,\r\n      };\r\n\r\n    case SET_SERVER_PARAM:\r\n      return {\r\n        ...state,\r\n        server: {\r\n          ...state.server,\r\n          [action.serverType]: {\r\n            ...state.server[action.serverType],\r\n            [action.name]: action.value,\r\n          }\r\n        },\r\n      };\r\n\r\n    case SET_SERVER:\r\n      return {\r\n        ...state,\r\n        server: {\r\n          ...(function extendCurrentServerStateWithNewServerState (currentServerState, newServerState) {\r\n            // Copy current server state and extend it with new server state\r\n            const nextServerState = _.cloneDeep(currentServerState || {});\r\n\r\n            // Extend each server (sauce, testobject, remote, kobiton, etc...)\r\n            for (let serverName of _.keys(nextServerState)) {\r\n              nextServerState[serverName] = {\r\n                ...(nextServerState[serverName] || {}),\r\n                ...(newServerState[serverName] || {}),\r\n              };\r\n            }\r\n            return nextServerState;\r\n          })(state.server, action.server),\r\n        },\r\n        serverType: action.serverType || ServerTypes.local,\r\n      };\r\n\r\n    case SET_ATTACH_SESS_ID:\r\n      return {\r\n        ...state,\r\n        attachSessId: action.attachSessId\r\n      };\r\n\r\n    case SESSION_LOADING:\r\n      return {\r\n        ...state,\r\n        sessionLoading: true,\r\n      };\r\n\r\n    case SESSION_LOADING_DONE:\r\n      return omit(state, 'sessionLoading');\r\n\r\n    case GET_SESSIONS_REQUESTED:\r\n      return {\r\n        ...state,\r\n        gettingSessions: true,\r\n      };\r\n\r\n    case GET_SESSIONS_DONE: {\r\n      const attachSessId = isAttachSessIdValid(action.sessions, state.attachSessId) ? state.attachSessId : null;\r\n      return {\r\n        ...state,\r\n        gettingSessions: false,\r\n        attachSessId: (action.sessions && action.sessions.length > 0 && !attachSessId) ? action.sessions[0].id : attachSessId,\r\n        runningAppiumSessions: action.sessions || [],\r\n      };\r\n    }\r\n\r\n    case ENABLE_DESIRED_CAPS_EDITOR:\r\n      return {\r\n        ...state,\r\n        isEditingDesiredCaps: true,\r\n        rawDesiredCaps: formatJSON.plain(\r\n          // Translate the caps definition to a proper capabilities JS Object\r\n          _.reduce(\r\n            state.caps,\r\n            (result, obj) => ({\r\n              ...result,\r\n              [obj.name]: obj.value,\r\n            }),\r\n            {}\r\n          )\r\n        ),\r\n        isValidCapsJson: true,\r\n        isValidatingCapsJson: false, // Don't start validating JSON until the user has attempted to save the JSON\r\n      };\r\n\r\n    case ABORT_DESIRED_CAPS_EDITOR:\r\n      return {\r\n        ...state,\r\n        isEditingDesiredCaps: false,\r\n        rawDesiredCaps: null,\r\n      };\r\n\r\n    case SAVE_RAW_DESIRED_CAPS:\r\n      return {\r\n        ...state,\r\n        isEditingDesiredCaps: false,\r\n        caps: action.caps,\r\n      };\r\n\r\n    case SHOW_DESIRED_CAPS_JSON_ERROR:\r\n      return {\r\n        ...state,\r\n        invalidCapsJsonReason: action.message,\r\n        isValidCapsJson: false,\r\n        isValidatingCapsJson: true,\r\n      };\r\n\r\n    case SET_RAW_DESIRED_CAPS:\r\n      return {\r\n        ...state,\r\n        rawDesiredCaps: action.rawDesiredCaps,\r\n        isValidCapsJson: action.isValidCapsJson,\r\n        invalidCapsJsonReason: action.invalidCapsJsonReason,\r\n      };\r\n\r\n    case IS_ADDING_CLOUD_PROVIDER:\r\n      return {\r\n        ...state,\r\n        isAddingCloudProvider: action.isAddingProvider,\r\n      };\r\n\r\n    case SET_PROVIDERS:\r\n      return {\r\n        ...state,\r\n        visibleProviders: action.providers || []\r\n      };\r\n\r\n    default:\r\n      return {...state};\r\n  }\r\n}\r\n","import { omit } from 'lodash';\r\nimport { SET_SOURCE_AND_SCREENSHOT, QUIT_SESSION_REQUESTED, QUIT_SESSION_DONE,\r\n         SESSION_DONE, SELECT_ELEMENT, UNSELECT_ELEMENT, SELECT_HOVERED_ELEMENT, SET_SELECTED_ELEMENT_ID, SET_INTERACTIONS_NOT_AVAILABLE,\r\n         UNSELECT_HOVERED_ELEMENT, METHOD_CALL_REQUESTED, METHOD_CALL_DONE,\r\n         SET_FIELD_VALUE, SET_EXPANDED_PATHS, SHOW_SEND_KEYS_MODAL,\r\n         HIDE_SEND_KEYS_MODAL, START_RECORDING, PAUSE_RECORDING, CLEAR_RECORDING,\r\n         SET_ACTION_FRAMEWORK, RECORD_ACTION, CLOSE_RECORDER, SET_SHOW_BOILERPLATE, SET_SESSION_DETAILS,\r\n         SHOW_LOCATOR_TEST_MODAL, HIDE_LOCATOR_TEST_MODAL, SET_LOCATOR_TEST_STRATEGY, SET_LOCATOR_TEST_VALUE,\r\n         SEARCHING_FOR_ELEMENTS, SEARCHING_FOR_ELEMENTS_COMPLETED, SET_LOCATOR_TEST_ELEMENT, CLEAR_SEARCH_RESULTS,\r\n         ADD_ASSIGNED_VAR_CACHE, CLEAR_ASSIGNED_VAR_CACHE, SET_SCREENSHOT_INTERACTION_MODE,\r\n         SET_SWIPE_START, SET_SWIPE_END, CLEAR_SWIPE_ACTION, SET_SEARCHED_FOR_ELEMENT_BOUNDS, CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS,\r\n         PROMPT_KEEP_ALIVE, HIDE_PROMPT_KEEP_ALIVE, GET_FIND_ELEMENTS_TIMES, GET_FIND_ELEMENTS_TIMES_COMPLETED,\r\n         SELECT_ACTION_GROUP, SELECT_SUB_ACTION_GROUP,\r\n         SELECT_INTERACTION_MODE, ENTERING_ACTION_ARGS, SET_ACTION_ARG, REMOVE_ACTION, SET_CONTEXT\r\n} from '../actions/Inspector';\r\nimport { SCREENSHOT_INTERACTION_MODE, INTERACTION_MODE } from '../components/Inspector/shared';\r\n\r\nconst DEFAULT_FRAMEWORK = 'java';\r\n\r\nconst INITIAL_STATE = {\r\n  expandedPaths: ['0'],\r\n  isRecording: false,\r\n  showRecord: false,\r\n  showBoilerplate: false,\r\n  recordedActions: [],\r\n  actionFramework: DEFAULT_FRAMEWORK,\r\n  sessionDetails: {},\r\n  isLocatorTestModalVisible: false,\r\n  locatorTestStrategy: 'id',\r\n  locatorTestValue: '',\r\n  isSearchingForElements: false,\r\n  assignedVarCache: {},\r\n  screenshotInteractionMode: SCREENSHOT_INTERACTION_MODE.SELECT,\r\n  searchedForElementBounds: null,\r\n  showKeepAlivePrompt: false,\r\n  selectedActionGroup: null,\r\n  selectedSubActionGroup: null,\r\n  selectedInteractionMode: INTERACTION_MODE.SOURCE,\r\n  pendingAction: null,\r\n  findElementsExecutionTimes: [],\r\n  isFindingElementsTimes: false,\r\n};\r\n\r\n/**\r\n * Look up an element in the source with the provided path\r\n */\r\nfunction findElementByPath (path, source) {\r\n  let selectedElement = source;\r\n  for (let index of path.split('.')) {\r\n    selectedElement = selectedElement.children[index];\r\n  }\r\n  return {...selectedElement};\r\n}\r\n\r\nexport default function inspector (state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case SET_SOURCE_AND_SCREENSHOT:\r\n      return {\r\n        ...state,\r\n        contexts: action.contexts,\r\n        contextsError: action.contextsError,\r\n        currentContext: action.currentContext,\r\n        currentContextError: action.currentContextError,\r\n        source: action.source,\r\n        sourceXML: action.sourceXML,\r\n        sourceError: action.sourceError,\r\n        screenshot: action.screenshot,\r\n        screenshotError: action.screenshotError,\r\n        windowSize: action.windowSize,\r\n        windowSizeError: action.windowSizeError,\r\n        findElementsExecutionTimes: [],\r\n      };\r\n\r\n    case QUIT_SESSION_REQUESTED:\r\n      return {\r\n        ...state,\r\n        methodCallInProgress: true,\r\n        isQuittingSession: true,\r\n      };\r\n\r\n    case QUIT_SESSION_DONE:\r\n      return {\r\n        ...INITIAL_STATE\r\n      };\r\n\r\n    case SESSION_DONE:\r\n      return {\r\n        ...state,\r\n        isSessionDone: true,\r\n        methodCallInProgress: false,\r\n      };\r\n\r\n    case SELECT_ELEMENT:\r\n      return {\r\n        ...state,\r\n        selectedElement: findElementByPath(action.path, state.source),\r\n        selectedElementPath: action.path,\r\n        elementInteractionsNotAvailable: false,\r\n        findElementsExecutionTimes: [],\r\n      };\r\n\r\n    case UNSELECT_ELEMENT:\r\n      return {\r\n        ...state,\r\n        selectedElement: undefined,\r\n        selectedElementPath: null,\r\n        selectedElementId: null,\r\n        selectedElementVariableName: null,\r\n        selectedElementVariableType: null,\r\n      };\r\n\r\n    case SET_SELECTED_ELEMENT_ID:\r\n      return {\r\n        ...state,\r\n        selectedElementId: action.elementId,\r\n        selectedElementVariableName: action.variableName,\r\n        selectedElementVariableType: action.variableType,\r\n        findElementsExecutionTimes: [],\r\n      };\r\n\r\n    case SET_INTERACTIONS_NOT_AVAILABLE:\r\n      return {\r\n        ...state,\r\n        elementInteractionsNotAvailable: true,\r\n      };\r\n\r\n    case SELECT_HOVERED_ELEMENT:\r\n      return {\r\n        ...state,\r\n        hoveredElement: findElementByPath(action.path, state.source),\r\n      };\r\n\r\n    case UNSELECT_HOVERED_ELEMENT:\r\n      return omit(state, 'hoveredElement');\r\n\r\n    case METHOD_CALL_REQUESTED:\r\n      return {\r\n        ...state,\r\n        methodCallInProgress: true,\r\n      };\r\n\r\n    case METHOD_CALL_DONE:\r\n      return {\r\n        ...state,\r\n        methodCallInProgress: false,\r\n      };\r\n\r\n    case SET_FIELD_VALUE:\r\n      return {\r\n        ...state,\r\n        [action.name]: action.value,\r\n      };\r\n\r\n    case SET_EXPANDED_PATHS:\r\n      return {\r\n        ...state,\r\n        expandedPaths: action.paths,\r\n        findElementsExecutionTimes: [],\r\n      };\r\n\r\n    case SHOW_SEND_KEYS_MODAL:\r\n      return {\r\n        ...state,\r\n        sendKeysModalVisible: true\r\n      };\r\n\r\n    case HIDE_SEND_KEYS_MODAL:\r\n      return {\r\n        ...state,\r\n        sendKeysModalVisible: false,\r\n        action: {\r\n          ...state.action,\r\n          sendKeys: null,\r\n        }\r\n      };\r\n\r\n    case START_RECORDING:\r\n      return {\r\n        ...state,\r\n        isRecording: true,\r\n        showRecord: true\r\n      };\r\n\r\n    case PAUSE_RECORDING:\r\n      return {\r\n        ...state,\r\n        isRecording: false,\r\n        showRecord: state.recordedActions.length > 0\r\n      };\r\n\r\n    case CLEAR_RECORDING:\r\n      return {\r\n        ...state,\r\n        recordedActions: []\r\n      };\r\n\r\n    case SET_ACTION_FRAMEWORK:\r\n      return {\r\n        ...state,\r\n        actionFramework: action.framework || DEFAULT_FRAMEWORK\r\n      };\r\n\r\n    case RECORD_ACTION:\r\n      return {\r\n        ...state,\r\n        recordedActions: [\r\n          ...state.recordedActions,\r\n          {action: action.action, params: action.params}\r\n        ]\r\n      };\r\n\r\n    case ADD_ASSIGNED_VAR_CACHE:\r\n      return {\r\n        ...state,\r\n        assignedVarCache: {\r\n          ...state.assignedVarCache,\r\n          [action.varName]: true,\r\n        }\r\n      };\r\n\r\n    case CLEAR_ASSIGNED_VAR_CACHE:\r\n      return {\r\n        ...state,\r\n        assignedVarCache: [],\r\n      };\r\n\r\n    case CLOSE_RECORDER:\r\n      return {\r\n        ...state,\r\n        showRecord: false\r\n      };\r\n\r\n    case SET_SHOW_BOILERPLATE:\r\n      return {...state, showBoilerplate: action.show};\r\n\r\n    case SET_SESSION_DETAILS:\r\n      return {...state, sessionDetails: action.sessionDetails};\r\n\r\n    case SHOW_LOCATOR_TEST_MODAL:\r\n      return {\r\n        ...state,\r\n        isLocatorTestModalVisible: true,\r\n      };\r\n\r\n    case HIDE_LOCATOR_TEST_MODAL:\r\n      return {\r\n        ...state,\r\n        isLocatorTestModalVisible: false,\r\n      };\r\n\r\n    case SET_LOCATOR_TEST_STRATEGY:\r\n      return {\r\n        ...state,\r\n        locatorTestStrategy: action.locatorTestStrategy\r\n      };\r\n\r\n    case SET_LOCATOR_TEST_VALUE:\r\n      return {\r\n        ...state,\r\n        locatorTestValue: action.locatorTestValue\r\n      };\r\n\r\n    case SEARCHING_FOR_ELEMENTS:\r\n      return {\r\n        ...state,\r\n        locatedElements: null,\r\n        locatorTestElement: null,\r\n        isSearchingForElements: true,\r\n      };\r\n\r\n    case SEARCHING_FOR_ELEMENTS_COMPLETED:\r\n      return {\r\n        ...state,\r\n        locatedElements: action.elements,\r\n        isSearchingForElements: false,\r\n      };\r\n\r\n    case GET_FIND_ELEMENTS_TIMES:\r\n      return {\r\n        ...state,\r\n        isFindingElementsTimes: true,\r\n      };\r\n\r\n    case GET_FIND_ELEMENTS_TIMES_COMPLETED:\r\n      return {\r\n        ...state,\r\n        findElementsExecutionTimes: action.findElementsExecutionTimes,\r\n        isFindingElementsTimes: false,\r\n      };\r\n\r\n    case SET_LOCATOR_TEST_ELEMENT:\r\n      return {\r\n        ...state,\r\n        locatorTestElement: action.elementId,\r\n      };\r\n\r\n    case CLEAR_SEARCH_RESULTS:\r\n      return {\r\n        ...state,\r\n        locatedElements: null,\r\n      };\r\n\r\n    case SET_SCREENSHOT_INTERACTION_MODE:\r\n      return {\r\n        ...state,\r\n        screenshotInteractionMode: action.screenshotInteractionMode,\r\n      };\r\n\r\n    case SET_SWIPE_START:\r\n      return {\r\n        ...state,\r\n        swipeStart: {\r\n          x: action.swipeStartX,\r\n          y: action.swipeStartY,\r\n        },\r\n      };\r\n\r\n    case SET_SWIPE_END:\r\n      return {\r\n        ...state,\r\n        swipeEnd: {\r\n          x: action.swipeEndX,\r\n          y: action.swipeEndY,\r\n        },\r\n      };\r\n\r\n    case CLEAR_SWIPE_ACTION:\r\n      return {\r\n        ...state,\r\n        swipeStart: null,\r\n        swipeEnd: null,\r\n      };\r\n\r\n    case SET_SEARCHED_FOR_ELEMENT_BOUNDS:\r\n      return {\r\n        ...state,\r\n        searchedForElementBounds: {\r\n          location: action.location,\r\n          size: action.size,\r\n        }\r\n      };\r\n\r\n    case CLEAR_SEARCHED_FOR_ELEMENT_BOUNDS:\r\n      return {\r\n        ...state,\r\n        searchedForElementBounds: null,\r\n      };\r\n\r\n    case PROMPT_KEEP_ALIVE:\r\n      return {\r\n        ...state,\r\n        showKeepAlivePrompt: true,\r\n      };\r\n\r\n    case HIDE_PROMPT_KEEP_ALIVE:\r\n      return {\r\n        ...state,\r\n        showKeepAlivePrompt: false,\r\n      };\r\n\r\n    case SELECT_ACTION_GROUP:\r\n      return {\r\n        ...state,\r\n        selectedActionGroup: action.group\r\n      };\r\n\r\n    case SELECT_SUB_ACTION_GROUP:\r\n      return {\r\n        ...state,\r\n        selectedSubActionGroup: action.group,\r\n      };\r\n\r\n    case SELECT_INTERACTION_MODE:\r\n      return {\r\n        ...state,\r\n        selectedInteractionMode: action.interaction,\r\n      };\r\n\r\n    case ENTERING_ACTION_ARGS:\r\n      return {\r\n        ...state,\r\n        pendingAction: {\r\n          actionName: action.actionName,\r\n          action: action.action,\r\n          args: [],\r\n        }\r\n      };\r\n\r\n    case SET_ACTION_ARG:\r\n      return {\r\n        ...state,\r\n        pendingAction: {\r\n          ...state.pendingAction,\r\n          args: Object.assign([], state.pendingAction.args, {[action.index]: action.value}), // Replace 'value' at 'index'\r\n        },\r\n      };\r\n\r\n    case REMOVE_ACTION:\r\n      return {\r\n        ...state,\r\n        pendingAction: null,\r\n      };\r\n\r\n    case SET_CONTEXT:\r\n      return {\r\n        ...state,\r\n        currentContext: action.context\r\n      };\r\n\r\n    default:\r\n      return {...state};\r\n  }\r\n}\r\n","import { SET_UPDATE_STATE } from '../actions/Updater';\r\n\r\nconst INITIAL_STATE = {};\r\n\r\nexport default function session (state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case SET_UPDATE_STATE:\r\n      return {...action.updateState};\r\n    default:\r\n      return {...state};\r\n  }\r\n}\r\n","import {\r\n  SET_ENVIRONMENT_VARIABLE, SET_ENVIRONMENT_VARIABLES\r\n} from '../actions/Config';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n  environmentVariables: {},\r\n  defaultEnvironmentVariables: {},\r\n};\r\n\r\nexport default function inspector (state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case SET_ENVIRONMENT_VARIABLE:\r\n      return {\r\n        ...state,\r\n        environmentVariables: {\r\n          ...state.environmentVariables,\r\n          [action.name]: action.value,\r\n        }\r\n      };\r\n\r\n    case SET_ENVIRONMENT_VARIABLES:\r\n      return {\r\n        ...state,\r\n        environmentVariables: action.savedEnvironmentVariables || {},\r\n        defaultEnvironmentVariables: action.defaultEnvironmentVariables,\r\n      };\r\n\r\n    default:\r\n      return {...state};\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport startServer from './StartServer';\r\nimport serverMonitor from './ServerMonitor';\r\nimport session from './Session';\r\nimport inspector from './Inspector';\r\nimport updater from './Updater';\r\nimport config from './Config';\r\n\r\n// create our root reducer\r\nexport default function createRootReducer (history) {\r\n  return combineReducers({\r\n    router: connectRouter(history),\r\n    startServer,\r\n    serverMonitor,\r\n    session,\r\n    inspector,\r\n    updater,\r\n    config,\r\n  });\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createHashHistory } from 'history';\r\nimport { routerMiddleware, routerActions } from 'connected-react-router';\r\nimport { createLogger } from 'redux-logger';\r\nimport actions from '../actions';\r\nimport createRootReducer from '../reducers';\r\n\r\nconst history = createHashHistory();\r\n\r\nconst rootReducer = createRootReducer(history);\r\n\r\nconst configureStore = (initialState) => {\r\n  // Redux Configuration\r\n  const middleware = [];\r\n  const enhancers = [];\r\n\r\n  // Thunk Middleware\r\n  middleware.push(thunk);\r\n\r\n  // Logging Middleware\r\n  const logger = createLogger({\r\n    level: 'info',\r\n    collapsed: true\r\n  });\r\n\r\n  // Skip redux logs in console during the tests\r\n  if (process.env.NODE_ENV !== 'test') {\r\n    middleware.push(logger);\r\n  }\r\n\r\n  // Router Middleware\r\n  const router = routerMiddleware(history);\r\n  middleware.push(router);\r\n\r\n  // Redux DevTools Configuration\r\n  const actionCreators = {\r\n    ...actions,\r\n    ...routerActions\r\n  };\r\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\r\n  /* eslint-disable no-underscore-dangle */\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Options: http://extension.remotedev.io/docs/API/Arguments.html\r\n      actionCreators\r\n    })\r\n    : compose;\r\n  /* eslint-enable no-underscore-dangle */\r\n\r\n  // Apply Middleware & Compose Enhancers\r\n  enhancers.push(applyMiddleware(...middleware));\r\n  const enhancer = composeEnhancers(...enhancers);\r\n\r\n  // Create Store\r\n  const store = createStore(rootReducer, initialState, enhancer);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\r\n      '../reducers',\r\n      // eslint-disable-next-line global-require\r\n      () => store.replaceReducer(require('../reducers').default)\r\n    );\r\n  }\r\n\r\n  return store;\r\n};\r\n\r\nexport default { configureStore, history };","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createHashHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport createRootReducer from '../reducers';\r\n\r\nconst history = createHashHistory();\r\nconst rootReducer = createRootReducer(history);\r\nconst router = routerMiddleware(history);\r\nconst enhancer = applyMiddleware(thunk, router);\r\n\r\nfunction configureStore (initialState) {\r\n  return createStore(rootReducer, initialState, enhancer);\r\n}\r\n\r\nexport default { configureStore, history };","import configureStoreDev from './configureStore.development';\r\nimport configureStoreProd from './configureStore.production';\r\n\r\nconst selectedConfigureStore =\r\n  process.env.NODE_ENV === 'production'\r\n    ? configureStoreProd\r\n    : configureStoreDev;\r\n\r\nexport const { configureStore } = selectedConfigureStore;\r\n\r\nexport const { history } = selectedConfigureStore;\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./configureStore.production'); // eslint-disable-line global-require\r\n} else {\r\n  module.exports = require('./configureStore.development'); // eslint-disable-line global-require\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Root from './containers/Root';\r\nimport ErrorBoundary from './components/ErrorBoundary/ErrorBoundary';\r\nimport { AppContainer } from 'react-hot-loader';\r\nimport Store from './store/configureStore';\r\n\r\nconst { history, configureStore } = Store;\r\n\r\nconst store = configureStore();\r\n\r\nrender(\r\n  <AppContainer>\r\n    <ErrorBoundary>\r\n      <Root store={store} history={history} />\r\n    </ErrorBoundary>\r\n  </AppContainer>,\r\n  document.getElementById('root')\r\n);\r\n\r\nif (module.hot) {\r\n  module.hot.accept('./containers/Root', () => {\r\n    // eslint-disable-next-line global-require\r\n    const NextRoot = require('./containers/Root').default;\r\n    render(\r\n      <AppContainer>\r\n        <NextRoot store={store} history={history} />\r\n      </AppContainer>,\r\n      document.getElementById('root')\r\n    );\r\n  });\r\n}\r\n"]}